{"version":3,"file":"static/js/26.7b4b9861.chunk.js","mappings":"wPA4EA,IAhE2B,SAAHA,GAA0C,IAJrCC,EAICC,EAAMF,EAANE,OAAQC,EAAWH,EAAXG,YAAaC,EAAOJ,EAAPI,QACjD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC1B,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQM,QAAS,EAEdN,EAAOO,KAAI,SAACC,EAAMC,GAChB,MAAgB,iBAAZP,GAAoC,MAAhBM,EAAKE,QAAkBF,EAAKE,QAEhDP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBM,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACR,UAAU,qBAAoBC,SAAA,EAClCF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAEG,EAAKO,WACnBZ,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAEG,EAAKQ,WACnBb,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAEG,EAAKS,SACnBd,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAEG,EAAKU,eAEnBf,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,UAAEc,EAAAA,EAAAA,IAAiBX,EAAKE,WACpCP,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACT,UAAU,gCAAgCU,GAAI,EAAET,UACpDF,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAAS,kBAAMrB,EAAYO,EAAKO,QAAQ,EAACV,SAC/DH,OAGLC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACT,UAAU,gCAAgCU,GAAI,EAAET,UACpDF,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,GAAE,yBAAAC,OAA2BjB,EAAKO,SAAWX,UAAU,cAAaC,UACxEF,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACC,KAAMC,EAAAA,YAfWpB,EAAKqB,IAAM,MAAQpB,EA4CzD,KAxDmBV,EAyDC,sBAxDrBI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEN,MA2D7D,C,yEC7CA,IApBmB,WACjB,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBM,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAP,SAAA,EACHF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAC,oCACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAC,8BACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAC,8BACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAC,8BACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAET,SAAC,kBACbF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACT,UAAU,gCAAgCU,GAAI,EAAET,SAAC,kBAGvDF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACT,UAAU,gCAAgCU,GAAI,EAAET,SAAC,kCAM/D,C,ybCnBMyB,E,SAAQC,EAAMC,OAAO,CACzBC,QAAS,4CACTC,QAAS,MAGXJ,EAAMK,aAAaC,QAAQC,KAAI,SAACD,GAE9B,OADAE,QAAQC,IAAI,mBAAoBC,KAAKC,UAAUL,EAAS,KAAM,IACvDA,CACT,IAEAN,EAAMK,aAAaO,SAASL,KAC1B,SAACK,GACC,OACO,MADCA,EAAShC,OAENgC,EAASC,KAETC,QAAQC,OAAOH,EAE5B,IACA,SAACI,GACC,OAAOF,QAAQC,OAAOC,EACxB,IAGF,I,EAAA,I,+BCtBMC,EAAY,SAACC,GAKjB,OAAOA,EAAM,IAHIC,IAAAA,UAAa,CAC5BC,KAFS,4DAKb,EASMC,EAAe,SAACpC,GACpB,IAAIqB,EAAU,CACZgB,KAAM,CACJrC,QAASA,IAGTiC,EAAMD,EAAU,oBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAQME,EAAoB,SAAC5C,GACzB,IAAI0B,EAAU,CACZgB,KAAM,CACJG,SAAU7C,IAGVsC,EAAMD,EAAU,yBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAUMI,EAAe,SAACC,EAAQ1C,GAC5B,IAAIqB,EAAU,CACZgB,KAAM,CACJK,OAAQA,EACR1C,QAASA,IAGTiC,EAAMD,EAAU,oBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAYMM,EAAY,SAACC,GACjB,IAAIvB,EAAU,CACZgB,KAAM,CACJnC,MAAO0C,EAAO1C,MACdF,QAAS4C,EAAO5C,QAChB6C,UAAWD,EAAOC,UAClBC,QAASF,EAAOE,UAGhBb,EAAMD,EAAU,iBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAUMU,EAAkB,SAACH,GACvB,IAAIvB,EAAU,CACZgB,KAAM,CACJpC,QAAS2C,EAAO3C,QAChBE,YAAayC,EAAOzC,cAGpB8B,EAAMD,EAAU,uBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAaMW,EAAoB,SAAAC,EAAAC,GAAA,OAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAUC,GAAO,IAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzB/C,EAAMgD,IAAI,sDAADrD,OACqB8C,EAAQ,KAAA9C,OAAI+C,EAAO,YACzE,CACEO,aAAc,gBAEjB,OALgB,OAAXN,EAAWE,EAAAK,KAAAL,EAAAM,OAAA,UAOVC,EAAAA,EAAAA,IAAkBT,IAAY,wBAAAE,EAAAQ,OAAA,GAAAb,EAAA,MACtCc,MAAA,KAAAC,UAAA,EAOKC,EAAoB,SAAC3B,GACzB,IAAIvB,EAAU,CACZgB,KAAMO,EACN4B,QAAS,CACPA,QAAS,CACP,eAAgB,yBAIlBvC,EAAMD,EAAU,yBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KAAMhB,EAAQmD,QAC/C,EASMC,EAAqB,SAAC7B,GAC1B,IAAIvB,EAAU,CACZgB,KAAM,CACJqC,SAAU9B,EAAO8B,SACjBC,YAAa/B,EAAO+B,YACpBC,YAAahC,EAAOgC,cAGpB3C,EAAMD,EAAU,0BAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KAAMhB,EAAQmD,QAC/C,EAYMK,EAAY,SAACjC,GACjB,IAAIvB,EAAU,CACZgB,MAAIyC,EAAAA,EAAAA,GAAA,GACClC,IAGHX,EAAMD,EAAU,iBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAYM0C,EAAc,SAACnC,GACnB,IAAIvB,EAAU,CACZgB,MAAIyC,EAAAA,EAAAA,GAAA,GACClC,IAGHX,EAAMD,EAAU,mBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAYM2C,EAAc,SAACpC,GACnB,IAAIvB,EAAU,CACZgB,MAAIyC,EAAAA,EAAAA,GAAA,GACClC,IAGHX,EAAMD,EAAU,mBAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KACjC,EAYM4C,EAAqB,WACzB,IAAIhD,EAAMD,EAAU,0BAEpB,OAAOjB,EAAMuB,KAAKL,EACpB,EAQMiD,EAAqB,WACzB,IAAIjD,EAAMD,EAAU,0BAEpB,OAAOjB,EAAMuB,KAAKL,EACpB,EAUMkD,EAA0B,SAACvC,GAC/B,IAAIvB,EAAU,CACZgB,KAAM,CACJqC,SAAU9B,EAAO8B,SACjBE,YAAahC,EAAOgC,cAGpB3C,EAAMD,EAAU,+BAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KAAMhB,EAAQmD,QAC/C,EAEMY,EAAkC,SAACxC,GACvC,IAAIvB,EAAU,CACZgB,KAAM,CACJ1C,OAAQ,gBAGRsC,EAAMD,EAAU,+BAEpB,OAAOjB,EAAMuB,KAAKL,EAAKZ,EAAQgB,KAAMhB,EAAQmD,QAC/C,C,qFC1PA,IAxCe,SAACa,GAAiB,IAADtG,EAC9BuG,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B1D,EAAI4D,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/B5D,EAAK6D,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA8BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA4B1B,MAAO,CACLnE,KAAAA,EACAG,MAAAA,EACAiE,QAAAA,EACA3E,QA9BW,kBAAAtC,EAAAA,IAAAqE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4C,IAAA,IAAAC,EAAAC,EAAAC,EAAA1E,EAAA2E,EAAAC,EAAAjC,UAAA,OAAAjB,EAAAA,EAAAA,KAAAM,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAEF,IADZmC,GAAW,GACXJ,EAAS,IAAGM,EAAAI,EAAAhH,OAFY6G,EAAI,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAE,EAAAF,GAAA,OAAAG,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAIHuB,EAAWhB,WAAC,EAAG+B,GAAK,OAG1B,OAHXzE,EAAQ6E,EAAAvC,KACd1C,QAAQC,IAAI,aAAcC,KAAKC,UAAUC,IACzCJ,QAAQC,IAAI,gBAA4B,OAAX6D,QAAW,IAAXA,OAAW,EAAXA,EAAaqB,MAC1ChB,EAAQ/D,GAAS6E,EAAAtC,OAAA,SACVvC,GAAQ,QAAA6E,EAAA3C,KAAA,GAAA2C,EAAAG,GAAAH,EAAA,SAETF,EAAQ,2BAAA5F,OAA8B0F,EAAI,KAAA1F,OAAI8F,EAAAG,GAAEC,QAAO,KAC7DrF,QAAQQ,MAAMuE,GACdT,EAASW,EAAAG,GAAEC,SAAW,iCAAgC,QAErC,OAFqCJ,EAAA3C,KAAA,GAEtDoC,GAAW,GAAMO,EAAAK,OAAA,6BAAAL,EAAApC,OAAA,GAAA8B,EAAA,0BAEpB7B,MAAA,KAAAC,UAAA,EAeCwC,WAbiB,WACjBjB,EAAS,GACX,EAYEkB,UAVgB,WAChBrB,EAAQ,KACV,EAUF,C,qFCGA,IAzCkB,SAACsB,GACjB,IAAA1B,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtC2B,EAAOzB,EAAA,GAAE0B,EAAU1B,EAAA,GAK1B,OAJA2B,EAAAA,EAAAA,YAAU,WACRD,EAAWF,EAAMI,OACnB,GAAG,CAACJ,EAAMI,UAGRhI,EAAAA,EAAAA,KAAAiI,EAAAA,SAAA,CAAA/H,UACEM,EAAAA,EAAAA,MAAC0H,EAAAA,GAAM,CAACC,UAAU,SAASN,QAASA,EAASO,QAASR,EAAMS,WAAWnI,SAAA,EACrEF,EAAAA,EAAAA,KAACsI,EAAAA,GAAY,CAAApI,UACXF,EAAAA,EAAAA,KAACuI,EAAAA,GAAW,CAAArI,SAAE0H,EAAMY,OAAS,QAE/BxI,EAAAA,EAAAA,KAACyI,EAAAA,GAAU,CAAAvI,SAAE0H,EAAMc,eACnBlI,EAAAA,EAAAA,MAACmI,EAAAA,GAAY,CAAAzI,SAAA,CACV0H,EAAMgB,cACL5I,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,MAAM,YAAYC,QAASyG,EAAMiB,cAAc3I,SACrD0H,EAAMgB,cAGVhB,EAAMkB,eACL9I,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAASyG,EAAMmB,eAAe7I,SACpD0H,EAAMkB,sBAOrB,C,qFCXA,IAjBe,SAAClB,GACd,IAAA1B,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtC2B,EAAOzB,EAAA,GAAE0B,EAAU1B,EAAA,GAK1B,OAJA2B,EAAAA,EAAAA,YAAU,WACRD,EAAWF,EAAMI,OACnB,GAAG,CAACJ,EAAMI,SAEHH,GACL7H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAACgJ,EAAAA,GAAQ,CAAC/I,UAAU,UAEpB,IACN,C,gFCQA,IAlBiB,SAAHN,GAAuD,IAAjDsJ,EAAUtJ,EAAVsJ,WAAYC,EAAWvJ,EAAXuJ,YAAaC,EAAgBxJ,EAAhBwJ,iBAC3C,OACEnJ,EAAAA,EAAAA,KAACoJ,IAAa,CACZC,cAAe,kBACfC,UAAW,cACXC,UAAWN,EACXO,UAAWN,EACXO,aAAcN,EACdO,qBAAsB,EACtBC,mBAAoB,EACpBC,mBAAoB,aACpBC,sBAAuB,mBACvBC,kBAAmB,mBACnBC,kBAAmB,6BACnBC,gBAAiB,4BAGvB,C,sKCXMC,EAAsB,SAACrK,GAC3B,OAAOI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEN,GAC7D,EAoFA,UAlF0B,WAAO,IAADsK,EAC9BC,GAA0CC,EAAAA,EAAAA,GAAOjH,EAAAA,IAAzClB,EAAOkI,EAAPlI,QAASO,EAAI2H,EAAJ3H,KAAMoE,EAAOuD,EAAPvD,QAASjE,EAAKwH,EAALxH,MAC1B0H,GAAkBD,EAAAA,EAAAA,GAAO/G,EAAAA,IAC/B6C,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CoE,EAAWlE,EAAA,GAAEmE,EAAcnE,EAAA,GAClCG,GAAoCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5CiE,EAAWhE,EAAA,GAAEiE,EAAYjE,EAAA,GAChCE,GAAkCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAvCgE,EAAS/D,EAAA,GAAEgE,EAAYhE,EAAA,GAC9BiE,GAAsCzE,EAAAA,EAAAA,UAAS,GAAE0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAA1C1B,EAAW2B,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAoC5E,EAAAA,EAAAA,UAAS,GAAE6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAAxC9B,EAAU+B,EAAA,GAAEC,EAAaD,EAAA,IAGhCjD,EAAAA,EAAAA,YAAU,WACR9F,EAAQ,CAAC,MACT6I,EAAe,EAEjB,GAAG,CAACT,EAAgB7H,QAEpBuF,EAAAA,EAAAA,YAAU,WACJvF,GAAmC,QAA3BA,EAAKjC,OAAO2K,aACtBD,EAAcE,KAAKC,KAAK5I,EAAKA,KAAK6I,OAAOlL,OAVxB,KAWjBoK,EAAe/H,EAAKA,KAAK6I,OAAOC,WAEpC,GAAG,CAAC9I,IAEJ,IAAM+I,EAfe,GAeFrC,EACbsC,EAAWD,EAhBI,GAiBf1L,EAAoB,OAAXyK,QAAW,IAAXA,OAAW,EAAXA,EAAamB,MAAMF,EAAYC,GAc9C,OAAI7I,GAAS0H,EAAgB1H,MAAcsH,EAAoB,6EAG7DzJ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,uBAAsBC,SAAA,EACnCM,EAAAA,EAAAA,MAACkL,EAAAA,GAAU,CAAAxL,SAAA,EACTF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAU,IACV/E,GAAWyD,EAAgBzD,SAC1B5G,EAAAA,EAAAA,KAAC4L,EAAAA,EAAM,CAAC5D,QAAM,KAEdxH,EAAAA,EAAAA,MAAAyH,EAAAA,SAAA,CAAA/H,SAAA,EACS,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQM,QAAS,GAChBH,EAAAA,EAAAA,KAAC6L,EAAAA,EAAkB,CACjBhM,OAAQA,EACRE,QAAQ,eACRD,YAAa,SAACgM,GAAC,OAvBRlL,EAuByBkL,EAtB5CrB,GAAa,QACbE,EAAa/J,GAFK,IAACA,CAuB2B,IAGpCqJ,EAAoB,uBAEjB,OAAJzH,QAAI,IAAJA,GAAgB,QAAZ0H,EAAJ1H,EAAMA,KAAKuJ,aAAK,IAAA7B,OAAZ,EAAJA,EAAkB/J,QAlDR,KAmDTH,EAAAA,EAAAA,KAACgM,EAAAA,EAAQ,CACP/C,WAAYA,EACZC,YAAaA,EACbC,iBAnCW,SAAC8C,GACxBnB,EAAemB,EAAaC,SAC9B,WAuCIlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAS,CACR3D,MAAM,2BACNR,OAAQwC,EACRnC,WAAY,kBAAMoC,GAAa,EAAM,EACrC/B,YAAY,gEACZG,cAAe,kBAAM4B,GAAa,EAAM,EACxC1B,eAAgB,kBAvCpBsB,EAAgBpI,QAAQ,WAAYyI,QACpCD,GAAa,EAsCiC,EAC1C7B,YAAY,eACZE,aAAa,mBAIrB,C,qEC9FO,IAAMrH,EAAgB,CAAC,UAAU,ia","sources":["components/ApproveContentList.js","components/HeaderList.js","service/apiHelper.js","service/api.js","service/useApi.js","views/Share/InfoModal.js","views/Share/Loader.js","views/Share/Pagenate.js","views/quoteToCash/QuotationComplete.js","../node_modules/@coreui/icons/js/free/cil-find-in-page.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage } from '@coreui/icons'\nimport { CRow, CCol, CButton } from '@coreui/react'\nimport { renderStatusText } from '@utils/uitilFuntions'\nimport PropTypes from 'prop-types'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst ApproveContentList = ({ subset, handleClick, btnName }) => {\n  return (\n    <div className=\"list-body loa-list\">\n      {subset?.length > 0\n        ? // eslint-disable-next-line array-callback-return\n          subset.map((item, i) => {\n            if (btnName === '終止' && item.status !== 'E' && item.status !== 'D')\n              return (\n                <div className=\"list-item\" key={item.num + 'btn' + i}>\n                  <CRow className=\"align-items-center\">\n                    <CCol sm={2}>{item.orderId}</CCol>\n                    <CCol sm={2}>{item.company}</CCol>\n                    <CCol sm={2}>{item.taxID}</CCol>\n                    <CCol sm={2}>{item.createdDate}</CCol>\n\n                    <CCol sm={1}>{renderStatusText(item.status)}</CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={1}>\n                      <CButton color=\"warning\" onClick={() => handleClick(item.orderId)}>\n                        {btnName}\n                      </CButton>\n                    </CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={2}>\n                      <Link to={`/pdfContainer?orderId=${item.orderId}`} className=\"action-icon\">\n                        <CIcon icon={cilFindInPage} />\n                      </Link>\n                    </CCol>\n                  </CRow>\n                </div>\n              )\n\n            return (\n              <div className=\"list-item\" key={item.num + 'btn' + i}>\n                <CRow className=\"align-items-center\">\n                  <CCol sm={2}>{item.orderId}</CCol>\n                  <CCol sm={2}>{item.company}</CCol>\n                  <CCol sm={2}>{item.taxID}</CCol>\n                  <CCol sm={2}>{item.createdDate}</CCol>\n\n                  <CCol sm={1}>{renderStatusText(item.status)}</CCol>\n                  <CCol className=\"d-flex justify-content-center\" sm={1}>\n                    <CButton color=\"warning\" onClick={() => handleClick(item.orderId)}>\n                      {btnName}\n                    </CButton>\n                  </CCol>\n                  <CCol className=\"d-flex justify-content-center\" sm={2}>\n                    <Link to={`/pdfContainer?orderId=${item.orderId}`} className=\"action-icon\">\n                      <CIcon icon={cilFindInPage} />\n                    </Link>\n                  </CCol>\n                </CRow>\n              </div>\n            )\n          })\n        : renderApiStatusText('無資料')}\n    </div>\n  )\n}\n\nApproveContentList.propTypes = {\n  subset: PropTypes.array,\n  handleClick: PropTypes.func,\n  btnName: PropTypes.string,\n}\n\nexport default ApproveContentList\n","import { CRow, CCol } from '@coreui/react'\nimport React from 'react'\n\nconst HeaderList = () => {\n  return (\n    <div className=\"list-head\">\n      <CRow>\n        <CCol sm={2}>報價單編號</CCol>\n        <CCol sm={2}>客戶名稱</CCol>\n        <CCol sm={2}>客戶統編</CCol>\n        <CCol sm={2}>建立時間</CCol>\n        <CCol sm={1}>狀態</CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={1}>\n          操作\n        </CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={2}>\n          預覽/下載\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default HeaderList\n","import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: array; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      statuses: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 上傳價格冊檔案\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\n/**\n * adfPipelineTrigger\n * pdf上傳Trigger\n * @returns\n */\n\nconst adfPipelineTrigger = () => {\n  let url = createUrl('api/adfPipelineTrigger')\n\n  return $http.post(url)\n}\n\n/**\n * updateLatestVersionData\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst updateLatestVersionData = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nconst updateLatestVersionDataByStatus = (params) => {\n  let request = {\n    body: {\n      status: 'IN_PROGRESS',\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n  adfPipelineTrigger,\n  updateLatestVersionData,\n  updateLatestVersionDataByStatus,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst InfoModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeModal}>\n        <CModalHeader>\n          <CModalTitle>{props.title || ''}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.infoContain}</CModalBody>\n        <CModalFooter>\n          {props.leftBtnText && (\n            <CButton color=\"secondary\" onClick={props.handleLeftBtn}>\n              {props.leftBtnText}\n            </CButton>\n          )}\n          {props.rightBtnText && (\n            <CButton color=\"primary\" onClick={props.handleRightBtn}>\n              {props.rightBtnText}\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string,\n  isShow: PropTypes.bool,\n  closeModal: PropTypes.func,\n  handleRightBtn: PropTypes.func,\n  handleLeftBtn: PropTypes.func,\n  infoContain: PropTypes.string,\n  leftBtnText: PropTypes.string,\n  rightBtnText: PropTypes.string,\n}\n\nexport default InfoModal\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { CContainer } from '@coreui/react'\nimport Pagenate from '@views/Share/Pagenate'\nimport InfoModal from '@views/Share/InfoModal'\nimport { getOrdersByStatus, approveOrder } from '@service/api'\nimport useApi from '@service/useApi'\nimport HeaderList from '@components/HeaderList'\nimport Loader from '@views/Share/Loader'\nimport ApproveContentList from '@components/ApproveContentList'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst QuotationComplete = () => {\n  const { request, data, loading, error } = useApi(getOrdersByStatus)\n  const approveOrderApi = useApi(approveOrder)\n  const [reverseData, setReverseData] = useState([])\n  const [isShowModal, setShowModal] = useState(false)\n  const [comfirmId, setComfirmId] = useState('')\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(1)\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    request(['C'])\n    setCurrentPage(0)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [approveOrderApi.data])\n\n  useEffect(() => {\n    if (data && data.status.toString() === '200') {\n      setTotalPages(Math.ceil(data.data.orders.length / itemsPerPage))\n      setReverseData(data.data.orders.reverse())\n    }\n  }, [data])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = reverseData?.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n  const handleClick = (orderId) => {\n    setShowModal(true)\n    setComfirmId(orderId)\n  }\n  const handleChangeStatus = () => {\n    approveOrderApi.request('complete', comfirmId)\n    setShowModal(false)\n  }\n\n  if (error || approveOrderApi.error) return renderApiStatusText('系統忙碌中，請稍後再試。')\n\n  return (\n    <div className=\"lists-container px-3\">\n      <CContainer>\n        <HeaderList />\n        {loading || approveOrderApi.loading ? (\n          <Loader isShow />\n        ) : (\n          <>\n            {subset?.length > 0 ? (\n              <ApproveContentList\n                subset={subset}\n                btnName=\"成案\"\n                handleClick={(e) => handleClick(e)}\n              />\n            ) : (\n              renderApiStatusText('無資料')\n            )}\n            {data?.data.order?.length > itemsPerPage && (\n              <Pagenate\n                totalPages={totalPages}\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            )}\n          </>\n        )}\n      </CContainer>\n      <InfoModal\n        title=\"狀態更變\"\n        isShow={isShowModal}\n        closeModal={() => setShowModal(false)}\n        infoContain=\"確定要將狀態改成成案?\"\n        handleLeftBtn={() => setShowModal(false)}\n        handleRightBtn={() => handleChangeStatus()}\n        leftBtnText=\"取消\"\n        rightBtnText=\"確認\"\n      />\n    </div>\n  )\n}\n\nexport default QuotationComplete\n","export const cilFindInPage = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M334.627,16H48V496H472V153.373ZM440,464H80V48H321.373L440,166.627Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M239.861,152a95.861,95.861,0,1,0,53.624,175.284l68.03,68.029,22.627-22.626-67.5-67.5A95.816,95.816,0,0,0,239.861,152ZM176,247.861a63.862,63.862,0,1,1,63.861,63.861A63.933,63.933,0,0,1,176,247.861Z' class='ci-primary'/>\"]"],"names":["_ref","text","subset","handleClick","btnName","_jsx","className","children","length","map","item","i","status","_jsxs","CRow","CCol","sm","orderId","company","taxID","createdDate","renderStatusText","CButton","color","onClick","Link","to","concat","CIcon","icon","cilFindInPage","num","$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","body","post","getOrdersByStatus","statuses","approveOrder","action","getOrders","params","startDate","endDate","getOrderReports","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","adfPipelineTrigger","updateLatestVersionData","updateLatestVersionDataByStatus","apiFunction","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","Array","name","t0","message","finish","resetError","resetData","props","visible","setVisible","useEffect","isShow","_Fragment","CModal","alignment","onClose","closeModal","CModalHeader","CModalTitle","title","CModalBody","infoContain","CModalFooter","leftBtnText","handleLeftBtn","rightBtnText","handleRightBtn","CSpinner","totalPages","currentPage","handlePageChange","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","renderApiStatusText","_data$data$order","_useApi","useApi","approveOrderApi","reverseData","setReverseData","isShowModal","setShowModal","comfirmId","setComfirmId","_useState7","_useState8","setCurrentPage","_useState9","_useState10","setTotalPages","toString","Math","ceil","orders","reverse","startIndex","endIndex","slice","CContainer","HeaderList","Loader","ApproveContentList","e","order","Pagenate","selectedPage","selected","InfoModal"],"sourceRoot":""}