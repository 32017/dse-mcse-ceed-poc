{"version":3,"file":"static/js/516.3758bfe3.chunk.js","mappings":"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","sources":["service/apiHelper.js","service/api.js","service/useApi.js","utils/setting.js","views/Share/InfoModal.js","views/Share/Loader.js","views/Share/withVersion.js","utils/quotationVariables.js","components/SearchProductModal.js","views/quoteToCash/Quotation.js"],"sourcesContent":["import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: array; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      statuses: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 上傳價格冊檔案\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\n/**\n * adfPipelineTrigger\n * pdf上傳Trigger\n * @returns\n */\n\nconst adfPipelineTrigger = () => {\n  let url = createUrl('api/adfPipelineTrigger')\n\n  return $http.post(url)\n}\n\n/**\n * updateLatestVersionData\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst updateLatestVersionData = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nconst updateLatestVersionDataByStatus = (params) => {\n  let request = {\n    body: {\n      status: 'IN_PROGRESS',\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n  adfPipelineTrigger,\n  updateLatestVersionData,\n  updateLatestVersionDataByStatus,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","const CAGETORY_OPTIONS = [\n  {\n    id: 'additional_product',\n    displayName: 'Additional Product',\n  },\n  {\n    id: 'enterprise',\n    displayName: 'Enterprise',\n  },\n  {\n    id: 'faculty',\n    displayName: 'Faculty',\n  },\n  {\n    id: 'mvlp',\n    displayName: 'MVLP',\n  },\n  {\n    id: 'server_and_cloud_enrollment',\n    displayName: 'Server and Cloud Enrollment',\n  },\n  {\n    id: 'student',\n    displayName: 'Student',\n  },\n  {\n    id: 'mpsa',\n    displayName: 'MPSA',\n  },\n]\n\nconst PRICE_LEVEL_OPTIONS = [\n  {\n    id: 'A',\n    displayName: 'A',\n  },\n  {\n    id: 'B',\n    displayName: 'B',\n  },\n  {\n    id: 'C',\n    displayName: 'C',\n  },\n  {\n    id: 'D',\n    displayName: 'D',\n  },\n  {\n    id: 'NON SPECIFIC',\n    displayName: 'NON SPECIFIC',\n  },\n]\nexport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS }\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst InfoModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeModal}>\n        <CModalHeader>\n          <CModalTitle>{props.title || ''}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.infoContain}</CModalBody>\n        <CModalFooter>\n          {props.leftBtnText && (\n            <CButton color=\"secondary\" onClick={props.handleLeftBtn}>\n              {props.leftBtnText}\n            </CButton>\n          )}\n          {props.rightBtnText && (\n            <CButton color=\"primary\" onClick={props.handleRightBtn}>\n              {props.rightBtnText}\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string,\n  isShow: PropTypes.bool,\n  closeModal: PropTypes.func,\n  handleRightBtn: PropTypes.func,\n  handleLeftBtn: PropTypes.func,\n  infoContain: PropTypes.string,\n  leftBtnText: PropTypes.string,\n  rightBtnText: PropTypes.string,\n}\n\nexport default InfoModal\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react'\nimport { getProductVersions } from '@service/api'\nimport useApi from '@service/useApi'\nimport Loader from './Loader'\n\n// eslint-disable-next-line react/display-name\nconst withVersion = (Component) => (props) => {\n  const [apiData, setApiData] = useState(null)\n  const [refresh, setRefresh] = useState(false)\n\n  const { request, data, error, loading } = useApi(getProductVersions)\n  useEffect(() => {\n    request()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refresh])\n\n  const callbackFunc = () => {\n    setRefresh(!refresh)\n  }\n\n  useEffect(() => {\n    handleResponseFlow()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, data])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleResponseFlow = () => {\n    if (error) {\n      console.error('execute getProductVersions() error', error)\n    }\n\n    if (data) {\n      if (data.status === 200) {\n        setApiData(data.data)\n      } else {\n        console.log('execute getProductVersions() data error', data?.status)\n      }\n    }\n  }\n\n  return loading ? (\n    <Loader isShow />\n  ) : (\n    <Component {...props} version={apiData} callbackFunc={callbackFunc} />\n  )\n}\nexport default withVersion\n","export const initData = {\n  basicInfo: {\n    orderNum: '',\n    company: '',\n    taxID: '',\n    contactPerson: '',\n    email: '',\n    phone: '',\n    address: '',\n  },\n  quotationGroup: [\n    {\n      groupName: '',\n      productLists: [\n        {\n          type: 'PS',\n          partNum: '',\n          productDes: '',\n          startDate: null,\n          measure: '',\n          quantity: 0,\n          unitPrice: 0,\n          QTY: 0,\n          country: '',\n          totalAmount: 0,\n          estimatedRetailPrice: 0,\n          currentNetPrice: 0,\n          discountedNetPrice: 0,\n          customerDiscount: 0,\n          maximumReslaePrice: 0,\n          markupMargin: 0,\n        },\n      ],\n    },\n  ],\n  quotationTotal: {\n    taxExcluded: 0,\n    taxIncluded: 0,\n    tax: 0,\n  },\n}\n\nexport const headfields = [\n  { key: 'Part Number', label: 'Part Number', _style: { minWidth: '145px' } },\n  { key: 'Product Description', label: 'Product Description', _style: { minWidth: '300px' } },\n  { key: 'Usge start Date', label: 'Usge start Date' },\n  { key: 'Unit of Measure', label: 'Unit of Measure' },\n  { key: 'Unit of Quantity', label: 'Unit of Quantity' },\n  { key: 'Unit Price (TWD)', label: 'Unit Price (TWD)' },\n  { key: 'License Qty', label: 'License Qty' },\n  { key: 'Usage country', label: 'Usage country' },\n  { key: 'Total Amount (TWD)', label: 'Total Amount (TWD)' },\n  {\n    key: 'Estimated Retail Price',\n    label: 'Estimated Retail Price/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Current Net Price (TWD)',\n    label: 'Current Net Price (TWD)/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Discounted Net Price (CPS)',\n    label: 'Discounted Net Price (CPS)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Customer Discount %',\n    label: 'Customer Discount %',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Maximum Reslae Price (MRP)',\n    label: 'Maximum Reslae Price (MRP)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'mark up margin',\n    label: 'mark up margin',\n    _props: { className: 'text-warning' },\n    _style: { minWidth: '120px' },\n  },\n  {\n    key: 'active',\n    label: '',\n  },\n]\n\nexport const searchTableHead = [\n  {\n    key: 'action',\n    label: '選擇',\n    _props: { color: 'dark' },\n    _style: { width: '50px' },\n  },\n  {\n    key: 'search_pd_num',\n    label: 'PN',\n    _props: { color: 'dark' },\n    _style: { width: '100px' },\n  },\n  {\n    key: 'search_pd_name',\n    label: 'Item Name',\n    _props: { color: 'dark' },\n    _style: { width: '40%' },\n  },\n  {\n    key: 'search_level',\n    label: 'Level',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_unit',\n    label: 'Purchase Unit',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_period',\n    label: 'Purchase Period',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_current_net_price',\n    label: 'Current Net Price',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_estimated_retail_price',\n    label: 'Estimated Retail Price',\n    _props: { color: 'dark' },\n  },\n]\n\nexport const rules = `1. 本報價單為含稅報價，此報價為三年期最低總價，本報價不含安裝、教育訓練費用、定製化及衍生性專業服務等。\\n2. 本報價單有效期限為報價日起五天，逾期報價失效。\\n3. 買方應於收到賣方發票後【卅】天內，將應付款項一次性支付予賣方。\\n4. 買方簽回本報價單後視同正式採購合約，買方不得以任何理由向賣方/原廠要求退換貨或退費，亦不得以簽回之買方公司員工無簽約代理權而拒絕付款。授權期間到期若有  未使用的金額、授權用量等，買方同意自動放棄相關權益，無法申請遞延，亦無法轉換其他服務等。\\n5. Enterprise合約（EA）三年期間，PAL(Partner Admin Link)的MPN ID為賣方所有。買方須依原廠之要求，完成相關線上電子簽署作業【包含CPOR(Claiming Partner of Record)及DPOR(Digital Partner of Record)客戶關聯等】。\\n6. 本軟體之使用若有需透過帳號密碼之方式者，賣方不負任何帳號密碼保管責任，買方應善盡保管之責，且經常不定時更新密碼，以避免遭受第三人之攻擊或盜用等。透過該組帳號密碼所進行之所有行為，皆視同買方行為，買方應自負所有法律責任，及因此所產生之各種可能遭受之損害。\\n7. 本軟體之最終版本由原廠按現狀提供，賣方不為任何明示或默示之擔保，亦不保證所提出之給付，並無任何抄襲或仿冒之情事，或未侵害第三人之智慧財產權或其他權利。賣方亦不承擔後續維修、更新、零配件供應等。\\n8. 買方應切實遵守原廠之授權條款、資訊安全控管規範及使用限制等規定，並簽署原廠要求之相關合約文件。如有違反，買方除應按本報價單之最低總價十倍之數額，作為懲罰性賠償金賠償於賣方外，並應自行負擔民、刑事責任。\\n9. 若買方單方面解除或終止本報價單，除不得請求賣方返還任何款項且仍須依本報價單總價付款外，買方尚須給付賣方如下之懲罰性違約金，如賣方另有其他損害，買方亦應賠償之：\\n(1) 賣方尚未向原廠採購時，以本報價單總價之50%作為懲罰性違約金。\\n(2) 賣方已向原廠採購時，以本報價單總價之100%作為懲罰性違約金。\\n10. 賣方對買方因本報價單所生之損害賠償責任，以本報價單總價之百分之十為上限。但不適用於買方依本報價單應支付賣方之價款，買方之法定代理人應與買方負連帶賠償責任。\\n11. 本報價單條款效力優於於先前、同時或嗣後就本軟體採購所為之一切口頭約定或買方之書面訂單等。\\n12. 就本報價單有關涉訟事項，以臺灣臺北地方法院為第一審管轄法院。`\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CFormSelect,\n  CFormCheck,\n} from '@coreui/react'\nimport { searchTableHead } from '@utils/quotationVariables'\nimport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS } from '@utils/setting'\nimport { getProducts } from '@service/api'\nimport { cloneDeep } from 'lodash'\nimport Loader from '@views/Share/Loader'\n\nconst SearchProductModal = ({ open, setCurrentItemData, onClose }) => {\n  const [searchParams, setSearchParams] = useState({\n    category: CAGETORY_OPTIONS[0].id,\n    partNum: '',\n    keywords: '',\n    level: PRICE_LEVEL_OPTIONS[0].id,\n  })\n  const [searchItems, setSearchItems] = useState([])\n  const [currentSearchItem, setCurrentSearchItem] = useState(null)\n  const [pageHistory, setPageHistory] = useState({ params: null, pages: { 0: '' } })\n  const [currentPage, setCurrentPage] = useState(0)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const searchProduct = async (params, pageIdx = 0) => {\n    setIsLoading(true)\n    const { keywords, level, partNum, category } = params\n    if (!category || !level) return\n    if (keywords?.length < 5 && !partNum) return\n    const { data } = await getProducts({\n      category,\n      partNumber: partNum,\n      itemName: keywords,\n      level,\n      continuationToken: pageIdx ? pageHistory.pages[pageIdx] : null,\n    })\n    if (data?.products) {\n      let pages = cloneDeep(pageHistory.pages)\n      pages[pageIdx + 1] = data?.continuation || ''\n      setPageHistory((prevState) => ({\n        params: pageIdx === 0 ? { keywords, level, partNum, category } : prevState.params,\n        pages,\n      }))\n      setCurrentPage(pageIdx)\n      setSearchItems(data.products)\n    }\n    setIsLoading(false)\n  }\n\n  const newSearch = () => {\n    setCurrentSearchItem(null)\n    setPageHistory({ params: null, pages: { 0: '' } })\n    searchProduct(searchParams, 0)\n  }\n\n  const goToPage = (action) => {\n    if (action === 'prev') searchProduct(pageHistory.params, currentPage - 1)\n    if (action === 'next') searchProduct(pageHistory.params, currentPage + 1)\n  }\n\n  const handleClose = () => {\n    setSearchParams({\n      category: CAGETORY_OPTIONS[0].id,\n      partNum: '',\n      keywords: '',\n      level: PRICE_LEVEL_OPTIONS[0].id,\n    })\n    setSearchItems([])\n    setCurrentSearchItem(null)\n    setPageHistory({ params: null, pages: { 0: '' } })\n    setCurrentPage(0)\n    onClose()\n  }\n\n  const setCurrentData = () => {\n    if (!currentSearchItem) return\n    if (setCurrentItemData) setCurrentItemData(currentSearchItem)\n    handleClose()\n  }\n\n  return (\n    <CModal className=\"product-select-modal\" visible={open} onClose={handleClose}>\n      <CModalHeader>\n        <CModalTitle>搜尋產品項目</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <div className=\"search-filter\">\n          <CRow>\n            <CCol className=\"col-3\">\n              <CInputGroup>\n                <CInputGroupText>類別</CInputGroupText>\n                <CFormSelect\n                  onChange={(e) => setSearchParams({ ...searchParams, category: e.target.value })}\n                >\n                  {CAGETORY_OPTIONS.map((item) => {\n                    return (\n                      <option key={item.id} value={item.id}>\n                        {item.displayName}\n                      </option>\n                    )\n                  })}\n                </CFormSelect>\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-2\">\n              <CInputGroup>\n                <CInputGroupText>PN</CInputGroupText>\n                <CFormInput\n                  placeholder=\"part number\"\n                  minLength={5}\n                  onChange={(e) => setSearchParams({ ...searchParams, partNum: e.target.value })}\n                />\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-4\">\n              <CInputGroup>\n                <CInputGroupText>關鍵字</CInputGroupText>\n                <CFormInput\n                  placeholder=\"請輸入關鍵字(至少為5字)\"\n                  minLength={5}\n                  onChange={(e) => setSearchParams({ ...searchParams, keywords: e.target.value })}\n                />\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-2\">\n              <CInputGroup>\n                <CInputGroupText>Level</CInputGroupText>\n                <CFormSelect\n                  onChange={(e) => setSearchParams({ ...searchParams, level: e.target.value })}\n                >\n                  {PRICE_LEVEL_OPTIONS.map((item) => {\n                    return (\n                      <option key={item.id} value={item.id}>\n                        {item.displayName}\n                      </option>\n                    )\n                  })}\n                </CFormSelect>\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-1\">\n              <CButton\n                className=\"w-100\"\n                color=\"primary\"\n                variant=\"outline\"\n                onClick={newSearch}\n                disabled={!searchParams.partNum && searchParams?.keywords?.length < 5}\n              >\n                搜尋\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"search-result\">\n          <h5>\n            篩選結果 <span className=\"text-small\">(本頁有{searchItems.length}筆資料)</span>\n          </h5>\n          <div className=\"result-table\">\n            <CTable hover columns={searchTableHead}>\n              <CTableBody>\n                {!isLoading ? (\n                  <>\n                    {searchItems && searchItems.length ? (\n                      searchItems.map((item) => {\n                        return (\n                          <CTableRow key={`${item.partNumber}`}>\n                            <CTableDataCell>\n                              <CFormCheck\n                                type=\"radio\"\n                                name={`searchProduct`}\n                                id={item.partNumber}\n                                value={item.partNumber}\n                                onChange={() => {\n                                  setCurrentSearchItem(item)\n                                }}\n                                defaultChecked={\n                                  currentSearchItem?.partNumber\n                                    ? item.partNumber === currentSearchItem.partNumber\n                                    : false\n                                }\n                              />\n                            </CTableDataCell>\n                            <CTableDataCell>{item.partNumber}</CTableDataCell>\n                            <CTableDataCell>{item.itemName}</CTableDataCell>\n                            <CTableDataCell>{item.level}</CTableDataCell>\n                            <CTableDataCell>{item.purchaseUnit}</CTableDataCell>\n                            <CTableDataCell>{item.purchasePeriod}</CTableDataCell>\n                            <CTableDataCell>{item.currentNetPrice}</CTableDataCell>\n                            <CTableDataCell>{item.estimatedRetailPrice}</CTableDataCell>\n                          </CTableRow>\n                        )\n                      })\n                    ) : (\n                      <CTableRow className=\"text-center\">\n                        <CTableDataCell colSpan={searchTableHead.length}>尚無資料</CTableDataCell>\n                      </CTableRow>\n                    )}\n                  </>\n                ) : (\n                  <CTableRow className=\"text-center\">\n                    <CTableDataCell colSpan={searchTableHead.length}>\n                      <Loader isShow />\n                    </CTableDataCell>\n                  </CTableRow>\n                )}\n              </CTableBody>\n            </CTable>\n          </div>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton\n          variant=\"outline\"\n          color=\"dark\"\n          onClick={() => goToPage('prev')}\n          disabled={currentPage - 1 !== 0}\n        >\n          上一頁\n        </CButton>\n        <CButton\n          variant=\"outline\"\n          color=\"dark\"\n          onClick={() => goToPage('next')}\n          disabled={!pageHistory?.pages[currentPage + 1]}\n        >\n          下一頁\n        </CButton>\n        <CButton color=\"primary\" onClick={setCurrentData} disabled={!currentSearchItem}>\n          選擇\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nSearchProductModal.propTypes = {\n  setCurrentItemData: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n}\n\nexport default SearchProductModal\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilMinus, cilPencil, cilTrash, cilPlus } from '@coreui/icons'\nimport { cloneDeep } from 'lodash'\nimport ShortUniqueId from 'short-unique-id'\nimport { priceFormat } from '@utils/uitilFuntions'\nimport PropTypes from 'prop-types'\nimport {\n  CAlert,\n  CForm,\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CFormTextarea,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\nimport { getOrderById, saveOrder, updateOrder, approveOrder } from '@service/api'\nimport InfoModal from '../Share/InfoModal'\nimport SearchProductModal from '@components/SearchProductModal'\nimport { initData, rules, headfields } from '../../utils/quotationVariables'\nimport Loader from '@views/Share/Loader'\nimport withVersion from '@views/Share/withVersion'\n\nconst Quotation = (props) => {\n  const uid = useMemo(() => new ShortUniqueId({ length: 5 }), [])\n  const { childPath } = useParams()\n  const navigate = useNavigate()\n  const [openSearchModal, setOpenSearchModal] = useState(false)\n  const [openTabEdit, setOpenTabEdit] = useState(false)\n  const [currentTab, setCurrentTab] = useState(0)\n  const [currentItemIdx, setCurrentItemIdx] = useState(0)\n  const [orderData, setOrderData] = useState(null)\n  const [isShowModal, setShowModal] = useState({ open: false, title: '', infoContain: '' })\n  const [editTab, setEditTab] = useState([])\n\n  const openModal = (index) => {\n    setOpenSearchModal(true)\n    setCurrentItemIdx(index)\n  }\n\n  const openTabEditModal = () => {\n    const tabLists = []\n    orderData.quotationGroup.forEach((group) => {\n      tabLists.push(group.groupName)\n    })\n    setEditTab(tabLists)\n    setOpenTabEdit(true)\n  }\n\n  const onChangeGroup = (action, groupIdx) => {\n    let newGroups = cloneDeep(orderData.quotationGroup)\n\n    if (action === 'add') {\n      newGroups = [...newGroups, { ...newGroups[newGroups.length - 1] }]\n      const groupLength = newGroups.length\n      newGroups[groupLength - 1].groupName = `群組${groupLength}`\n      newGroups[groupLength - 1].productLists = addUniKey(newGroups[groupLength - 1].productLists)\n    }\n\n    if (action === 'delete' && newGroups?.length === 1) return\n    if (action === 'delete') newGroups.splice(groupIdx, 1)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroups,\n      quotationTotal: countQuotationTotal(newGroups),\n    }))\n  }\n\n  const onChangeItem = (action, itemIdx) => {\n    let newGroups = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroups[currentTab].productLists\n\n    if (action === 'add') {\n      newProductLists = [\n        ...newProductLists,\n        ...cloneDeep(addUniKey(initData.quotationGroup[0].productLists)),\n      ]\n      newGroups[currentTab].productLists = newProductLists\n    }\n    if (action === 'delete' && newProductLists?.length === 1) return\n    if (action === 'delete') newProductLists.splice(itemIdx, 1)\n\n    newGroups[currentTab].subTotal = countSubTotal(newProductLists)\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroups,\n      quotationTotal: countQuotationTotal(newGroups),\n    }))\n  }\n\n  const onChangeItemValue = (idx, name, value) => {\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroupData[currentTab].productLists\n    newProductLists[idx][name] = value\n\n    //計算\n    const {\n      discountedNetPrice,\n      markupMargin,\n      currentNetPrice,\n      quantity,\n      QTY,\n      estimatedRetailPrice,\n    } = newProductLists[idx]\n\n    if (discountedNetPrice && markupMargin)\n      newProductLists[idx].unitPrice = discountedNetPrice * (1 + markupMargin / 100)\n\n    if (discountedNetPrice)\n      newProductLists[idx].customerDiscount =\n        Math.round(((currentNetPrice - discountedNetPrice) / currentNetPrice) * 10000) / 100\n\n    if (quantity && newProductLists[idx].unitPrice && QTY)\n      newProductLists[idx].totalAmount = Math.round(quantity * newProductLists[idx].unitPrice * QTY)\n\n    if (estimatedRetailPrice)\n      newProductLists[idx].maximumReslaePrice = Math.round(\n        estimatedRetailPrice * (1 - newProductLists[idx].customerDiscount / 100),\n      )\n\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n  }\n\n  const countSubTotal = (productLists) => {\n    let subTotal = 0\n    productLists.forEach((item) => {\n      subTotal += item.totalAmount\n    })\n    return subTotal\n  }\n\n  const countQuotationTotal = (groupLists) => {\n    if (!groupLists?.length) return\n    console.log('startCont')\n    let taxExcluded = 0\n    groupLists.forEach((group) => {\n      taxExcluded += group.subTotal\n    })\n    taxExcluded = Math.round(taxExcluded)\n    return {\n      taxExcluded,\n      tax: Math.round(taxExcluded * 0.05),\n      taxIncluded: Math.round(taxExcluded * 1.05),\n    }\n  }\n\n  const setCurrentItemData = (currentSearchItem) => {\n    if (!currentSearchItem) return\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroupData[currentTab].productLists\n    let newCurrentItem = newProductLists[currentItemIdx]\n\n    Object.keys(newCurrentItem).forEach(function (key) {\n      newCurrentItem[key] = null\n    })\n\n    newCurrentItem.type = 'MS'\n    newCurrentItem.uniKey = uid.rnd()\n    newCurrentItem.partNum = currentSearchItem.partNumber\n    newCurrentItem.productDes = currentSearchItem.itemName\n    newCurrentItem.estimatedRetailPrice = currentSearchItem.estimatedRetailPrice\n    newCurrentItem.currentNetPrice = currentSearchItem.currentNetPrice\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    let newInfoData = cloneDeep(basicInfo)\n    newInfoData[name] = value\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      basicInfo: newInfoData,\n    }))\n  }\n\n  const onChangeTabValue = (idx, value) => {\n    let newTabEditLists = cloneDeep(editTab)\n    newTabEditLists[idx] = value\n    setEditTab(newTabEditLists)\n  }\n\n  const saveGroupDataName = () => {\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    editTab.forEach((tab, idx) => {\n      newGroupData[idx].groupName = tab\n    })\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n    }))\n    setOpenTabEdit(false)\n  }\n\n  const addUniKey = (arraydata) => {\n    const newArraydata = arraydata.map((element) => {\n      return { ...element, uniKey: uid.rnd() }\n    })\n    return newArraydata\n  }\n\n  const initQuotationGroup = useCallback(\n    (groupData) => {\n      const newData = cloneDeep(groupData)\n      newData.forEach((group, idx) => {\n        if (!group.groupName) group.groupName = `群組${idx + 1}`\n        const newProductLists = group.productLists.map((element) => {\n          return { ...element, uniKey: uid.rnd() }\n        })\n        return (group.productLists = newProductLists)\n      })\n      return newData\n    },\n    [uid],\n  )\n\n  const saveQuotation = async (action) => {\n    const { company, taxID } = orderData.basicInfo\n    if (!company || !taxID)\n      return setShowModal({\n        open: true,\n        title: '驗證錯誤',\n        infoContain: '必填資料不能為空(客戶名稱、統編)',\n      })\n\n    if (action === 'save') {\n      const { data, status } = await saveOrder(orderData)\n      if (status === 200 && data?.orderId) {\n        setOrderData(null)\n        navigate(`/quotation/edit?orderId=${data.orderId}`)\n      } else {\n        setShowModal({\n          open: true,\n          title: '報價單儲存錯誤',\n          infoContain: '請稍後再試',\n        })\n      }\n    }\n\n    if (action === 'update') {\n      const { status } = await updateOrder(orderData)\n      if (status !== 200) {\n        setShowModal({\n          open: true,\n          title: '報價單儲存錯誤',\n          infoContain: '請稍後再試',\n        })\n      }\n    }\n\n    if (action === 'submit') {\n      await approveOrder('submit', orderData.orderId)\n        .then((res) => {\n          if (res?.status === 200) navigate(`/quotation/index`)\n        })\n        .catch(() => {\n          setShowModal({\n            open: true,\n            title: '報價單儲存錯誤',\n            infoContain: '請稍後再試',\n          })\n        })\n    }\n  }\n\n  const init = useCallback(async () => {\n    const orderId = new URLSearchParams(window.location.search).get('orderId')\n    if (childPath && childPath === 'edit' && orderId) {\n      const { data } = await getOrderById(orderId).catch((err) => {\n        return console.log(err)\n      })\n      if (data?.order) {\n        let { order } = data\n        order.quotationGroup = initQuotationGroup(order.quotationGroup)\n        return setOrderData(order)\n      }\n      return setOrderData({})\n    } else {\n      setOrderData({\n        basicInfo: initData.basicInfo,\n        quotationGroup: initQuotationGroup(initData.quotationGroup),\n        quotationTotal: initData.quotationTotal,\n        note: rules,\n      })\n    }\n  }, [childPath, initQuotationGroup])\n\n  useEffect(() => {\n    setOrderData(null)\n  }, [childPath])\n\n  useEffect(() => {\n    if (!orderData) init()\n  }, [init, orderData])\n\n  if (!orderData) return <Loader isShow />\n  const { basicInfo, quotationGroup, quotationTotal, note, orderId, status } = orderData\n\n  if (status && status !== 'A')\n    return <div className=\"d-flex justify-content-center p-5\">此張單已不可編輯</div>\n\n  return (\n    <>\n      <div className=\"px-3\">\n        <CForm action=\"\" method=\"post\" className=\"container\">\n          {props.version && (\n            <CAlert color=\"info\" dismissible>\n              當前價格冊版號 : {props.version?.currentVersionData?.versionNumber}\n            </CAlert>\n          )}\n          <div className=\"form-box\">\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"訂單編號\"\n                  placeholder=\"儲存表單後，系統會帶出\"\n                  defaultValue={orderId}\n                  readOnly\n                  disabled\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"客戶名稱*\"\n                  placeholder=\"請輸入客戶名稱\"\n                  defaultValue={basicInfo?.company || ''}\n                  onChange={(e) => onChangeInfoValue('company', e.target.value)}\n                  required\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"統一編號*\"\n                  placeholder=\"請輸入統一編號\"\n                  defaultValue={basicInfo?.taxID || ''}\n                  onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n                  required\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"聯絡人\"\n                  placeholder=\"請輸入姓名\"\n                  defaultValue={basicInfo?.contactPerson || ''}\n                  onChange={(e) => onChangeInfoValue('contactPerson', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  type=\"email\"\n                  label=\"Email\"\n                  placeholder=\"請輸入Email\"\n                  defaultValue={basicInfo?.email || ''}\n                  onChange={(e) => onChangeInfoValue('email', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"電話\"\n                  placeholder=\"請輸入電話\"\n                  defaultValue={basicInfo?.phone || ''}\n                  onChange={(e) => onChangeInfoValue('phone', e.target.value)}\n                />\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol md={12}>\n                <CFormInput\n                  label=\"地址\"\n                  placeholder=\"請輸入地址\"\n                  defaultValue={basicInfo?.address || ''}\n                  onChange={(e) => onChangeInfoValue('address', e.target.value)}\n                />\n              </CCol>\n            </CRow>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">服務報價</h5>\n            <div>\n              <CButton color=\"primary\" shape=\"rounded-pill\" onClick={() => onChangeItem('add')}>\n                新增項目\n              </CButton>\n            </div>\n          </div>\n          {quotationGroup && quotationGroup.length ? (\n            <CNav variant=\"tabs\" role=\"tablist\">\n              {quotationGroup.map((group, idx) => {\n                return (\n                  <CNavItem role=\"presentation\" key={idx} className=\"position-relative\">\n                    <CNavLink\n                      className=\"px-4\"\n                      active={currentTab === idx}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls={group.groupName}\n                      aria-selected={currentTab === idx}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        setCurrentTab(idx)\n                      }}\n                    >\n                      {group.groupName}\n                    </CNavLink>\n\n                    <CIcon\n                      icon={cilTrash}\n                      size=\"sm\"\n                      className=\"ms-1 tab-action-icon\"\n                      onClick={() => onChangeGroup('delete', idx)}\n                    ></CIcon>\n                  </CNavItem>\n                )\n              })}\n              <div className=\"d-flex align-items-center px-2\">\n                <div\n                  className=\"d-flex align-items-center me-2\"\n                  onClick={() => onChangeGroup('add')}\n                >\n                  <div className=\"action-icon add-icon\">\n                    <CIcon className=\"text-light\" icon={cilPlus} />\n                  </div>\n                </div>\n                <CIcon\n                  icon={cilPencil}\n                  size=\"sm\"\n                  className=\"ms-1 action-icon\"\n                  onClick={() => openTabEditModal()}\n                ></CIcon>\n              </div>\n            </CNav>\n          ) : null}\n\n          <div className=\"mb-3\">\n            <div className=\"service-quote rounded-0 px-2 overflow-scroll\">\n              <CTabContent>\n                {quotationGroup && quotationGroup.length\n                  ? quotationGroup.map((group, groupIdx) => {\n                      return (\n                        <CTabPane\n                          role=\"tabpanel\"\n                          aria-labelledby={group.groupName}\n                          visible={currentTab === groupIdx}\n                          key={`${groupIdx}_${group.groupName}`}\n                        >\n                          <CTable hover className=\"table-bg-none\" columns={headfields}>\n                            <CTableBody>\n                              {group.productLists && group.productLists.length\n                                ? group.productLists.map((item, idx) => {\n                                    return (\n                                      <CTableRow key={`${groupIdx}${item.uniKey}`}>\n                                        <CTableDataCell\n                                          align=\"middle\"\n                                          className=\"d-flex align-items-center\"\n                                        >\n                                          <CFormInput\n                                            defaultValue={item.partNum || ''}\n                                            size=\"sm\"\n                                            disabled={item.type === 'MS'}\n                                            readOnly={item.type === 'MS'}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'partNum', e.target.value)\n                                            }\n                                          />\n\n                                          <CIcon\n                                            icon={cilFindInPage}\n                                            size=\"xxl\"\n                                            className=\"ms-1 action-icon\"\n                                            onClick={() => openModal(idx)}\n                                          ></CIcon>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.productDes || ''}\n                                            size=\"sm\"\n                                            disabled={item.type === 'MS'}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'productDes', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"date\"\n                                            defaultValue={item.startDate || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'startDate', e.target.value, e)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.measure || ''}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'measure', e.target.value)\n                                            }\n                                            size=\"sm\"\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            min={0}\n                                            defaultValue={item.quantity || 0}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'quantity', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.unitPrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.QTY || 0}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'QTY', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.country || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'country', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.type === 'MS' ? (\n                                            priceFormat(item.totalAmount) || '-'\n                                          ) : (\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.totalAmount || 0}\n                                              size=\"sm\"\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'totalAmount',\n                                                  parseInt(e.target.value),\n                                                )\n                                              }\n                                            />\n                                          )}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.type === 'MS' ? (\n                                            priceFormat(item.estimatedRetailPrice) || '-'\n                                          ) : (\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.estimatedRetailPrice || 0}\n                                              size=\"sm\"\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'estimatedRetailPrice',\n                                                  parseInt(e.target.value),\n                                                )\n                                              }\n                                            />\n                                          )}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.type === 'MS' ? (\n                                            priceFormat(item.currentNetPrice) || '-'\n                                          ) : (\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.currentNetPrice || 0}\n                                              size=\"sm\"\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'currentNetPrice',\n                                                  parseInt(e.target.value),\n                                                )\n                                              }\n                                            />\n                                          )}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.discountedNetPrice || 0}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(\n                                                idx,\n                                                'discountedNetPrice',\n                                                e.target.value,\n                                              )\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.customerDiscount || '-'}%\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.maximumReslaePrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CInputGroup size=\"sm\">\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.markupMargin || 0}\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'markupMargin',\n                                                  e.target.value,\n                                                )\n                                              }\n                                            />\n                                            <CInputGroupText>%</CInputGroupText>\n                                          </CInputGroup>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <div\n                                            className=\"d-flex align-items-center\"\n                                            onClick={() => onChangeItem('delete', idx)}\n                                          >\n                                            <div className=\"action-icon deleted-icon\">\n                                              <CIcon className=\"text-light\" icon={cilMinus} />\n                                            </div>\n                                          </div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    )\n                                  })\n                                : null}\n                              <CTableRow>\n                                <CTableDataCell colSpan={16}>\n                                  小計：NT${priceFormat(group.subTotal) || '-'}\n                                </CTableDataCell>\n                              </CTableRow>\n                            </CTableBody>\n                          </CTable>\n                        </CTabPane>\n                      )\n                    })\n                  : null}\n              </CTabContent>\n            </div>\n            <div className=\"calculate-fields\">\n              <div className=\"field-title\">\n                <div className=\"field\">total(未稅)：</div>\n                <div className=\"field\">營業稅(5%)：</div>\n                <div className=\"field\">total(含稅)：</div>\n              </div>\n              <div className=\"field-content\">\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.taxExcluded) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.tax) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.taxIncluded) || '-'}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">備註</h5>\n          </div>\n          <div className=\"form-box px-2\">\n            <CFormTextarea\n              rows={15}\n              defaultValue={note || ''}\n              onChange={(e) =>\n                setOrderData((prevOrderData) => ({\n                  ...prevOrderData,\n                  note: e.target.value,\n                }))\n              }\n            ></CFormTextarea>\n          </div>\n          <SearchProductModal\n            open={openSearchModal}\n            onClose={() => setOpenSearchModal(false)}\n            setCurrentItemData={(itemData) => setCurrentItemData(itemData)}\n          />\n          <CModal visible={openTabEdit} onClose={() => setOpenTabEdit(false)}>\n            <CModalHeader>\n              <CModalTitle>編輯群組名稱</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                {editTab && editTab.length\n                  ? editTab.map((groupName, idx) => {\n                      return (\n                        <div key={`${groupName}_${idx}`} className=\"mb-2\">\n                          <CInputGroup>\n                            <CFormInput\n                              defaultValue={groupName}\n                              onChange={(e) => {\n                                onChangeTabValue(idx, e.target.value)\n                              }}\n                            />\n                          </CInputGroup>\n                        </div>\n                      )\n                    })\n                  : null}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpenTabEdit(false)}>\n                取消\n              </CButton>\n              <CButton color=\"primary\" onClick={saveGroupDataName}>\n                確定\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      </div>\n      <div className=\"form-action-wrap px-4 py-2\">\n        {orderId ? (\n          <>\n            <CButton color=\"primary\" className=\"me-2\" onClick={() => saveQuotation('update')}>\n              儲存\n            </CButton>\n            <CButton color=\"warning\" onClick={() => saveQuotation('submit')}>\n              送審\n            </CButton>\n          </>\n        ) : (\n          <CButton color=\"primary\" onClick={() => saveQuotation('save')}>\n            建立報價單\n          </CButton>\n        )}\n      </div>\n\n      <InfoModal\n        title={isShowModal.title}\n        isShow={isShowModal.open}\n        closeModal={() => setShowModal((prevState) => ({ ...prevState, open: false }))}\n        infoContain={isShowModal.infoContain}\n        handleRightBtn={() => setShowModal((prevState) => ({ ...prevState, open: false }))}\n        rightBtnText=\"我知道了\"\n      />\n    </>\n  )\n}\n\nQuotation.propTypes = {\n  version: PropTypes.object,\n}\n\nexport default withVersion(Quotation)\n"],"names":["$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","status","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","orderId","body","post","getOrdersByStatus","statuses","approveOrder","action","getOrders","params","taxID","startDate","endDate","getOrderReports","company","createdDate","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","concat","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","adfPipelineTrigger","updateLatestVersionData","updateLatestVersionDataByStatus","apiFunction","_ref","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","length","Array","name","t0","message","finish","resetError","resetData","CAGETORY_OPTIONS","id","displayName","PRICE_LEVEL_OPTIONS","props","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeModal","CModalHeader","CModalTitle","title","CModalBody","infoContain","CModalFooter","leftBtnText","CButton","color","onClick","handleLeftBtn","rightBtnText","handleRightBtn","className","CSpinner","Component","apiData","setApiData","refresh","setRefresh","_useApi","useApi","handleResponseFlow","Loader","version","callbackFunc","initData","basicInfo","orderNum","contactPerson","email","phone","address","quotationGroup","groupName","productLists","type","partNum","productDes","measure","quantity","unitPrice","QTY","country","totalAmount","estimatedRetailPrice","currentNetPrice","discountedNetPrice","customerDiscount","maximumReslaePrice","markupMargin","quotationTotal","taxExcluded","taxIncluded","tax","headfields","key","label","_style","minWidth","_props","searchTableHead","width","_searchParams$keyword","open","setCurrentItemData","keywords","level","searchParams","setSearchParams","searchItems","setSearchItems","currentSearchItem","setCurrentSearchItem","_useState7","pages","_useState8","pageHistory","setPageHistory","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","isLoading","setIsLoading","searchProduct","pageIdx","_yield$getProducts","undefined","partNumber","itemName","continuationToken","products","cloneDeep","continuation","prevState","goToPage","handleClose","CRow","CCol","CInputGroup","CInputGroupText","CFormSelect","onChange","e","target","value","map","item","CFormInput","placeholder","minLength","variant","disabled","CTable","hover","columns","CTableBody","CTableRow","CTableDataCell","colSpan","CFormCheck","defaultChecked","purchaseUnit","purchasePeriod","withVersion","_props$version","_props$version$curren","uid","useMemo","ShortUniqueId","childPath","useParams","navigate","useNavigate","openSearchModal","setOpenSearchModal","openTabEdit","setOpenTabEdit","currentTab","setCurrentTab","currentItemIdx","setCurrentItemIdx","orderData","setOrderData","isShowModal","setShowModal","_useState13","_useState14","editTab","setEditTab","onChangeGroup","groupIdx","_newGroups","newGroups","groupLength","_toConsumableArray","addUniKey","splice","prevOrderData","countQuotationTotal","onChangeItem","itemIdx","_newProductLists","newProductLists","subTotal","countSubTotal","onChangeItemValue","idx","newGroupData","_newProductLists$idx","Math","round","forEach","groupLists","group","onChangeInfoValue","newInfoData","arraydata","element","uniKey","rnd","initQuotationGroup","useCallback","groupData","newData","saveQuotation","_orderData$basicInfo","_yield$saveOrder","_yield$updateOrder","then","res","catch","init","_yield$getOrderById$c","order","URLSearchParams","window","location","search","err","note","CForm","method","CAlert","dismissible","currentVersionData","versionNumber","md","defaultValue","readOnly","required","shape","CNav","role","CNavItem","CNavLink","active","component","preventDefault","CIcon","icon","cilTrash","size","cilPlus","cilPencil","tabLists","push","openTabEditModal","CTabContent","CTabPane","align","cilFindInPage","index","min","priceFormat","parseInt","cilMinus","CFormTextarea","rows","SearchProductModal","itemData","newCurrentItem","Object","keys","newTabEditLists","onChangeTabValue","tab","InfoModal"],"sourceRoot":""}