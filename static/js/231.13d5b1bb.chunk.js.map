{"version":3,"file":"static/js/231.13d5b1bb.chunk.js","mappings":"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","sources":["service/apiHelper.js","service/api.js","service/useApi.js","views/Share/Loader.js","views/Share/Pagenate.js","views/quoteToCash/QuotationReport.js"],"sourcesContent":["import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: array; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      statuses: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 上傳價格冊檔案\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\n/**\n * adfPipelineTrigger\n * pdf上傳Trigger\n * @returns\n */\n\nconst adfPipelineTrigger = () => {\n  let url = createUrl('api/adfPipelineTrigger')\n\n  return $http.post(url)\n}\n\n/**\n * updateLatestVersionData\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst updateLatestVersionData = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nconst updateLatestVersionDataByStatus = (params) => {\n  let request = {\n    body: {\n      status: 'IN_PROGRESS',\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n  adfPipelineTrigger,\n  updateLatestVersionData,\n  updateLatestVersionDataByStatus,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { CContainer, CRow, CCol, CFormInput, CButton } from '@coreui/react'\nimport Pagenate from '@views/Share/Pagenate'\nimport { getOrderReports } from '@service/api'\nimport useApi from '@service/useApi'\nimport { priceFormat } from '@utils/uitilFuntions'\nimport Loader from '@views/Share/Loader'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst QuotationReport = () => {\n  const { request, data, loading, error } = useApi(getOrderReports)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(1)\n  const [filterData, setFilterData] = useState({\n    company: '',\n    createdDate: '',\n  })\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    if (data && data.status.toString() === '200') {\n      setTotalPages(Math.ceil(data.data.reports.length / itemsPerPage))\n    }\n  }, [data])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = data?.data?.reports?.slice(startIndex, endIndex)\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n\n  const renderContentLists = () => {\n    return (\n      <div className=\"list-body\">\n        {subset && subset.length > 0\n          ? subset.map((item, i) => {\n              return (\n                <div className=\"list-item\" key={item.num + 'list' + i}>\n                  <CRow>\n                    <CCol sm={1}>{item.company}</CCol>\n                    <CCol sm={2}>{item.orderId}</CCol>\n                    <CCol sm={1}>{item.partNum}</CCol>\n                    <CCol className=\"ellipsis\" sm={1}>\n                      {item.productDes}\n                    </CCol>\n                    <CCol sm={1}>{item.startDate}</CCol>\n                    <CCol sm={1}>{item.measure}</CCol>\n                    <CCol sm={1}>{item.unitPrice}</CCol>\n                    <CCol sm={1}>{item.QTY}</CCol>\n                    <CCol sm={1}>{priceFormat(item.totalAmount)}</CCol>\n                    <CCol sm={1}>{priceFormat(item.CPSprice)}</CCol>\n                    <CCol sm={1}>{priceFormat(item.costTotal)}</CCol>\n                  </CRow>\n                </div>\n              )\n            })\n          : renderApiStatusText('無資料')}\n      </div>\n    )\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    setFilterData({ ...filterData, [name]: value })\n  }\n  const handleSearch = () => {\n    request(filterData)\n    setCurrentPage(0)\n  }\n\n  if (error) return renderApiStatusText('系統忙碌中，請稍後再試。')\n\n  return (\n    <div className=\"lists-container px-3\">\n      <CContainer>\n        <div className=\"form-box\">\n          <CRow className=\"mb-3\">\n            <CCol md={3} sm={4}>\n              <CFormInput\n                label=\"客戶名稱\"\n                placeholder=\"請輸入客戶名稱\"\n                defaultValue={filterData.company}\n                onChange={(e) => onChangeInfoValue('company', e.target.value)}\n              />\n            </CCol>\n            <CCol md={3} sm={4}>\n              <CFormInput\n                type=\"date\"\n                label=\"起始日期\"\n                placeholder=\"請輸入日期\"\n                defaultValue={filterData.createdDate}\n                onChange={(e) => onChangeInfoValue('createdDate', e.target.value)}\n              />\n            </CCol>\n\n            <CCol md={2} sm={4} className=\"d-flex align-items-end\">\n              <CButton\n                disabled={!filterData.company.length > 0 && !filterData.createdDate}\n                onClick={handleSearch}\n                color=\"primary\"\n              >\n                搜尋\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"list-head\">\n          <CRow>\n            <CCol sm={1}>客戶名稱</CCol>\n            <CCol sm={2}>訂單編號</CCol>\n            <CCol sm={1}>Part Number</CCol>\n            <CCol sm={1}>Product Description</CCol>\n            <CCol sm={1}>Usage start Date</CCol>\n            <CCol sm={1}>Unit of Measure</CCol>\n            <CCol sm={1}>Unit of Price</CCol>\n            <CCol sm={1}>License Qty</CCol>\n            <CCol sm={1}>Total Amount</CCol>\n            <CCol sm={1}>MS CPS Price</CCol>\n            <CCol sm={1}>MS Cost Total</CCol>\n          </CRow>\n        </div>\n        {loading ? (\n          <Loader isShow />\n        ) : (\n          <>\n            {renderContentLists()}\n            {data?.data?.reports?.length > itemsPerPage && (\n              <Pagenate\n                totalPages={totalPages}\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            )}\n          </>\n        )}\n      </CContainer>\n    </div>\n  )\n}\n\nexport default QuotationReport\n"],"names":["$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","status","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","orderId","body","post","getOrdersByStatus","statuses","approveOrder","action","getOrders","params","taxID","startDate","endDate","getOrderReports","company","createdDate","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","concat","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","adfPipelineTrigger","updateLatestVersionData","updateLatestVersionDataByStatus","apiFunction","_ref","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","length","Array","name","t0","message","finish","resetError","resetData","props","visible","setVisible","useEffect","isShow","_jsx","className","children","CSpinner","totalPages","currentPage","handlePageChange","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","renderApiStatusText","text","_data$data","_data$data$reports","_data$data2","_data$data2$reports","_useApi","useApi","setCurrentPage","setTotalPages","filterData","setFilterData","toString","Math","ceil","reports","startIndex","endIndex","subset","slice","onChangeInfoValue","value","_defineProperty","_jsxs","CContainer","CRow","CCol","md","sm","CFormInput","label","placeholder","defaultValue","onChange","e","target","type","CButton","disabled","onClick","color","Loader","_Fragment","map","item","i","partNum","productDes","measure","unitPrice","QTY","priceFormat","totalAmount","CPSprice","costTotal","num","Pagenate","selectedPage","selected"],"sourceRoot":""}