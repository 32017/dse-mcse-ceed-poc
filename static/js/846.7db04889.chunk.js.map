{"version":3,"file":"static/js/846.7db04889.chunk.js","mappings":"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","sources":["components/ApproveContentList.js","components/HeaderList.js","service/apiHelper.js","service/api.js","service/useApi.js","views/Share/InfoModal.js","views/Share/Loader.js","views/Share/Pagenate.js","views/quoteToCash/QuotationEnd.js","../node_modules/@coreui/icons/js/free/cil-find-in-page.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage } from '@coreui/icons'\nimport { CRow, CCol, CButton } from '@coreui/react'\nimport { renderStatusText } from '@utils/uitilFuntions'\nimport PropTypes from 'prop-types'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst ApproveContentList = ({ subset, handleClick, btnName }) => {\n  return (\n    <div className=\"list-body loa-list\">\n      {subset?.length > 0\n        ? // eslint-disable-next-line array-callback-return\n          subset.map((item, i) => {\n            if (btnName === '終止' && item.status !== 'E' && item.status !== 'D')\n              return (\n                <div className=\"list-item\" key={item.num + 'btn' + i}>\n                  <CRow className=\"align-items-center\">\n                    <CCol sm={2}>{item.orderId}</CCol>\n                    <CCol sm={2}>{item.company}</CCol>\n                    <CCol sm={2}>{item.taxID}</CCol>\n                    <CCol sm={2}>{item.createdDate}</CCol>\n\n                    <CCol sm={1}>{renderStatusText(item.status)}</CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={1}>\n                      <CButton color=\"warning\" onClick={() => handleClick(item.orderId)}>\n                        {btnName}\n                      </CButton>\n                    </CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={2}>\n                      <Link to={`/pdfContainer?orderId=${item.orderId}`} className=\"action-icon\">\n                        <CIcon icon={cilFindInPage} />\n                      </Link>\n                    </CCol>\n                  </CRow>\n                </div>\n              )\n\n            return (\n              <div className=\"list-item\" key={item.num + 'btn' + i}>\n                <CRow className=\"align-items-center\">\n                  <CCol sm={2}>{item.orderId}</CCol>\n                  <CCol sm={2}>{item.company}</CCol>\n                  <CCol sm={2}>{item.taxID}</CCol>\n                  <CCol sm={2}>{item.createdDate}</CCol>\n\n                  <CCol sm={1}>{renderStatusText(item.status)}</CCol>\n                  <CCol className=\"d-flex justify-content-center\" sm={1}>\n                    <CButton color=\"warning\" onClick={() => handleClick(item.orderId)}>\n                      {btnName}\n                    </CButton>\n                  </CCol>\n                  <CCol className=\"d-flex justify-content-center\" sm={2}>\n                    <Link to={`/pdfContainer?orderId=${item.orderId}`} className=\"action-icon\">\n                      <CIcon icon={cilFindInPage} />\n                    </Link>\n                  </CCol>\n                </CRow>\n              </div>\n            )\n          })\n        : renderApiStatusText('無資料')}\n    </div>\n  )\n}\n\nApproveContentList.propTypes = {\n  subset: PropTypes.array,\n  handleClick: PropTypes.func,\n  btnName: PropTypes.string,\n}\n\nexport default ApproveContentList\n","import { CRow, CCol } from '@coreui/react'\nimport React from 'react'\n\nconst HeaderList = () => {\n  return (\n    <div className=\"list-head\">\n      <CRow>\n        <CCol sm={2}>報價單編號</CCol>\n        <CCol sm={2}>客戶名稱</CCol>\n        <CCol sm={2}>客戶統編</CCol>\n        <CCol sm={2}>建立時間</CCol>\n        <CCol sm={1}>狀態</CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={1}>\n          操作\n        </CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={2}>\n          預覽/下載\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default HeaderList\n","import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport axios from 'axios'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: string; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      status: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst InfoModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeModal}>\n        <CModalHeader>\n          <CModalTitle>{props.title || ''}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.infoContain}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={props.closeModal}>\n            我知道了\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string,\n  isShow: PropTypes.bool,\n  closeModal: PropTypes.func,\n  infoContain: PropTypes.string,\n}\n\nexport default InfoModal\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { CContainer } from '@coreui/react'\nimport Pagenate from '@views/Share/Pagenate'\nimport InfoModal from '@views/Share/InfoModal'\nimport { getOrders, approveOrder } from '@service/api'\nimport useApi from '@service/useApi'\nimport HeaderList from '@components/HeaderList'\nimport Loader from '@views/Share/Loader'\nimport ApproveContentList from '@components/ApproveContentList'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst QuotationEnd = () => {\n  const { request, data, loading, error } = useApi(getOrders)\n  const approveOrderApi = useApi(approveOrder)\n  const [isShowModal, setShowModal] = useState(false)\n  const [apiData, setData] = useState('')\n  const [comfirmId, setComfirmId] = useState('')\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(1)\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    request({\n      taxID: '',\n      orderId: '',\n      startDate: '',\n      endDate: '',\n    })\n    setCurrentPage(0)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [approveOrderApi.data])\n\n  useEffect(() => {\n    if (data && data.status.toString() === '200') {\n      refactorData()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  const refactorData = () => {\n    let result = []\n    data?.data?.orders.forEach((list) => {\n      if (list.status === 'A' || list.status === 'B' || list.status === 'C') {\n        result.push(list)\n      }\n    })\n    setTotalPages(Math.ceil(result.length / itemsPerPage))\n    setData(result)\n  }\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = apiData.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n  const handleClick = (orderId) => {\n    setShowModal(true)\n    setComfirmId(orderId)\n  }\n  const handleChangeStatus = () => {\n    approveOrderApi.request('terminate', comfirmId)\n    setShowModal(false)\n  }\n\n  if (error || approveOrderApi.error) return renderApiStatusText('系統忙碌中，請稍後再試。')\n\n  return (\n    <div className=\"lists-container px-3\">\n      <CContainer>\n        <HeaderList />\n        {loading || approveOrderApi.loading ? (\n          <Loader isShow />\n        ) : (\n          <>\n            {subset?.length > 0 && (\n              <ApproveContentList\n                subset={subset}\n                btnName=\"終止\"\n                handleClick={(e) => handleClick(e)}\n              />\n            )}\n            {apiData.length > itemsPerPage && (\n              <Pagenate\n                totalPages={totalPages}\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            )}\n          </>\n        )}\n      </CContainer>\n      <InfoModal\n        title=\"狀態更變\"\n        isShow={isShowModal}\n        closeModal={() => setShowModal(false)}\n        handleChangeStatus={() => handleChangeStatus()}\n        content=\"確定要將狀態改成終止?\"\n      />\n    </div>\n  )\n}\n\nexport default QuotationEnd\n","export const cilFindInPage = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M334.627,16H48V496H472V153.373ZM440,464H80V48H321.373L440,166.627Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M239.861,152a95.861,95.861,0,1,0,53.624,175.284l68.03,68.029,22.627-22.626-67.5-67.5A95.816,95.816,0,0,0,239.861,152ZM176,247.861a63.862,63.862,0,1,1,63.861,63.861A63.933,63.933,0,0,1,176,247.861Z' class='ci-primary'/>\"]"],"names":["_ref","text","subset","handleClick","btnName","_jsx","className","children","length","map","item","i","status","_jsxs","CRow","CCol","sm","orderId","company","taxID","createdDate","renderStatusText","CButton","color","onClick","Link","to","concat","CIcon","icon","cilFindInPage","num","$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","body","post","getOrdersByStatus","approveOrder","action","getOrders","params","startDate","endDate","getOrderReports","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","apiFunction","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","Array","name","t0","message","finish","resetError","resetData","props","visible","setVisible","useEffect","isShow","_Fragment","CModal","alignment","onClose","closeModal","CModalHeader","CModalTitle","title","CModalBody","infoContain","CModalFooter","CSpinner","totalPages","currentPage","handlePageChange","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","_useApi","useApi","approveOrderApi","isShowModal","setShowModal","apiData","comfirmId","setComfirmId","_useState7","_useState8","setCurrentPage","_useState9","_useState10","setTotalPages","toString","refactorData","_data$data","result","orders","forEach","list","push","Math","ceil","startIndex","endIndex","slice","CContainer","HeaderList","Loader","ApproveContentList","e","Pagenate","selectedPage","selected","InfoModal","handleChangeStatus","content"],"sourceRoot":""}