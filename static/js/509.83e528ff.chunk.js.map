{"version":3,"file":"static/js/509.83e528ff.chunk.js","mappings":"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","sources":["views/Share/ErrorModal.js","utils/quotationVariables.js","views/quoteToCash/Quotation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst ErrorModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeErrorModal}>\n        <CModalHeader>\n          <CModalTitle>發生錯誤</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.errorContain}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={props.closeErrorModal}>\n            我知道了\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nErrorModal.propTypes = {\n  isShow: PropTypes.bool,\n  closeErrorModal: PropTypes.func,\n  errorContain: PropTypes.string,\n}\n\nexport default ErrorModal\n","export const initData = {\n  basicInfo: {\n    orderNum: '',\n    company: '',\n    taxID: '',\n    contactPerson: '',\n    email: '',\n    phone: '',\n    address: '',\n  },\n  quotationGroup: [\n    {\n      groupName: '',\n      productLists: [\n        {\n          partNum: '',\n          productDes: '',\n          startDate: null,\n          measure: '',\n          quantity: null,\n          unitPrice: null,\n          QTY: null,\n          country: '',\n          totalAmount: null,\n          estimatedRetailPrice: null,\n          currentNetPrice: null,\n          discountedNetPrice: null,\n          customerDiscount: null,\n          maximumReslaePrice: null,\n          markupMargin: null,\n        },\n      ],\n    },\n  ],\n  quotationTotal: {\n    taxExcluded: 0,\n    taxIncluded: 0,\n    tax: 0,\n  },\n}\n\nexport const headfields = [\n  { key: 'Part Number', label: 'Part Number', _style: { minWidth: '145px' } },\n  { key: 'Product Description', label: 'Product Description', _style: { minWidth: '300px' } },\n  { key: 'Usge start Date', label: 'Usge start Date' },\n  { key: 'Unit of Measure', label: 'Unit of Measure' },\n  { key: 'Unit of Quantity', label: 'Unit of Quantity' },\n  { key: 'Unit Price (TWD)', label: 'Unit Price (TWD)' },\n  { key: 'License Qty', label: 'License Qty' },\n  { key: 'Usage country', label: 'Usage country' },\n  { key: 'Total Amount (TWD)', label: 'Total Amount (TWD)' },\n  {\n    key: 'Estimated Retail Price',\n    label: 'Estimated Retail Price/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Current Net Price (TWD)',\n    label: 'Current Net Price (TWD)/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Discounted Net Price (CPS)',\n    label: 'Discounted Net Price (CPS)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Customer Discount %',\n    label: 'Customer Discount %',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Maximum Reslae Price (MRP)',\n    label: 'Maximum Reslae Price (MRP)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'mark up margin',\n    label: 'mark up margin',\n    _props: { className: 'text-warning' },\n    _style: { minWidth: '120px' },\n  },\n  {\n    key: 'active',\n    label: '',\n  },\n]\n\nexport const searchTableHead = [\n  {\n    key: 'action',\n    label: '選擇',\n    _props: { color: 'dark' },\n    _style: { width: '50px' },\n  },\n  {\n    key: 'search_pd_name',\n    label: 'Item Name',\n    _props: { color: 'dark' },\n    _style: { width: '40%' },\n  },\n  {\n    key: 'search_level',\n    label: 'Level',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_unit',\n    label: 'Purchase Unit',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_period',\n    label: 'Purchase Period',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_current_net_price',\n    label: 'Current Net Price',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_estimated_retail_price',\n    label: 'Estimated Retail Price',\n    _props: { color: 'dark' },\n  },\n]\n\nexport const rules = `1. 本報價單為含稅報價，此報價為三年期最低總價，本報價不含安裝、教育訓練費用、定製化及衍生性專業服務等。\\n2. 本報價單有效期限為報價日起五天，逾期報價失效。\\n3. 買方應於收到賣方發票後【卅】天內，將應付款項一次性支付予賣方。\\n4. 買方簽回本報價單後視同正式採購合約，買方不得以任何理由向賣方/原廠要求退換貨或退費，亦不得以簽回之買方公司員工無簽約代理權而拒絕付款。授權期間到期若有  未使用的金額、授權用量等，買方同意自動放棄相關權益，無法申請遞延，亦無法轉換其他服務等。\\n5. Enterprise合約（EA）三年期間，PAL(Partner Admin Link)的MPN ID為賣方所有。買方須依原廠之要求，完成相關線上電子簽署作業【包含CPOR(Claiming Partner of Record)及DPOR(Digital Partner of Record)客戶關聯等】。\\n6. 本軟體之使用若有需透過帳號密碼之方式者，賣方不負任何帳號密碼保管責任，買方應善盡保管之責，且經常不定時更新密碼，以避免遭受第三人之攻擊或盜用等。透過該組帳號密碼所進行之所有行為，皆視同買方行為，買方應自負所有法律責任，及因此所產生之各種可能遭受之損害。\\n7. 本軟體之最終版本由原廠按現狀提供，賣方不為任何明示或默示之擔保，亦不保證所提出之給付，並無任何抄襲或仿冒之情事，或未侵害第三人之智慧財產權或其他權利。賣方亦不承擔後續維修、更新、零配件供應等。\\n8. 買方應切實遵守原廠之授權條款、資訊安全控管規範及使用限制等規定，並簽署原廠要求之相關合約文件。如有違反，買方除應按本報價單之最低總價十倍之數額，作為懲罰性賠償金賠償於賣方外，並應自行負擔民、刑事責任。\\n9. 若買方單方面解除或終止本報價單，除不得請求賣方返還任何款項且仍須依本報價單總價付款外，買方尚須給付賣方如下之懲罰性違約金，如賣方另有其他損害，買方亦應賠償之：\\n(1) 賣方尚未向原廠採購時，以本報價單總價之50%作為懲罰性違約金。\\n(2) 賣方已向原廠採購時，以本報價單總價之100%作為懲罰性違約金。\\n10. 賣方對買方因本報價單所生之損害賠償責任，以本報價單總價之百分之十為上限。但不適用於買方依本報價單應支付賣方之價款，買方之法定代理人應與買方負連帶賠償責任。\\n11. 本報價單條款效力優於於先前、同時或嗣後就本軟體採購所為之一切口頭約定或買方之書面訂單等。\\n12. 就本報價單有關涉訟事項，以臺灣臺北地方法院為第一審管轄法院。`\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilMinus, cilPencil, cilTrash, cilPlus } from '@coreui/icons'\nimport { cloneDeep } from 'lodash'\nimport ShortUniqueId from 'short-unique-id'\nimport priceFormat from '../../utils/priceFormat'\nimport {\n  CForm,\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CFormTextarea,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CFormSelect,\n  CFormCheck,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\nimport ErrorModal from '../Share/ErrorModal'\nimport { quotationContent } from '../../mocks/quotationData'\nimport { initData, rules, headfields, searchTableHead } from '../../utils/quotationVariables'\n\nconst Quotation = () => {\n  const uid = new ShortUniqueId({ length: 5 })\n  const { childPath } = useParams()\n  const [open, setOpen] = useState(false)\n  const [openTabEdit, setOpenTabEdit] = useState(false)\n  const [currentTab, setCurrentTab] = useState(0)\n  const [currentItemIdx, setCurrentItemIdx] = useState(0)\n  const [basicInfo, setBasicInfo] = useState(initData.basicInfo)\n  const [groupData, setGroupData] = useState([])\n  const [quotationTotal, setQuotationTotal] = useState({})\n  const [isShowModal, setShowModal] = useState(false)\n  const [searchParams, setSearchParams] = useState({ keywords: '', level: 'A' })\n  const [searchItems, setSearchItems] = useState([])\n  const [note, setNote] = useState(rules)\n  const [editTab, setEditTab] = useState([])\n\n  const openModal = (index) => {\n    setOpen(true)\n    setCurrentItemIdx(index)\n  }\n\n  const openTabEditModal = () => {\n    const tabLists = []\n    groupData.forEach((group) => {\n      tabLists.push(group.groupName)\n    })\n    console.log('tabLists', tabLists)\n    setEditTab(tabLists)\n    setOpenTabEdit(true)\n  }\n\n  const addGroup = () => {\n    const newGroup = cloneDeep(groupData[groupData.length - 1])\n\n    newGroup.groupName = `群組${groupData.length + 1}`\n    newGroup.productLists = addUniKey(newGroup.productLists)\n\n    setGroupData([...groupData, newGroup])\n    setCurrentTab(groupData.length)\n  }\n\n  const deleteGroup = (groupIdx) => {\n    const newGroupData = cloneDeep(groupData)\n\n    if (newGroupData && newGroupData.length === 1) return\n    newGroupData.splice(groupIdx, 1)\n\n    setGroupData(newGroupData)\n    setCurrentTab(newGroupData.length - 1)\n  }\n\n  const addItem = (type) => {\n    const newGroupData = cloneDeep(groupData)\n    const tempProductLists = cloneDeep(addUniKey(initData.quotationGroup[0].productLists))\n    if (type === 'PS') tempProductLists[0].partNum = 'PS'\n\n    const newProductLists = [...newGroupData[currentTab].productLists, ...tempProductLists]\n    newGroupData[currentTab].productLists = newProductLists\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setGroupData(newGroupData)\n  }\n\n  const deleteItem = (index) => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    if (newProductLists && newProductLists.length === 1) return\n    newProductLists.splice(index, 1)\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setGroupData(newGroupData)\n  }\n\n  const onChangeItemValue = (idx, name, value) => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    newProductLists[idx][name] = value\n\n    //計算\n    const {\n      discountedNetPrice,\n      markupMargin,\n      currentNetPrice,\n      quantity,\n      QTY,\n      estimatedRetailPrice,\n    } = newProductLists[idx]\n\n    if (discountedNetPrice && markupMargin)\n      newProductLists[idx].unitPrice = discountedNetPrice * (1 + markupMargin / 100)\n\n    if (discountedNetPrice)\n      newProductLists[idx].customerDiscount =\n        Math.round(((currentNetPrice - discountedNetPrice) / currentNetPrice) * 10000) / 100\n\n    if (quantity && newProductLists[idx].unitPrice && QTY)\n      newProductLists[idx].totalAmount = quantity * newProductLists[idx].unitPrice * QTY\n\n    if (estimatedRetailPrice)\n      newProductLists[idx].maximumReslaePrice = Math.round(\n        estimatedRetailPrice * (1 - newProductLists[idx].customerDiscount / 100),\n      )\n\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n\n    setGroupData(newGroupData)\n  }\n\n  const countSubTotal = (productLists) => {\n    let subTotal = 0\n    productLists.forEach((item) => {\n      subTotal += item.totalAmount\n    })\n    return subTotal\n  }\n\n  const countQuotationTotal = (groupLists) => {\n    let taxExcluded = 0\n    groupLists.forEach((group) => {\n      taxExcluded += group.subTotal\n    })\n    return {\n      taxExcluded,\n      tax: taxExcluded * 0.05,\n      taxIncluded: taxExcluded * 1.05,\n    }\n  }\n\n  const setCurrentItemData = () => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    let newCurrentItem = newProductLists[currentItemIdx]\n    newCurrentItem.productDes = 'Office Professional Plus ALng SASU Office Standard Platform'\n    newCurrentItem.partNum = '269-05623'\n    newCurrentItem.estimatedRetailPrice = 12157\n    newCurrentItem.currentNetPrice = 9528.68\n\n    newGroupData.subTotal = countSubTotal(newProductLists)\n\n    setGroupData(newGroupData)\n    setSearchParams({ keywords: '', level: 'A' })\n    setSearchItems([])\n    setOpen(false)\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    let newInfoData = cloneDeep(basicInfo)\n    newInfoData[name] = value\n    setBasicInfo(newInfoData)\n  }\n\n  const onChangeTabValue = (idx, value) => {\n    let newTabEditLists = cloneDeep(editTab)\n    newTabEditLists[idx] = value\n    setEditTab(newTabEditLists)\n  }\n\n  const saveGroupDataName = () => {\n    let newGroupData = cloneDeep(groupData)\n    editTab.forEach((tab, idx) => {\n      newGroupData[idx].groupName = tab\n    })\n    setGroupData(newGroupData)\n    setOpenTabEdit(false)\n  }\n\n  const addUniKey = (arraydata) => {\n    const newArraydata = arraydata.map((element) => {\n      return { ...element, uniKey: uid.rnd() }\n    })\n    return newArraydata\n  }\n\n  const initQuotationGroup = (groupData) => {\n    const newData = cloneDeep(groupData)\n    newData.forEach((group, idx) => {\n      if (!group.groupName) group.groupName = `群組${idx + 1}`\n      const newProductLists = group.productLists.map((element) => {\n        return { ...element, uniKey: uid.rnd() }\n      })\n      return (group.productLists = newProductLists)\n    })\n    return newData\n  }\n\n  const searchProduct = () => {\n    if (!searchParams.keywords || searchParams.keywords.length < 5 || !searchParams.level) return\n    return setSearchItems([\n      {\n        itemName: 'Office Professional Plus ALng SASU Office Standard Platform',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '2544.12',\n        estimatedRetailPrice: '3246',\n      },\n      {\n        itemName: 'Office Professional Plus ALng LSA',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '9528.68',\n        estimatedRetailPrice: '12157',\n      },\n    ])\n  }\n\n  useEffect(() => {\n    if (childPath && childPath === 'edit') {\n      setBasicInfo(quotationContent.basicInfo)\n      setGroupData(initQuotationGroup(quotationContent.quotationGroup))\n      setQuotationTotal(quotationContent.quotationTotal)\n    } else {\n      setBasicInfo(initData.basicInfo)\n      setGroupData(initQuotationGroup(initData.quotationGroup))\n      setQuotationTotal(initData.quotationTotal)\n    }\n  }, [childPath])\n\n  useEffect(() => {\n    setQuotationTotal(countQuotationTotal(groupData))\n  }, [groupData])\n\n  return (\n    <>\n      <div className=\"px-3\">\n        <CForm action=\"\" method=\"post\" className=\"container\">\n          <div className=\"form-box\">\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"訂單編號\"\n                  placeholder=\"儲存表單後，系統會帶出\"\n                  defaultValue={basicInfo.orderNum}\n                  readOnly\n                  disabled\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"客戶名稱\"\n                  placeholder=\"請輸入客戶名稱\"\n                  defaultValue={basicInfo.company}\n                  onChange={(e) => onChangeInfoValue('company', e.target.value)}\n                  required\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"統一編號\"\n                  placeholder=\"請輸入統一編號\"\n                  defaultValue={basicInfo.taxID}\n                  onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n                  required\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"聯絡人\"\n                  placeholder=\"請輸入姓名\"\n                  defaultValue={basicInfo.contactPerson}\n                  onChange={(e) => onChangeInfoValue('contactPerson', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  type=\"email\"\n                  label=\"Email\"\n                  placeholder=\"請輸入Email\"\n                  defaultValue={basicInfo.email}\n                  onChange={(e) => onChangeInfoValue('email', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput label=\"電話\" placeholder=\"請輸入電話\" defaultValue={basicInfo.phone} />\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol md={12}>\n                <CFormInput\n                  label=\"地址\"\n                  placeholder=\"請輸入地址\"\n                  defaultValue={basicInfo.address}\n                />\n              </CCol>\n            </CRow>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">服務報價</h5>\n            <div>\n              <CButton\n                color=\"primary\"\n                shape=\"rounded-pill\"\n                className=\"me-2\"\n                onClick={() => addItem('PS')}\n              >\n                新增PS項目\n              </CButton>\n              <CButton color=\"primary\" shape=\"rounded-pill\" onClick={addItem}>\n                新增項目\n              </CButton>\n            </div>\n          </div>\n          {groupData && groupData.length ? (\n            <CNav variant=\"tabs\" role=\"tablist\">\n              {groupData.map((group, idx) => {\n                return (\n                  <CNavItem role=\"presentation\" key={idx} className=\"position-relative\">\n                    <CNavLink\n                      className=\"px-4\"\n                      active={currentTab === idx}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls={group.groupName}\n                      aria-selected={currentTab === idx}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        setCurrentTab(idx)\n                      }}\n                    >\n                      {group.groupName}\n                    </CNavLink>\n\n                    <CIcon\n                      icon={cilTrash}\n                      size=\"sm\"\n                      className=\"ms-1 tab-action-icon\"\n                      onClick={() => deleteGroup(idx)}\n                    ></CIcon>\n                  </CNavItem>\n                )\n              })}\n              <div className=\"d-flex align-items-center px-2\">\n                <div className=\"d-flex align-items-center me-2\" onClick={addGroup}>\n                  <div className=\"action-icon add-icon\">\n                    <CIcon className=\"text-light\" icon={cilPlus} />\n                  </div>\n                </div>\n                <CIcon\n                  icon={cilPencil}\n                  size=\"sm\"\n                  className=\"ms-1 action-icon\"\n                  onClick={() => openTabEditModal()}\n                ></CIcon>\n              </div>\n            </CNav>\n          ) : null}\n\n          <div className=\"mb-3\">\n            <div className=\"service-quote rounded-0 px-2 overflow-scroll\">\n              <CTabContent>\n                {groupData && groupData.length\n                  ? groupData.map((group, groupIdx) => {\n                      return (\n                        <CTabPane\n                          role=\"tabpanel\"\n                          aria-labelledby={group.groupName}\n                          visible={currentTab === groupIdx}\n                          key={groupIdx}\n                        >\n                          <CTable hover className=\"table-bg-none\" columns={headfields}>\n                            <CTableBody>\n                              {group.productLists && group.productLists.length\n                                ? group.productLists.map((item, idx) => {\n                                    return (\n                                      <CTableRow key={`${groupIdx}${item.uniKey}`}>\n                                        <CTableDataCell\n                                          align=\"middle\"\n                                          className=\"d-flex align-items-center\"\n                                        >\n                                          <CFormInput\n                                            defaultValue={item.partNum || ''}\n                                            size=\"sm\"\n                                            disabled\n                                            readOnly\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'partNum', e.target.value)\n                                            }\n                                          />\n\n                                          <CIcon\n                                            icon={cilFindInPage}\n                                            size=\"xxl\"\n                                            className=\"ms-1 action-icon\"\n                                            onClick={() => openModal(idx)}\n                                          ></CIcon>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.productDes || ''}\n                                            size=\"sm\"\n                                            disabled={item.partNum !== 'PS'}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'productDes', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"date\"\n                                            defaultValue={item.startDate || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'startDate', e.target.value, e)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.measure || ''}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'measure', e.target.value)\n                                            }\n                                            size=\"sm\"\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            min={0}\n                                            defaultValue={item.quantity || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'quantity', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.unitPrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.QTY || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'QTY', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.country || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'country', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.partNum !== 'PS' ? (\n                                            priceFormat(item.totalAmount) || '-'\n                                          ) : (\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.totalAmount || ''}\n                                              size=\"sm\"\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'totalAmount',\n                                                  parseInt(e.target.value),\n                                                )\n                                              }\n                                            />\n                                          )}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.estimatedRetailPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.currentNetPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.discountedNetPrice || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(\n                                                idx,\n                                                'discountedNetPrice',\n                                                e.target.value,\n                                              )\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.customerDiscount || '-'}%\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.maximumReslaePrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CInputGroup size=\"sm\">\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.markupMargin || ''}\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'markupMargin',\n                                                  e.target.value,\n                                                )\n                                              }\n                                            />\n                                            <CInputGroupText>%</CInputGroupText>\n                                          </CInputGroup>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <div\n                                            className=\"d-flex align-items-center\"\n                                            onClick={() => deleteItem(idx)}\n                                          >\n                                            <div className=\"action-icon deleted-icon\">\n                                              <CIcon className=\"text-light\" icon={cilMinus} />\n                                            </div>\n                                          </div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    )\n                                  })\n                                : null}\n                              <CTableRow>\n                                <CTableDataCell colSpan={16}>\n                                  小計：NT${priceFormat(group.subTotal) || '-'}\n                                </CTableDataCell>\n                              </CTableRow>\n                            </CTableBody>\n                          </CTable>\n                        </CTabPane>\n                      )\n                    })\n                  : null}\n              </CTabContent>\n            </div>\n            <div className=\"calculate-fields\">\n              <div className=\"field-title\">\n                <div className=\"field\">total(未稅)：</div>\n                <div className=\"field\">營業稅(5%)：</div>\n                <div className=\"field\">total(含稅)：</div>\n              </div>\n              <div className=\"field-content\">\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.taxExcluded) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.tax) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.taxIncluded) || '-'}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">備註</h5>\n          </div>\n          <div className=\"form-box px-2\">\n            <CFormTextarea\n              rows={15}\n              defaultValue={note}\n              onChange={(e) => setNote(e.target.value)}\n            ></CFormTextarea>\n          </div>\n          <CModal className=\"product-select-modal\" visible={open} onClose={() => setOpen(false)}>\n            <CModalHeader>\n              <CModalTitle>搜尋產品項目</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                <CRow>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>類別</CInputGroupText>\n                      <CFormSelect\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, level: e.target.value })\n                        }\n                      >\n                        <option value=\"Additional Product\">Additional Product</option>\n                        <option value=\"Enterprise\">Enterprise</option>\n                        <option value=\"Faculty\">Faculty</option>\n                        <option value=\"MVLP\">MVLP</option>\n                        <option value=\"Server and Cloud Enrollment\">\n                          Server and Cloud Enrollment\n                        </option>\n                        <option value=\"Student\">Student</option>\n                        <option value=\"MPSA\">MPSA</option>\n                      </CFormSelect>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>PN</CInputGroupText>\n                      <CFormInput\n                        placeholder=\"product number\"\n                        minLength={5}\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, keywords: e.target.value })\n                        }\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-4\">\n                    <CInputGroup>\n                      <CInputGroupText>關鍵字</CInputGroupText>\n                      <CFormInput\n                        placeholder=\"請輸入關鍵字(至少為5字)\"\n                        minLength={5}\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, keywords: e.target.value })\n                        }\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>Level</CInputGroupText>\n                      <CFormSelect\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, level: e.target.value })\n                        }\n                      >\n                        <option value=\"A\">A</option>\n                        <option value=\"B\">B</option>\n                        <option value=\"C\">C</option>\n                        <option value=\"D\">D</option>\n                        <option value=\"Non-Specific\">Non-Specific</option>\n                      </CFormSelect>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CButton\n                      className=\"w-100\"\n                      color=\"primary\"\n                      variant=\"outline\"\n                      onClick={searchProduct}\n                    >\n                      搜尋相關品項\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </div>\n              <div className=\"px-2 py-4\">\n                <h5>篩選結果</h5>\n                <div>\n                  <CTable hover columns={searchTableHead}>\n                    <CTableBody>\n                      {searchItems && searchItems.length\n                        ? searchItems.map((item, idx) => {\n                            return (\n                              <CTableRow key={`${item.itemName}_${item.purchasePeriod}`}>\n                                <CTableDataCell>\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    name=\"exampleRadios\"\n                                    id={item.itemName}\n                                    value={idx}\n                                  />\n                                </CTableDataCell>\n                                <CTableDataCell>{item.itemName}</CTableDataCell>\n                                <CTableDataCell>{item.level}</CTableDataCell>\n                                <CTableDataCell>{item.purchaseUnit}</CTableDataCell>\n                                <CTableDataCell>{item.purchasePeriod}</CTableDataCell>\n                                <CTableDataCell>{item.currentNetPrice}</CTableDataCell>\n                                <CTableDataCell>{item.estimatedRetailPrice}</CTableDataCell>\n                              </CTableRow>\n                            )\n                          })\n                        : null}\n                    </CTableBody>\n                  </CTable>\n                </div>\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpen(false)}>\n                Close\n              </CButton>\n              <CButton color=\"primary\" onClick={setCurrentItemData}>\n                選擇\n              </CButton>\n            </CModalFooter>\n          </CModal>\n          <CModal visible={openTabEdit} onClose={() => setOpenTabEdit(false)}>\n            <CModalHeader>\n              <CModalTitle>編輯群組名稱</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                {editTab && editTab.length\n                  ? editTab.map((groupName, idx) => {\n                      return (\n                        <div key={idx} className=\"mb-2\">\n                          <CInputGroup>\n                            <CFormInput\n                              defaultValue={groupName}\n                              onChange={(e) => {\n                                onChangeTabValue(idx, e.target.value)\n                              }}\n                            />\n                          </CInputGroup>\n                        </div>\n                      )\n                    })\n                  : null}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpenTabEdit(false)}>\n                取消\n              </CButton>\n              <CButton color=\"primary\" onClick={saveGroupDataName}>\n                確定\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      </div>\n      <div className=\"form-action-wrap px-4 py-2\">\n        <CButton color=\"warning\" onClick={() => setShowModal(!isShowModal)}>\n          儲存\n        </CButton>\n      </div>\n\n      <ErrorModal\n        isShow={isShowModal}\n        closeErrorModal={() => setShowModal(false)}\n        errorContain=\"無法建立「報價單號： XXXXX」(單號已存在)\"\n      />\n    </>\n  )\n}\n\nexport default Quotation\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeErrorModal","CModalHeader","CModalTitle","CModalBody","errorContain","CModalFooter","CButton","color","onClick","initData","orderNum","company","taxID","contactPerson","email","phone","address","groupName","productLists","partNum","productDes","startDate","measure","quantity","unitPrice","QTY","country","totalAmount","estimatedRetailPrice","currentNetPrice","discountedNetPrice","customerDiscount","maximumReslaePrice","markupMargin","taxExcluded","taxIncluded","tax","headfields","key","label","_style","minWidth","_props","className","searchTableHead","width","uid","ShortUniqueId","length","childPath","useParams","open","setOpen","_useState3","_useState4","openTabEdit","setOpenTabEdit","_useState5","_useState6","currentTab","setCurrentTab","_useState7","_useState8","currentItemIdx","setCurrentItemIdx","_useState9","_useState10","basicInfo","setBasicInfo","_useState11","_useState12","groupData","setGroupData","_useState13","_useState14","quotationTotal","setQuotationTotal","_useState15","_useState16","isShowModal","setShowModal","_useState17","keywords","level","_useState18","searchParams","setSearchParams","_useState19","_useState20","searchItems","setSearchItems","_useState21","_useState22","note","setNote","_useState23","_useState24","editTab","setEditTab","addItem","type","newGroupData","cloneDeep","tempProductLists","addUniKey","newProductLists","concat","_toConsumableArray","subTotal","countSubTotal","onChangeItemValue","idx","name","value","_newProductLists$idx","Math","round","forEach","item","onChangeInfoValue","newInfoData","arraydata","map","element","_objectSpread","uniKey","rnd","initQuotationGroup","newData","group","quotationContent","quotationGroup","groupLists","countQuotationTotal","CForm","action","method","CRow","CCol","md","CFormInput","placeholder","defaultValue","readOnly","disabled","onChange","e","target","required","shape","CNav","variant","role","CNavItem","CNavLink","active","component","preventDefault","CIcon","icon","cilTrash","size","groupIdx","splice","deleteGroup","newGroup","cilPlus","cilPencil","tabLists","push","console","log","openTabEditModal","CTabContent","CTabPane","CTable","hover","columns","CTableBody","CTableRow","CTableDataCell","align","cilFindInPage","index","min","priceFormat","parseInt","CInputGroup","CInputGroupText","deleteItem","cilMinus","colSpan","CFormTextarea","rows","CFormSelect","minLength","itemName","purchaseUnit","purchasePeriod","CFormCheck","id","newCurrentItem","newTabEditLists","onChangeTabValue","tab","ErrorModal"],"sourceRoot":""}