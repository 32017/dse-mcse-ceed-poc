{"version":3,"file":"static/js/715.93fa8700.chunk.js","mappings":"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","sources":["views/Share/Pagenate.js","views/quoteToCash/QuotationReport.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { CContainer, CRow, CCol, CButton, CFormInput } from '@coreui/react'\nimport { quotationReportList } from '../../mocks/quotationData'\nimport priceFormat from '../../utils/priceFormat'\nimport Pagenate from '../Share/Pagenate'\n\nconst QuotationReport = () => {\n  const [data, setData] = useState([])\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(0)\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    // axios.get('https://jsonplaceholder.typicode.com/posts/').then((response) => {\n    setData(quotationReportList)\n    setTotalPages(Math.ceil(quotationReportList.length / itemsPerPage))\n    // })\n  }, [])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = data.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n  return (\n    <div className=\"lists-container px-3\">\n      <CContainer>\n        <div className=\"form-box\">\n          <CRow>\n            <CCol md={3}>\n              <CFormInput label=\"客戶名稱\" placeholder=\"請輸入客戶名稱\" />\n            </CCol>\n            <CCol md={3}>\n              <CFormInput type=\"date\" label=\"起始日期\" placeholder=\"請輸入日期\" />\n            </CCol>\n            <CCol md={2} className=\"d-flex align-items-end\">\n              <CButton color=\"primary\">搜尋</CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"list-head\">\n          <CRow>\n            <CCol sm={1}>客戶名稱</CCol>\n            <CCol sm={1}>訂單編號</CCol>\n            <CCol sm={1}>Part Number</CCol>\n            <CCol sm={2}>Product Description</CCol>\n            <CCol sm={1}>Usage start Date</CCol>\n            <CCol sm={1}>Unit of Measure</CCol>\n            <CCol sm={1}>Unit of Price</CCol>\n            <CCol sm={1}>License Qty</CCol>\n            <CCol sm={1}>Total Amount</CCol>\n            <CCol sm={1}>MS CPS Price</CCol>\n            <CCol sm={1}>MS Cost Total</CCol>\n          </CRow>\n        </div>\n        <div className=\"list-body\">\n          {subset &&\n            subset.length > 0 &&\n            subset.map((item, i) => {\n              return (\n                <div className=\"list-item\" key={item.num + i}>\n                  <CRow>\n                    <CCol sm={1}>{item.client}</CCol>\n                    <CCol sm={1}>{item.num}</CCol>\n                    <CCol sm={1}>{item.partNum}</CCol>\n                    <CCol sm={2}>{item.productDes}</CCol>\n                    <CCol sm={1}>{item.startDate}</CCol>\n                    <CCol sm={1}>{item.measure}</CCol>\n                    <CCol sm={1}>{item.unitPrice}</CCol>\n                    <CCol sm={1}>{item.QTY}</CCol>\n                    <CCol sm={1}>{priceFormat(item.totalAmount)}</CCol>\n                    <CCol sm={1}>{priceFormat(item.CPSprice)}</CCol>\n                    <CCol sm={1}>{priceFormat(item.costTotal)}</CCol>\n                  </CRow>\n                </div>\n              )\n            })}\n        </div>\n        {data.length > itemsPerPage && (\n          <Pagenate\n            totalPages={totalPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </CContainer>\n    </div>\n  )\n}\n\nexport default QuotationReport\n"],"names":["_ref","totalPages","currentPage","handlePageChange","_jsx","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","setCurrentPage","_useState5","_useState6","setTotalPages","useEffect","quotationReportList","Math","ceil","length","startIndex","endIndex","subset","slice","className","children","_jsxs","CContainer","CRow","CCol","md","CFormInput","label","placeholder","type","CButton","color","sm","map","item","i","client","num","partNum","productDes","startDate","measure","unitPrice","QTY","priceFormat","totalAmount","CPSprice","costTotal","Pagenate","selectedPage","selected"],"sourceRoot":""}