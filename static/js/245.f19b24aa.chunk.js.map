{"version":3,"file":"static/js/245.f19b24aa.chunk.js","mappings":"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","sources":["components/HeaderList.js","service/apiHelper.js","service/api.js","service/useApi.js","views/Share/Loader.js","views/Share/Pagenate.js","views/quoteToCash/QuotationList.js","../node_modules/@coreui/icons/js/free/cil-find-in-page.js","../node_modules/@coreui/icons/js/free/cil-pencil.js"],"sourcesContent":["import { CRow, CCol } from '@coreui/react'\nimport React from 'react'\n\nconst HeaderList = () => {\n  return (\n    <div className=\"list-head\">\n      <CRow>\n        <CCol sm={2}>報價單編號</CCol>\n        <CCol sm={2}>客戶名稱</CCol>\n        <CCol sm={2}>客戶統編</CCol>\n        <CCol sm={2}>建立時間</CCol>\n        <CCol sm={1}>狀態</CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={1}>\n          操作\n        </CCol>\n        <CCol className=\"d-flex justify-content-center\" sm={2}>\n          預覽/下載\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default HeaderList\n","import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: array; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      statuses: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 上傳價格冊檔案\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\n/**\n * adfPipelineTrigger\n * pdf上傳Trigger\n * @returns\n */\n\nconst adfPipelineTrigger = () => {\n  let url = createUrl('api/adfPipelineTrigger')\n\n  return $http.post(url)\n}\n\n/**\n * updateLatestVersionData\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst updateLatestVersionData = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nconst updateLatestVersionDataByStatus = (params) => {\n  let request = {\n    body: {\n      status: 'IN_PROGRESS',\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n  adfPipelineTrigger,\n  updateLatestVersionData,\n  updateLatestVersionDataByStatus,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilPencil } from '@coreui/icons'\nimport { CContainer, CRow, CCol, CFormInput, CButton } from '@coreui/react'\nimport Pagenate from '@views/Share/Pagenate'\nimport { getOrders } from '@service/api'\nimport useApi from '@service/useApi'\nimport { renderStatusText } from '@utils/uitilFuntions'\nimport HeaderList from '@components/HeaderList'\nimport Loader from '@views/Share/Loader'\n\nconst renderApiStatusText = (text) => {\n  return <div className=\"d-flex justify-content-center p-5\">{text}</div>\n}\n\nconst QuotationList = () => {\n  const { request, data, loading, error } = useApi(getOrders)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(1)\n  const [reverseData, setReverseData] = useState([])\n  const [filterData, setFilterData] = useState({\n    taxID: '',\n    orderId: '',\n    startDate: '',\n    endDate: '',\n  })\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    request(filterData)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (data && data.status.toString() === '200') {\n      setTotalPages(Math.ceil(data.data.orders.length / itemsPerPage))\n      setReverseData(data.data.orders.reverse())\n    }\n  }, [data])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = reverseData?.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n\n  const renderContentLists = () => {\n    return (\n      <div className=\"list-body\">\n        {subset?.length > 0\n          ? subset.map((item, i) => {\n              return (\n                <div className=\"list-item\" key={item.num + 'btn' + i}>\n                  <CRow className=\"align-items-center\">\n                    <CCol sm={2}>{item.orderId}</CCol>\n                    <CCol sm={2}>{item.company}</CCol>\n                    <CCol sm={2}>{item.taxID}</CCol>\n                    <CCol sm={2}>{item.createdDate}</CCol>\n                    <CCol sm={1}>{renderStatusText(item.status)}</CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={1}>\n                      {item.status === 'A' && (\n                        <Link\n                          to={`/quotation/edit?orderId=${item.orderId}`}\n                          className=\"action-icon\"\n                        >\n                          <CIcon className=\"\" icon={cilPencil} />\n                        </Link>\n                      )}\n                    </CCol>\n                    <CCol className=\"d-flex justify-content-center\" sm={2}>\n                      <Link to={`/pdfContainer?orderId=${item.orderId}`} className=\"action-icon\">\n                        <CIcon icon={cilFindInPage} />\n                      </Link>\n                    </CCol>\n                  </CRow>\n                </div>\n              )\n            })\n          : renderApiStatusText('無資料')}\n      </div>\n    )\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    filterData[name] = value\n    setFilterData(filterData)\n  }\n  const handleSearch = () => {\n    request(filterData)\n    setCurrentPage(0)\n  }\n\n  if (error) return renderApiStatusText('系統忙碌中，請稍後再試。')\n\n  return (\n    <div className=\"lists-container px-3\">\n      <CContainer>\n        <div className=\"form-box\">\n          <CRow className=\"mb-3\">\n            <CCol md={2} sm={4}>\n              <CFormInput\n                label=\"報價單編號\"\n                placeholder=\"請輸入報價單編號\"\n                defaultValue={filterData.orderId}\n                onChange={(e) => onChangeInfoValue('orderId', e.target.value)}\n              />\n            </CCol>\n            <CCol md={2} sm={4}>\n              <CFormInput\n                label=\"客戶統編\"\n                placeholder=\"請輸入客戶統編\"\n                defaultValue={filterData.taxID}\n                onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n              />\n            </CCol>\n            <CCol md={2} sm={4}>\n              <CFormInput\n                type=\"date\"\n                label=\"起始日期\"\n                placeholder=\"請輸入日期\"\n                defaultValue={filterData.startDate}\n                onChange={(e) => onChangeInfoValue('startDate', e.target.value)}\n              />\n            </CCol>\n            <CCol md={2} sm={4}>\n              <CFormInput\n                type=\"date\"\n                label=\"結束日期\"\n                placeholder=\"請輸入日期\"\n                defaultValue={filterData.endDate}\n                onChange={(e) => onChangeInfoValue('endDate', e.target.value)}\n              />\n            </CCol>\n            <CCol md={2} sm={4} className=\"d-flex align-items-end\">\n              <CButton onClick={() => handleSearch()} color=\"primary\">\n                搜尋\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <HeaderList />\n        {loading ? (\n          <Loader isShow />\n        ) : (\n          <>\n            {renderContentLists()}\n            {data?.data?.orders?.length > itemsPerPage && (\n              <Pagenate\n                totalPages={totalPages}\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            )}\n          </>\n        )}\n      </CContainer>\n    </div>\n  )\n}\n\nexport default QuotationList\n","export const cilFindInPage = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M334.627,16H48V496H472V153.373ZM440,464H80V48H321.373L440,166.627Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M239.861,152a95.861,95.861,0,1,0,53.624,175.284l68.03,68.029,22.627-22.626-67.5-67.5A95.816,95.816,0,0,0,239.861,152ZM176,247.861a63.862,63.862,0,1,1,63.861,63.861A63.933,63.933,0,0,1,176,247.861Z' class='ci-primary'/>\"]","export const cilPencil = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M29.663,482.25l.087.087a24.847,24.847,0,0,0,17.612,7.342,25.178,25.178,0,0,0,8.1-1.345l142.006-48.172,272.5-272.5A88.832,88.832,0,0,0,344.334,42.039l-272.5,272.5L23.666,456.541A24.844,24.844,0,0,0,29.663,482.25Zm337.3-417.584a56.832,56.832,0,0,1,80.371,80.373L411.5,180.873,331.127,100.5ZM99.744,331.884,308.5,123.127,388.873,203.5,180.116,412.256,58.482,453.518Z' class='ci-primary'/>\"]"],"names":["_jsx","className","children","_jsxs","CRow","CCol","sm","$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","status","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","orderId","body","post","getOrdersByStatus","statuses","approveOrder","action","getOrders","params","taxID","startDate","endDate","getOrderReports","company","createdDate","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","concat","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","adfPipelineTrigger","updateLatestVersionData","updateLatestVersionDataByStatus","apiFunction","_ref","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","length","Array","name","t0","message","finish","resetError","resetData","props","visible","setVisible","useEffect","isShow","CSpinner","totalPages","currentPage","handlePageChange","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","renderApiStatusText","text","_data$data","_data$data$orders","_useApi","useApi","setCurrentPage","setTotalPages","reverseData","setReverseData","_useState7","_useState8","filterData","setFilterData","toString","Math","ceil","orders","reverse","startIndex","endIndex","subset","slice","onChangeInfoValue","value","CContainer","md","CFormInput","label","placeholder","defaultValue","onChange","e","target","type","CButton","onClick","color","HeaderList","Loader","_Fragment","map","item","i","renderStatusText","Link","to","CIcon","icon","cilPencil","cilFindInPage","num","Pagenate","selectedPage","selected"],"sourceRoot":""}