{"version":3,"file":"static/js/784.80e7ae15.chunk.js","mappings":"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","sources":["utils/setting.js","views/pricebook/AppendItemData.js"],"sourcesContent":["const CAGETORY_OPTIONS = [\n  {\n    id: 'additional_product',\n    displayName: 'Additional Product',\n  },\n  {\n    id: 'enterprise',\n    displayName: 'Enterprise',\n  },\n  {\n    id: 'faculty',\n    displayName: 'Faculty',\n  },\n  {\n    id: 'mvlp',\n    displayName: 'MVLP',\n  },\n  {\n    id: 'server_and_cloud_enrollment',\n    displayName: 'Server and Cloud Enrollment',\n  },\n  {\n    id: 'student',\n    displayName: 'Student',\n  },\n  {\n    id: 'mpsa',\n    displayName: 'MPSA',\n  },\n]\n\nconst PRICE_LEVEL_OPTIONS = [\n  {\n    id: 'a',\n    displayName: 'A',\n  },\n  {\n    id: 'b',\n    displayName: 'B',\n  },\n  {\n    id: 'c',\n    displayName: 'C',\n  },\n  {\n    id: 'd',\n    displayName: 'D',\n  },\n  {\n    id: 'non_specific',\n    displayName: 'NON SPECIFIC',\n  },\n]\nexport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS }\n","import React from 'react'\nimport {\n  CInputGroup,\n  CFormInput,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CContainer,\n  CAlert,\n  CFormSelect,\n} from '@coreui/react'\nimport * as XLSX from 'xlsx'\nimport { CAGETORY_OPTIONS } from '../../utils/setting'\n\nconst AppendItemData = () => {\n  const defaultExcelData = { header: [], body: [] }\n  const [excelData, setExcelData] = React.useState(defaultExcelData)\n  // meta: { updatedUser: email, fileName: ..., }\n  const uploadPayload = { data: [], meta: {} }\n  const uploadRef = React.useRef()\n  const categoryOptions = CAGETORY_OPTIONS.map((item) => {\n    return { label: item.displayName, value: item.id }\n  })\n\n  const uploadData = () => {\n    for (let i = 0; i < excelData.body.length; i++) {\n      let data = excelData.body[i]\n      let [\n        partNumber,\n        itemName,\n        level,\n        purchaseUnit,\n        purchasePeriod,\n        currentNetPrice,\n        estimatedRetailPrice,\n      ] = data\n      uploadPayload.data.push({\n        partNumber,\n        itemName,\n        level,\n        purchaseUnit,\n        purchasePeriod,\n        currentNetPrice,\n        estimatedRetailPrice,\n      })\n    }\n    console.log(uploadPayload)\n    if (uploadPayload.data.length > 0) {\n      //call api\n    }\n  }\n  const removeFile = () => {\n    uploadRef.current.value = null\n    setExcelData(defaultExcelData)\n  }\n  const handleChange = (e) => {\n    const files = e.target.files\n    console.log(files)\n    handleFile(files[0])\n  }\n  const handleFile = (file) => {\n    if (!file) {\n      console.error('file is empty')\n      return\n    }\n    /* set up FileReader */\n    const reader = new FileReader()\n    const rABS = !!reader.readAsBinaryString\n    reader.onload = (e) => {\n      try {\n        /* Parse data */\n        const bstr = e.target.result\n        const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' })\n        /* Get first worksheet */\n        const wsname = wb.SheetNames[0]\n        const ws = wb.Sheets[wsname]\n        console.log(rABS, wb)\n        /* Convert array of arrays */\n        const data = XLSX.utils.sheet_to_json(ws, { header: 1 })\n        /* Update state */\n        console.log(data)\n        /* set to state */\n        convertState(data)\n        console.log(excelData)\n      } catch (error) {\n        console.error(error)\n      }\n    }\n    if (rABS) reader.readAsBinaryString(file)\n    else reader.readAsArrayBuffer(file)\n  }\n  const convertState = (data) => {\n    if (Array.isArray(data)) {\n      const header = data[0]\n      const body = data.splice(1)\n      setExcelData({ header, body })\n    }\n  }\n  const renderCell = (item) => {\n    return (\n      <>\n        {item.map((cell, cellIndex) => {\n          return <CTableDataCell key={`${cell}_${cellIndex}`}>{cell ? cell : ''}</CTableDataCell>\n        })}\n      </>\n    )\n  }\n  return (\n    <div className=\"px-3\">\n      <CContainer>\n        <CAlert\n          color=\"info\"\n          dismissible\n          onClose={() => {\n            alert('👋 Well, hi there! Thanks for dismissing me.')\n          }}\n        >\n          MS檟格冊新增項目: 更新目前版本的MS檟格冊\n        </CAlert>\n        <CRow>\n          <CCol md={4}>\n            <CFormSelect aria-label=\"Default select example\" options={categoryOptions} />\n          </CCol>\n          <CCol md={4}>\n            <CInputGroup className=\"mb-3\">\n              <CFormInput\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"inputFile\"\n                onChange={handleChange}\n                ref={uploadRef}\n              />\n              <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                開始上傳\n              </CButton>\n              <CButton type=\"button\" color=\"secondary\" variant=\"outline\" onClick={removeFile}>\n                移除\n              </CButton>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n        <CRow md={12} className=\"form-box\">\n          <CCol md={12}>\n            <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n              更新價格冊\n            </CButton>\n          </CCol>\n        </CRow>\n        <div>\n          <CRow className=\"form-box px-2 overflow-scroll\">\n            <CTable hover className=\"table-bg-none\">\n              <CTableHead>\n                <CTableRow>\n                  {excelData.header.map((item, index) => {\n                    return (\n                      <CTableHeaderCell scope=\"col\" key={`${item}_${index}`}>\n                        {item}\n                      </CTableHeaderCell>\n                    )\n                  })}\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {excelData.body.map((item, index) => {\n                  return <CTableRow key={`body_${index}`}>{renderCell(item)}</CTableRow>\n                })}\n              </CTableBody>\n            </CTable>\n          </CRow>\n        </div>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default AppendItemData\n"],"names":["CAGETORY_OPTIONS","id","displayName","defaultExcelData","header","body","_React$useState","React","_React$useState2","_slicedToArray","excelData","setExcelData","uploadRef","categoryOptions","map","item","label","value","handleFile","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","type","wsname","SheetNames","ws","Sheets","console","log","data","sheet_to_json","convertState","error","readAsArrayBuffer","Array","isArray","splice","renderCell","_jsx","_Fragment","children","cell","cellIndex","CTableDataCell","concat","className","_jsxs","CContainer","CAlert","color","dismissible","onClose","alert","CRow","CCol","md","CFormSelect","options","CInputGroup","CFormInput","accept","onChange","files","ref","CButton","variant","onClick","current","CTable","hover","CTableHead","CTableRow","index","CTableHeaderCell","scope","CTableBody"],"sourceRoot":""}