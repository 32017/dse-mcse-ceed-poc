{"version":3,"file":"static/js/861.4df12205.chunk.js","mappings":"8jBAEMA,E,SAAQC,EAAMC,OAAO,CACzBC,QAAS,4CACTC,QAAS,MAGXJ,EAAMK,aAAaC,QAAQC,KAAI,SAACD,GAE9B,OADAE,QAAQC,IAAI,mBAAoBC,KAAKC,UAAUL,EAAS,KAAM,IACvDA,CACT,IAEAN,EAAMK,aAAaO,SAASL,KAC1B,SAACK,GACC,OACO,MADCA,EAASC,OAEND,EAASE,KAETC,QAAQC,OAAOJ,EAE5B,IACA,SAACK,GACC,OAAOF,QAAQC,OAAOC,EACxB,IAGF,I,EAAA,I,+BCtBMC,EAAY,SAACC,GAKjB,OAAOA,EAAM,IAHIC,IAAAA,UAAa,CAC5BC,KAFS,4DAKb,EASMC,EAAe,SAACC,GACpB,IAAIjB,EAAU,CACZkB,KAAM,CACJD,QAASA,IAGTJ,EAAMD,EAAU,oBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAQME,EAAoB,SAACb,GACzB,IAAIP,EAAU,CACZkB,KAAM,CACJG,SAAUd,IAGVM,EAAMD,EAAU,yBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAUMI,EAAe,SAACC,EAAQN,GAC5B,IAAIjB,EAAU,CACZkB,KAAM,CACJK,OAAQA,EACRN,QAASA,IAGTJ,EAAMD,EAAU,oBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAYMM,EAAY,SAACC,GACjB,IAAIzB,EAAU,CACZkB,KAAM,CACJQ,MAAOD,EAAOC,MACdT,QAASQ,EAAOR,QAChBU,UAAWF,EAAOE,UAClBC,QAASH,EAAOG,UAGhBf,EAAMD,EAAU,iBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAUMW,EAAkB,SAACJ,GACvB,IAAIzB,EAAU,CACZkB,KAAM,CACJY,QAASL,EAAOK,QAChBC,YAAaN,EAAOM,cAGpBlB,EAAMD,EAAU,uBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAaMc,EAAoB,SAAAC,EAAAC,GAAA,OAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAUC,GAAO,IAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzBpD,EAAMqD,IAAI,sDAADC,OACqBR,EAAQ,KAAAQ,OAAIP,EAAO,YACzE,CACEQ,aAAc,gBAEjB,OALgB,OAAXP,EAAWE,EAAAM,KAAAN,EAAAO,OAAA,UAOVC,EAAAA,EAAAA,IAAkBV,IAAY,wBAAAE,EAAAS,OAAA,GAAAd,EAAA,MACtCe,MAAA,KAAAC,UAAA,EAOKC,EAAoB,SAAC/B,GACzB,IAAIzB,EAAU,CACZkB,KAAMO,EACNgC,QAAS,CACPA,QAAS,CACP,eAAgB,yBAIlB5C,EAAMD,EAAU,yBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KAAMlB,EAAQyD,QAC/C,EASMC,EAAqB,SAACjC,GAC1B,IAAIzB,EAAU,CACZkB,KAAM,CACJyC,SAAUlC,EAAOkC,SACjBC,YAAanC,EAAOmC,YACpBC,YAAapC,EAAOoC,cAGpBhD,EAAMD,EAAU,0BAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KAAMlB,EAAQyD,QAC/C,EAYMK,EAAY,SAACrC,GACjB,IAAIzB,EAAU,CACZkB,MAAI6C,EAAAA,EAAAA,GAAA,GACCtC,IAGHZ,EAAMD,EAAU,iBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAYM8C,EAAc,SAACvC,GACnB,IAAIzB,EAAU,CACZkB,MAAI6C,EAAAA,EAAAA,GAAA,GACCtC,IAGHZ,EAAMD,EAAU,mBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAYM+C,EAAc,SAACxC,GACnB,IAAIzB,EAAU,CACZkB,MAAI6C,EAAAA,EAAAA,GAAA,GACCtC,IAGHZ,EAAMD,EAAU,mBAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KACjC,EAYMgD,EAAqB,WACzB,IAAIrD,EAAMD,EAAU,0BAEpB,OAAOlB,EAAMyB,KAAKN,EACpB,EAQMsD,EAAqB,WACzB,IAAItD,EAAMD,EAAU,0BAEpB,OAAOlB,EAAMyB,KAAKN,EACpB,EAUMuD,EAA0B,SAAC3C,GAC/B,IAAIzB,EAAU,CACZkB,KAAM,CACJyC,SAAUlC,EAAOkC,SACjBE,YAAapC,EAAOoC,cAGpBhD,EAAMD,EAAU,+BAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KAAMlB,EAAQyD,QAC/C,EAEMY,EAAkC,SAAC5C,GACvC,IAAIzB,EAAU,CACZkB,KAAM,CACJX,OAAQ,gBAGRM,EAAMD,EAAU,+BAEpB,OAAOlB,EAAMyB,KAAKN,EAAKb,EAAQkB,KAAMlB,EAAQyD,QAC/C,C,qFC1PA,IAxCe,SAACa,GAAiB,IAADC,EAC9BC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BhE,EAAIkE,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/BlE,EAAKmE,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA8BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA4B1B,MAAO,CACLzE,KAAAA,EACAG,MAAAA,EACAuE,QAAAA,EACAlF,QA9BW,kBAAAuE,EAAAA,IAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8C,IAAA,IAAAC,EAAAC,EAAAC,EAAAjF,EAAAkF,EAAAC,EAAAlC,UAAA,OAAAlB,EAAAA,EAAAA,KAAAM,MAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAEF,IADZqC,GAAW,GACXJ,EAAS,IAAGM,EAAAI,EAAAE,OAFYL,EAAI,IAAAM,MAAAP,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAE,EAAAF,GAAA,OAAAG,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EAIHwB,EAAWhB,WAAC,EAAGgC,GAAK,OAG1B,OAHXhF,EAAQoF,EAAAxC,KACdhD,QAAQC,IAAI,aAAcC,KAAKC,UAAUC,IACzCJ,QAAQC,IAAI,gBAA4B,OAAXmE,QAAW,IAAXA,OAAW,EAAXA,EAAauB,MAC1CjB,EAAQtE,GAASoF,EAAAvC,OAAA,SACV7C,GAAQ,QAAAoF,EAAA7C,KAAA,GAAA6C,EAAAI,GAAAJ,EAAA,SAETF,EAAQ,2BAAAxC,OAA8BsC,EAAI,KAAAtC,OAAI0C,EAAAI,GAAEC,QAAO,KAC7D7F,QAAQS,MAAM6E,GACdT,EAASW,EAAAI,GAAEC,SAAW,iCAAgC,QAErC,OAFqCL,EAAA7C,KAAA,GAEtDsC,GAAW,GAAMO,EAAAM,OAAA,6BAAAN,EAAArC,OAAA,GAAA+B,EAAA,0BAEpB9B,MAAA,KAAAC,UAAA,EAeC0C,WAbiB,WACjBlB,EAAS,GACX,EAYEmB,UAVgB,WAChBtB,EAAQ,KACV,EAUF,C,4FCzCA,IAAMuB,EAAmB,CACvB,CACEC,GAAI,qBACJC,YAAa,sBAEf,CACED,GAAI,aACJC,YAAa,cAEf,CACED,GAAI,UACJC,YAAa,WAEf,CACED,GAAI,OACJC,YAAa,QAEf,CACED,GAAI,8BACJC,YAAa,+BAEf,CACED,GAAI,UACJC,YAAa,WAEf,CACED,GAAI,OACJC,YAAa,SAIXC,EAAsB,CAC1B,CACEF,GAAI,IACJC,YAAa,KAEf,CACED,GAAI,IACJC,YAAa,KAEf,CACED,GAAI,IACJC,YAAa,KAEf,CACED,GAAI,IACJC,YAAa,KAEf,CACED,GAAI,eACJC,YAAa,gB,qFCNjB,IAzCkB,SAACE,GACjB,IAAA/B,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCgC,EAAO9B,EAAA,GAAE+B,EAAU/B,EAAA,GAK1B,OAJAgC,EAAAA,EAAAA,YAAU,WACRD,EAAWF,EAAMI,OACnB,GAAG,CAACJ,EAAMI,UAGRC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACC,UAAU,SAAST,QAASA,EAASU,QAASX,EAAMY,WAAWL,SAAA,EACrEF,EAAAA,EAAAA,KAACQ,EAAAA,GAAY,CAAAN,UACXF,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CAAAP,SAAEP,EAAMe,OAAS,QAE/BV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAAAT,SAAEP,EAAMiB,eACnBT,EAAAA,EAAAA,MAACU,EAAAA,GAAY,CAAAX,SAAA,CACVP,EAAMmB,cACLd,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,MAAM,YAAYC,QAAStB,EAAMuB,cAAchB,SACrDP,EAAMmB,cAGVnB,EAAMwB,eACLnB,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAAStB,EAAMyB,eAAelB,SACpDP,EAAMwB,sBAOrB,C,qFCXA,IAjBe,SAACxB,GACd,IAAA/B,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCgC,EAAO9B,EAAA,GAAE+B,EAAU/B,EAAA,GAK1B,OAJAgC,EAAAA,EAAAA,YAAU,WACRD,EAAWF,EAAMI,OACnB,GAAG,CAACJ,EAAMI,SAEHH,GACLI,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,cAAanB,UAC1BF,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAACD,UAAU,UAEpB,IACN,C,oHCgCA,IAxCoB,SAACE,GAAS,OAAK,SAAC5B,GAClC,IAAA/B,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC4D,EAAO1D,EAAA,GAAE2D,EAAU3D,EAAA,GAC1BG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCyD,EAAOxD,EAAA,GAAEyD,EAAUzD,EAAA,GAE1B0D,GAA0CC,EAAAA,EAAAA,GAAOvE,EAAAA,IAAzClE,EAAOwI,EAAPxI,QAASQ,EAAIgI,EAAJhI,KAAMG,EAAK6H,EAAL7H,MAAOuE,EAAOsD,EAAPtD,SAC9BwB,EAAAA,EAAAA,YAAU,WACR1G,GAEF,GAAG,CAACsI,KAMJ5B,EAAAA,EAAAA,YAAU,WACRgC,GAEF,GAAG,CAAC/H,EAAOH,IAGX,IAAMkI,EAAqB,WACrB/H,GACFT,QAAQS,MAAM,qCAAsCA,GAGlDH,IACkB,MAAhBA,EAAKD,OACP8H,EAAW7H,EAAKA,MAEhBN,QAAQC,IAAI,0CAA+C,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMD,QAGnE,EAEA,OAAO2E,GACL0B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAAChC,QAAM,KAEdC,EAAAA,EAAAA,KAACuB,GAASpE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKwC,GAAK,IAAEqC,QAASR,EAASS,aA3BrB,WACnBN,GAAYD,EACd,IA2BF,CAAC,C,wMCxBKQ,EAAmB,CAAEtB,YAAa,2BAAQF,MAAO,IACjDyB,EAAgB,CAAEvB,YAAa,+DAAcF,MAAO,4BACpD0B,EAAkB,CACtBC,QAAS,CAAEC,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACxDC,KAAM,CAAEH,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACrDE,KAAM,CAAEJ,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACrDG,4BAA6B,CAC3BL,SAAU,6CACVC,MAAM,EACNC,UAAW,MAEbI,QAAS,CAAEN,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACxDK,mBAAoB,CAAEP,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACnEM,WAAY,CAAER,SAAU,6CAAWC,MAAM,EAAOC,UAAW,OAEvDO,EAAgB,CACpBV,QAAS,EACTI,KAAM,EACNC,KAAM,EACNC,4BAA6B,EAC7BC,QAAS,EACTC,mBAAoB,EACpBC,WAAY,GA8Sd,WAAeE,EAAAA,EAAAA,IA5SQ,SAACrD,GAAW,IAADhC,EAAApC,EAAA0H,EAAAC,EAChCtB,GAA0CC,EAAAA,EAAAA,GAAO/E,EAAAA,IAAzC1D,EAAOwI,EAAPxI,QAASQ,EAAIgI,EAAJhI,KAAM0E,EAAOsD,EAAPtD,QAASvE,EAAK6H,EAAL7H,MAC1BoJ,GAAuBtB,EAAAA,EAAAA,GAAOjF,EAAAA,IAC9BwG,GAAwBvB,EAAAA,EAAAA,GAAOtE,EAAAA,IACrCK,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCoE,EAAOlE,EAAA,GAAEuF,EAAUvF,EAAA,GACpBwF,EAAYC,EAAAA,OAAa,IAC/BtF,GAAgCJ,EAAAA,EAAAA,UAASuE,GAAgBlE,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAlDuF,EAAQtF,EAAA,GAAEuF,EAAWvF,EAAA,GAC5BE,GAA8BP,EAAAA,EAAAA,UAASkF,GAAc1E,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA9CsF,EAAQrF,EAAA,GAAEsF,EAAStF,EAAA,GAC1BuF,GAAgC/F,EAAAA,EAAAA,WAAS,GAAMgG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAAxCE,EAASD,EAAA,GAAEE,EAAUF,EAAA,GAC5BG,GAAoCnG,EAAAA,EAAAA,WAAS,GAAMoG,GAAAlG,EAAAA,EAAAA,GAAAiG,EAAA,GAA5CE,EAAWD,EAAA,GAAEE,EAAYF,EAAA,GAChCG,GAAsCvG,EAAAA,EAAAA,UAAS,IAAGwG,GAAAtG,EAAAA,EAAAA,GAAAqG,EAAA,GAA3CnH,EAAWoH,EAAA,GAAEC,EAAcD,EAAA,GAClCE,IAAkC1G,EAAAA,EAAAA,UAAS,CAAE+C,YAAa,GAAIF,MAAO,KAAK8D,IAAAzG,EAAAA,EAAAA,GAAAwG,GAAA,GAAnEE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAkC9G,EAAAA,EAAAA,WAAS,GAAK+G,IAAA7G,EAAAA,EAAAA,GAAA4G,GAAA,GAAzCE,GAAUD,GAAA,GAAEE,GAAWF,GAAA,GAE1BG,GAAYC,EAAAA,EACZ1B,EAAU2B,QAAQlG,SAAWgG,GAAUhG,SACzCuE,EAAU2B,QAAUjG,MAAM+F,IAAWG,KACnC,SAACC,EAAMC,GAAC,OAAK9B,EAAU2B,QAAQE,IAAS5B,EAAAA,WAAiB,MAI7DzD,EAAAA,EAAAA,YAAU,WACRuF,KACI1F,EAAMqC,UACRqB,EAAW1D,EAAMqC,SACjB8C,GAAuD,eAA3CnF,EAAMqC,QAAQsD,kBAAkB3L,QAEhD,GAAG,CAACgG,EAAMqC,WAEVlC,EAAAA,EAAAA,YAAU,WACRxG,QAAQC,IAAI,WAAYmK,EAC1B,GAAG,CAACA,KACJ5D,EAAAA,EAAAA,YAAU,WACRxG,QAAQC,IAAI,WAAYiK,EAC1B,GAAG,CAACA,IAEJ,IA+BM+B,GAAa,SAAC/F,EAAI4F,GACtB9B,EAAU2B,QAAQG,GAAGI,MAAQ,KAC7BhC,EAAShE,GAAIgD,UAAY,KACzBiB,GAAWtG,EAAAA,EAAAA,GAAC,CAAC,EAAIqG,GACnB,EAQMiC,GAAa,SAACC,EAAMlG,GACnBkG,GAIHlC,EAAShE,GAAI+C,MAAO,EACpBkB,GAAWtG,EAAAA,EAAAA,GAAC,CAAC,EAAIqG,KAJjBlK,QAAQS,MAAM,gBAMlB,EAEM4L,GAAe,WACnB,QAAAC,EAAA,EAAAC,EAA2BC,OAAOC,QAAQvC,GAASoC,EAAAC,EAAA9G,OAAA6G,IAAE,CAAhD,IAAAI,GAAAjI,EAAAA,EAAAA,GAAA8H,EAAAD,GAAA,GAAOK,EAAGD,EAAA,GACTN,EAAO,CAAEpD,SADO0D,EAAA,GACS1D,SAAU1G,SAAUqK,GACjDhJ,EAAYiJ,KAAKR,EACnB,CACApB,EAAerH,EACjB,EACMkJ,GAAW,SAAA9K,GAAA,OAAAsC,EAAAA,IAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8C,EAAO4H,GAAK,OAAA3K,EAAAA,EAAAA,KAAAM,MAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EACxB9C,EAAQ,CACZ2D,SAAU,QACVC,YAAa,GACbC,YAAaA,IACb,cAAA6B,EAAA5C,KAAA,EACIkH,EAAsBhK,UAAS,OACrC4F,MAAMoH,GAAOlB,KAAI,SAACmB,EAAGjB,GAAC,OAAM9B,EAAU2B,QAAQG,GAAGI,MAAQ,IAAI,IAAE,wBAAA1G,EAAArC,OAAA,GAAA+B,EAAA,MAChE9B,MAAA,KAAAC,UAAA,EACK0I,GAAgB,WACpBf,EAAe,IACfP,GAAW,GACXJ,EAAU,CACRtB,QAAS,EACTI,KAAM,EACNC,KAAM,EACNC,4BAA6B,EAC7BC,QAAS,EACTC,mBAAoB,EACpBC,WAAY,IAEdW,EAAY,CACVpB,QAAS,CAAEC,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACxDC,KAAM,CAAEH,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACrDE,KAAM,CAAEJ,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACrDG,4BAA6B,CAC3BL,SAAU,6CACVC,MAAM,EACNC,UAAW,MAEbI,QAAS,CAAEN,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACxDK,mBAAoB,CAAEP,SAAU,6CAAWC,MAAM,EAAOC,UAAW,MACnEM,WAAY,CAAER,SAAU,6CAAWC,MAAM,EAAOC,UAAW,OAE/D,GASA1C,EAAAA,EAAAA,YAAU,WAAO,IAADwG,GAEZvM,GACCH,GAAwB,MAAhBA,EAAKD,QACdyJ,EAAsBrJ,OACrBqJ,EAAsBxJ,MAA8C,MAAtCwJ,EAAsBxJ,KAAKD,UAE1D+K,GAAavC,GACbgC,GAAa,IAEXf,EAAsBxJ,MAA+C,OAAb,QAA1B0M,EAAAlD,EAAsBxJ,YAAI,IAAA0M,OAAA,EAA1BA,EAA4B3M,UAC5D+K,GAAaxC,GACbiC,GAAa,GAIjB,GAAG,CAACvK,EAAMG,EAAOqJ,EAAsBxJ,KAAMwJ,EAAsBrJ,QAGnE,IAAMwM,GAAiB,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAExB,OAAgB,IAATA,GACLzG,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACC,GAAI,EAAGtF,UAAU,8BAA6BnB,UAClDF,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,CACJvF,UAAoB,IAAToF,EAAa,iBAAmB,eAC3CI,KAAMC,EAAAA,EACNC,KAAK,SAGP,IACN,EAGMC,GAAsB,SAAHC,GAAkC,IAA5BC,EAAeD,EAAfC,gBAAiBC,EAAGF,EAAHE,IAEtC1H,EAAoByH,EAApBzH,YAAaD,EAAO0H,EAAP1H,GACrB,OACEW,EAAAA,EAAAA,MAACiH,EAAAA,GAAI,CAAAlH,SAAA,EACHF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACC,GAAI,EAAEzG,UACVF,EAAAA,EAAAA,KAACqH,EAAAA,GAAU,CAACC,KAAK,OAAO9B,MAAO/F,EAAa8H,UAAU,EAAMC,UAAU,OAExExH,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACC,GAAI,EAAEzG,UACVC,EAAAA,EAAAA,MAACsH,EAAAA,GAAW,CAACpG,UAAU,OAAMnB,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,SAAOkB,UAAU,YAAWnB,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,oCACLF,EAAAA,EAAAA,KAACqH,EAAAA,GAAU,CACTK,OAAO,QACPlI,GAAIA,EACJ8H,KAAK,OACLK,SAAU,SAACC,IApHJ,SAACA,EAAGpI,GACvB,IAAMqI,EAAQD,EAAEE,OAAOD,MACvBrE,EAAShE,GAAI8C,SAAWuF,EAAM,GAAG5I,KACjCuE,EAAShE,GAAIgD,UAAYqF,EAAM,GAC/BpE,GAAWtG,EAAAA,EAAAA,GAAC,CAAC,EAAIqG,IACjBiC,GAAWoC,EAAM,GAAIrI,EACvB,CA+GgBuI,CAAaH,EAAGpI,EAClB,EACAwI,IAAK,SAACxI,GAAE,OAAM8D,EAAU2B,QAAQkC,GAAO3H,CAAE,EACzCyI,MAAO,CAAEC,QAAS,cAGtBlI,EAAAA,EAAAA,KAACqH,EAAAA,GAAU,CACTE,UAAU,EACVC,UAAU,EACVF,KAAK,OACL9B,MAAOhC,EAAShE,GAAI8C,UAAY,6CAChC0F,IAAK,SAACxI,GAAE,OAAM8D,EAAU2B,QAAQkC,GAAO3H,CAAE,EACzCyI,MAAO,CAAEE,gBAAiB,kBAE5BnI,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CACNuG,KAAK,SACLtG,MAAQwC,EAAShE,GAAI+C,KAAqB,UAAd,YAC5B6F,QAAQ,UACRZ,UAAWhE,EAAShE,GAAI+C,KACxBtB,QAAS,kBA5KF,SAACzB,EAAI4F,GAAO,IAADiD,EAI5B,GAHA3E,EAASlE,GAAM,EACfmE,GAASxG,EAAAA,EAAAA,GAAC,CAAC,EAAIuG,IAEC,QAAhB2E,EAAI7E,EAAShE,UAAG,IAAA6I,GAAZA,EAAc7F,UAAW,CAC3B,IAAI8F,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQhF,EAAShE,GAAIgD,WAErCW,EACG/J,QAAQkP,EAASG,OAAO,SACxBC,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIhP,OAAgB,CACtB+J,EAASlE,GAAM,EACfmE,GAASxG,EAAAA,EAAAA,GAAC,CAAC,EAAIuG,IAEf,IAAIkF,EAAgB9C,OAAO+C,KAAKnF,GAAUoF,OAAM,SAAC1D,GAC/C,OAAuB,IAAhB1B,EAAS0B,EAClB,IACIwD,GACF7E,GAAW,EAEf,CACF,IACCgF,OAAM,SAAChP,GACN2J,EAASlE,GAAM,EACf+F,GAAW/F,EAAI4F,GACf9L,QAAQC,IAAIQ,EACd,GACJ,CACF,CA+I2BiP,CAAWxJ,EAAI2H,EAAI,EAACjH,SACpC,mCAKLF,EAAAA,EAAAA,KAACuG,GAAc,CAACE,KAAM/C,EAASlE,OAGrC,EAEA,OACEW,EAAAA,EAAAA,MAAA,OAAKkB,UAAU,OAAMnB,SAAA,EACnBC,EAAAA,EAAAA,MAAC8I,EAAAA,GAAU,CAAA/I,SAAA,EACTC,EAAAA,EAAAA,MAAC+I,EAAAA,GAAM,CAAClI,MAAM,OAAOmI,aAAW,EAAAjJ,SAAA,EAC9BF,EAAAA,EAAAA,KAACoJ,EAAAA,GAAa,CAACC,UAAU,KAAInJ,SAAC,kDAC9BF,EAAAA,EAAAA,KAAA,KAAGqB,UAAU,MAAKnB,SAAC,kGACnBF,EAAAA,EAAAA,KAAA,KAAGqB,UAAU,MAAKnB,SAAC,mIAErBF,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,OAAMnB,SAAC,oCACrBC,EAAAA,EAAAA,MAAA,OAAKkB,UAAU,WAAUnB,SAAA,EACvBC,EAAAA,EAAAA,MAACiH,EAAAA,GAAI,CAAC/F,UAAU,0BAAyBnB,SAAA,EACvCC,EAAAA,EAAAA,MAACuG,EAAAA,GAAI,CAAC4C,GAAI,EAAEpJ,SAAA,CAAC,8CAEV8B,EAAQuH,mBAAqBvH,EAAQuH,mBAAmBC,cAAgB,iCAAQ,QAGnFxJ,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAAC4C,GAAI,EAAEpJ,SAAS,OAAP8B,QAAO,IAAPA,GAA2B,QAApBiB,EAAPjB,EAASuH,0BAAkB,IAAAtG,OAApB,EAAPA,EAA6BwG,oBAE7CtJ,EAAAA,EAAAA,MAACiH,EAAAA,GAAI,CAAC/F,UAAU,qBAAoBnB,SAAA,EAClCC,EAAAA,EAAAA,MAACuG,EAAAA,GAAI,CAAC4C,GAAI,EAAEpJ,SAAA,CAAC,8CAEV8B,EAAQsD,kBAAoBtD,EAAQsD,kBAAkBkE,cAAgB,iCAAQ,QAEjFxJ,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAAC4C,GAAI,EAAEpJ,SAAS,OAAP8B,QAAO,IAAPA,GAA0B,QAAnBkB,EAAPlB,EAASsD,yBAAiB,IAAApC,OAAnB,EAAPA,EAA4BuG,sBAG5C5E,IAgCA7E,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,qCAAoCnB,UACjDF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8FAhCLC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,OAAMnB,SAAC,oCACrBF,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,0BAA0B4G,MAAO,CAAEyB,aAAc,iBAAkBxJ,SAC/E8E,EAAAA,EAAyBE,KAAI,SAACC,EAAMwE,GACnC,OAAO3J,EAAAA,EAAAA,KAACgH,GAAmB,CAACE,gBAAiB/B,EAAkBgC,IAAKwC,GAAZA,EAC1D,OAEF3J,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,WAAW4G,MAAO,CAAEyB,aAAc,iBAAkBxJ,UACjEF,EAAAA,EAAAA,KAACoH,EAAAA,GAAI,CAACT,GAAI,CAAEiD,KAAM,IAAK1J,UACrBF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACC,GAAI,GAAGzG,UACXF,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CACNE,QAAS,kBA7HJ,SAAA3F,GAAA,OAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOyK,GAAK,OAAA3K,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtB,OAAdyJ,KAAc3J,EAAAE,KAAA,EACRiK,GAAYC,GAAOsC,MAAK,WAC5BrD,IACF,IAAE,wBAAArJ,EAAAS,OAAA,GAAAd,EAAA,MACHe,MAAA,KAAAC,UAAA,CAwHgCkN,CAAkB7E,EAAAA,EAAyB,EAC1DwC,UAAW1D,GAAaxF,EACxB0C,MAAQ8C,EAA0B,UAAd,YACpBwD,KAAK,SACLc,QAAQ,UAASlI,SAEhB5B,GAAW8E,EAAsB9E,SAChC6B,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAAC+H,UAAU,OAAOtC,KAAK,KAAK,cAAY,UACjD/G,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAGR,gDAahBF,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CACR/J,OAAQmE,EACR3D,WAAY,kBAAM4D,GAAa,EAAM,EACrC/C,eAAgB,WACd+C,GAAa,EACf,EACAhD,aAAa,2BACbT,MAAO+D,GAAU/D,MACjBE,YAAa6D,GAAU7D,gBAI/B,G,qECnVO,IAAMkG,EAAiB,CAAC,UAAU,2d","sources":["service/apiHelper.js","service/api.js","service/useApi.js","utils/setting.js","views/Share/InfoModal.js","views/Share/Loader.js","views/Share/withVersion.js","views/pricebook/ImportItemData.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: array; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      statuses: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 上傳價格冊檔案\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\n/**\n * adfPipelineTrigger\n * pdf上傳Trigger\n * @returns\n */\n\nconst adfPipelineTrigger = () => {\n  let url = createUrl('api/adfPipelineTrigger')\n\n  return $http.post(url)\n}\n\n/**\n * updateLatestVersionData\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst updateLatestVersionData = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nconst updateLatestVersionDataByStatus = (params) => {\n  let request = {\n    body: {\n      status: 'IN_PROGRESS',\n    },\n  }\n  let url = createUrl('api/updateLatestVersionData')\n\n  return $http.post(url, request.body, request.headers)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n  adfPipelineTrigger,\n  updateLatestVersionData,\n  updateLatestVersionDataByStatus,\n}\n","import { useState } from 'react'\n\nconst useApi = (apiFunction) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const request = async (...args) => {\n    setLoading(true)\n    setError('')\n    try {\n      const response = await apiFunction(...args)\n      console.log('response: ', JSON.stringify(response))\n      console.log('apiFuntions: ', apiFunction?.name)\n      setData(response)\n      return response\n    } catch (e) {\n      const errorMsg = `ReactNativeError: args: ${args} ${e.message} `\n      console.error(errorMsg)\n      setError(e.message || 'API request Unexpected Error!')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const resetError = () => {\n    setError('')\n  }\n\n  const resetData = () => {\n    setData(null)\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request,\n    resetError,\n    resetData,\n  }\n}\nexport default useApi\n","const CAGETORY_OPTIONS = [\n  {\n    id: 'additional_product',\n    displayName: 'Additional Product',\n  },\n  {\n    id: 'enterprise',\n    displayName: 'Enterprise',\n  },\n  {\n    id: 'faculty',\n    displayName: 'Faculty',\n  },\n  {\n    id: 'mvlp',\n    displayName: 'MVLP',\n  },\n  {\n    id: 'server_and_cloud_enrollment',\n    displayName: 'Server and Cloud Enrollment',\n  },\n  {\n    id: 'student',\n    displayName: 'Student',\n  },\n  {\n    id: 'mpsa',\n    displayName: 'MPSA',\n  },\n]\n\nconst PRICE_LEVEL_OPTIONS = [\n  {\n    id: 'A',\n    displayName: 'A',\n  },\n  {\n    id: 'B',\n    displayName: 'B',\n  },\n  {\n    id: 'C',\n    displayName: 'C',\n  },\n  {\n    id: 'D',\n    displayName: 'D',\n  },\n  {\n    id: 'NON SPECIFIC',\n    displayName: 'NON SPECIFIC',\n  },\n]\nexport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS }\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst InfoModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeModal}>\n        <CModalHeader>\n          <CModalTitle>{props.title || ''}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.infoContain}</CModalBody>\n        <CModalFooter>\n          {props.leftBtnText && (\n            <CButton color=\"secondary\" onClick={props.handleLeftBtn}>\n              {props.leftBtnText}\n            </CButton>\n          )}\n          {props.rightBtnText && (\n            <CButton color=\"primary\" onClick={props.handleRightBtn}>\n              {props.rightBtnText}\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string,\n  isShow: PropTypes.bool,\n  closeModal: PropTypes.func,\n  handleRightBtn: PropTypes.func,\n  handleLeftBtn: PropTypes.func,\n  infoContain: PropTypes.string,\n  leftBtnText: PropTypes.string,\n  rightBtnText: PropTypes.string,\n}\n\nexport default InfoModal\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react'\nimport { getProductVersions } from '@service/api'\nimport useApi from '@service/useApi'\nimport Loader from './Loader'\n\n// eslint-disable-next-line react/display-name\nconst withVersion = (Component) => (props) => {\n  const [apiData, setApiData] = useState(null)\n  const [refresh, setRefresh] = useState(false)\n\n  const { request, data, error, loading } = useApi(getProductVersions)\n  useEffect(() => {\n    request()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refresh])\n\n  const callbackFunc = () => {\n    setRefresh(!refresh)\n  }\n\n  useEffect(() => {\n    handleResponseFlow()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, data])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleResponseFlow = () => {\n    if (error) {\n      console.error('execute getProductVersions() error', error)\n    }\n\n    if (data) {\n      if (data.status === 200) {\n        setApiData(data.data)\n      } else {\n        console.log('execute getProductVersions() data error', data?.status)\n      }\n    }\n  }\n\n  return loading ? (\n    <Loader isShow />\n  ) : (\n    <Component {...props} version={apiData} callbackFunc={callbackFunc} />\n  )\n}\nexport default withVersion\n","import React, { useState, useEffect } from 'react'\nimport {\n  CInputGroup,\n  CFormInput,\n  CRow,\n  CCol,\n  CButton,\n  CAlert,\n  CAlertHeading,\n  CContainer,\n  CSpinner,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCheckCircle } from '@coreui/icons'\nimport * as OPTIONS from '@utils/setting'\nimport { saveProductVersion, uploadProductFile, adfPipelineTrigger } from '@service/api'\nimport useApi from '@service/useApi'\nimport InfoModal from '@views/Share/InfoModal'\nimport withVersion from '@views/Share/withVersion'\nimport PropTypes from 'prop-types'\n\nconst successModalMock = { infoContain: '上傳成功', title: '' }\nconst failModalMock = { infoContain: '系統忙碌，請稍後再試', title: '系統錯誤' }\nconst defaultFileInfo = {\n  faculty: { fileName: '未選擇任何檔案', load: false, excelData: null },\n  mvlp: { fileName: '未選擇任何檔案', load: false, excelData: null },\n  mpsa: { fileName: '未選擇任何檔案', load: false, excelData: null },\n  server_and_cloud_enrollment: {\n    fileName: '未選擇任何檔案',\n    load: false,\n    excelData: null,\n  },\n  student: { fileName: '未選擇任何檔案', load: false, excelData: null },\n  additional_product: { fileName: '未選擇任何檔案', load: false, excelData: null },\n  enterprise: { fileName: '未選擇任何檔案', load: false, excelData: null },\n}\nconst defaultUpload = {\n  faculty: 0,\n  mvlp: 0,\n  mpsa: 0,\n  server_and_cloud_enrollment: 0,\n  student: 0,\n  additional_product: 0,\n  enterprise: 0,\n}\nconst ImportItemData = (props) => {\n  const { request, data, loading, error } = useApi(saveProductVersion)\n  const uploadProductFileApi = useApi(uploadProductFile)\n  const adfPipelineTriggerApi = useApi(adfPipelineTrigger)\n  const [version, setVersion] = useState({})\n  const uploadRef = React.useRef([])\n  const [fileInfo, setFileInfo] = useState(defaultFileInfo)\n  const [isUpload, setUpload] = useState(defaultUpload)\n  const [isAllDone, setAllDone] = useState(false)\n  const [isShowModal, setShowModal] = useState(false)\n  const [importFiles, setImportFiles] = useState([])\n  const [modalMock, setModelMock] = useState({ infoContain: '', title: '' })\n  const [isProgress, setProgress] = useState(true)\n\n  let arrLength = OPTIONS.CAGETORY_OPTIONS\n  if (uploadRef.current.length !== arrLength.length) {\n    uploadRef.current = Array(arrLength).map(\n      (item, i) => uploadRef.current[item] || React.createRef(),\n    )\n  }\n\n  useEffect(() => {\n    resetAllInput()\n    if (props.version) {\n      setVersion(props.version)\n      setProgress(props.version.latestVersionData.status === 'inProgress')\n    }\n  }, [props.version])\n\n  useEffect(() => {\n    console.log('isUpload', isUpload)\n  }, [isUpload])\n  useEffect(() => {\n    console.log('fileInfo', fileInfo)\n  }, [fileInfo])\n\n  const uploadData = (id, i) => {\n    isUpload[id] = 1\n    setUpload({ ...isUpload })\n\n    if (fileInfo[id]?.excelData) {\n      let formData = new FormData()\n      formData.append('file', fileInfo[id].excelData)\n\n      uploadProductFileApi\n        .request(formData.getAll('file'))\n        .then((res) => {\n          if (res.status === 200) {\n            isUpload[id] = 2\n            setUpload({ ...isUpload })\n            // eslint-disable-next-line array-callback-return\n            var allUploadDone = Object.keys(isUpload).every((i) => {\n              return isUpload[i] === 2\n            })\n            if (allUploadDone) {\n              setAllDone(true)\n            }\n          }\n        })\n        .catch((error) => {\n          isUpload[id] = 0\n          removeFile(id, i)\n          console.log(error)\n        })\n    }\n  }\n\n  const removeFile = (id, i) => {\n    uploadRef.current[i].value = null\n    fileInfo[id].excelData = null\n    setFileInfo({ ...fileInfo })\n  }\n  const handleChange = (e, id) => {\n    const files = e.target.files\n    fileInfo[id].fileName = files[0].name\n    fileInfo[id].excelData = files[0]\n    setFileInfo({ ...fileInfo })\n    handleFile(files[0], id)\n  }\n  const handleFile = (file, id) => {\n    if (!file) {\n      console.error('file is empty')\n      return\n    } else {\n      fileInfo[id].load = true\n      setFileInfo({ ...fileInfo })\n    }\n  }\n\n  const refactorData = () => {\n    for (const [key, value] of Object.entries(fileInfo)) {\n      let file = { fileName: value.fileName, category: key }\n      importFiles.push(file)\n    }\n    setImportFiles(importFiles)\n  }\n  const saveAllData = async (items) => {\n    await request({\n      userName: 'admin',\n      description: '',\n      importFiles: importFiles,\n    })\n    await adfPipelineTriggerApi.request()\n    Array(items).map((_, i) => (uploadRef.current[i].value = null))\n  }\n  const resetAllInput = () => {\n    setImportFiles([])\n    setAllDone(false)\n    setUpload({\n      faculty: 0,\n      mvlp: 0,\n      mpsa: 0,\n      server_and_cloud_enrollment: 0,\n      student: 0,\n      additional_product: 0,\n      enterprise: 0,\n    })\n    setFileInfo({\n      faculty: { fileName: '未選擇任何檔案', load: false, excelData: null },\n      mvlp: { fileName: '未選擇任何檔案', load: false, excelData: null },\n      mpsa: { fileName: '未選擇任何檔案', load: false, excelData: null },\n      server_and_cloud_enrollment: {\n        fileName: '未選擇任何檔案',\n        load: false,\n        excelData: null,\n      },\n      student: { fileName: '未選擇任何檔案', load: false, excelData: null },\n      additional_product: { fileName: '未選擇任何檔案', load: false, excelData: null },\n      enterprise: { fileName: '未選擇任何檔案', load: false, excelData: null },\n    })\n  }\n\n  const handleSaveVersion = async (items) => {\n    refactorData()\n    await saveAllData(items).then(() => {\n      resetAllInput()\n    })\n  }\n\n  useEffect(() => {\n    if (\n      error ||\n      (data && data.status !== 200) ||\n      adfPipelineTriggerApi.error ||\n      (adfPipelineTriggerApi.data && adfPipelineTriggerApi.data.status !== 200)\n    ) {\n      setModelMock(failModalMock)\n      setShowModal(true)\n    }\n    if (adfPipelineTriggerApi.data && adfPipelineTriggerApi.data?.status === 200) {\n      setModelMock(successModalMock)\n      setShowModal(true)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, error, adfPipelineTriggerApi.data, adfPipelineTriggerApi.error])\n\n  // eslint-disable-next-line react/prop-types\n  const CheckComponent = ({ show }) => {\n    // eslint-disable-next-line react/prop-types\n    return show !== 0 ? (\n      <CCol md={2} className=\"d-flex align-items-end mb-4\">\n        <CIcon\n          className={show === 1 ? 'text-secondary' : 'text-success'}\n          icon={cilCheckCircle}\n          size=\"lg\"\n        />\n      </CCol>\n    ) : null\n  }\n\n  // eslint-disable-next-line react/prop-types\n  const RenderFileUploadRow = ({ categoryOptions, num }) => {\n    // eslint-disable-next-line react/prop-types\n    const { displayName, id } = categoryOptions\n    return (\n      <CRow>\n        <CCol md={3}>\n          <CFormInput type=\"text\" value={displayName} readOnly={true} disabled={true} />\n        </CCol>\n        <CCol md={6}>\n          <CInputGroup className=\"mb-4\">\n            <label className=\"inputFile\">\n              <div>請選擇檔案</div>\n              <CFormInput\n                accept=\".xlsx\"\n                id={id}\n                type=\"file\"\n                onChange={(e) => {\n                  handleChange(e, id)\n                }}\n                ref={(id) => (uploadRef.current[num] = id)}\n                style={{ display: 'none' }}\n              />\n            </label>\n            <CFormInput\n              readOnly={true}\n              disabled={true}\n              type=\"text\"\n              value={fileInfo[id].fileName || '未選擇任何檔案'}\n              ref={(id) => (uploadRef.current[num] = id)}\n              style={{ backgroundColor: 'transparent' }}\n            />\n            <CButton\n              type=\"button\"\n              color={!fileInfo[id].load ? 'secondary' : 'primary'}\n              variant=\"outline\"\n              disabled={!fileInfo[id].load}\n              onClick={() => uploadData(id, num)}\n            >\n              開始上傳\n            </CButton>\n          </CInputGroup>\n        </CCol>\n        <CheckComponent show={isUpload[id]} />\n      </CRow>\n    )\n  }\n\n  return (\n    <div className=\"px-3\">\n      <CContainer>\n        <CAlert color=\"info\" dismissible>\n          <CAlertHeading component=\"h5\">MS檟格冊整批匯入</CAlertHeading>\n          <p className=\"m-0\">- 需上傳全部的價格冊才能整批匯入</p>\n          <p className=\"m-0\">- 價格冊檔名僅英文，不可有中文、空白及符號</p>\n        </CAlert>\n        <h5 className=\"mb-3\">價格冊資訊</h5>\n        <div className=\"form-box\">\n          <CRow className=\"align-items-center pb-2\">\n            <CCol sm={4}>\n              當前價格冊版號(\n              {version.currentVersionData ? version.currentVersionData.statusDisplay : '系統忙碌中'}\n              )\n            </CCol>\n            <CCol sm={2}>{version?.currentVersionData?.versionNumber}</CCol>\n          </CRow>\n          <CRow className=\"align-items-center\">\n            <CCol sm={4}>\n              最新價格冊版本(\n              {version.latestVersionData ? version.latestVersionData.statusDisplay : '系統忙碌中'})\n            </CCol>\n            <CCol sm={2}>{version?.latestVersionData?.versionNumber}</CCol>\n          </CRow>\n        </div>\n        {!isProgress ? (\n          <>\n            <h5 className=\"mb-3\">上傳價格冊</h5>\n            <div className=\"form-box mb-1 pt-4 pb-0\" style={{ borderRadius: '10px 10px 0 0' }}>\n              {OPTIONS.CAGETORY_OPTIONS.map((item, index) => {\n                return <RenderFileUploadRow categoryOptions={item} key={index} num={index} />\n              })}\n            </div>\n            <div className=\"form-box\" style={{ borderRadius: '0 0 10px 10px' }}>\n              <CRow md={{ cols: 12 }}>\n                <CCol md={12}>\n                  <CButton\n                    onClick={() => handleSaveVersion(OPTIONS.CAGETORY_OPTIONS)}\n                    disabled={!isAllDone || loading}\n                    color={!isAllDone ? 'secondary' : 'primary'}\n                    type=\"button\"\n                    variant=\"outline\"\n                  >\n                    {loading || adfPipelineTriggerApi.loading ? (\n                      <>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        <span> Loading...</span>\n                      </>\n                    ) : (\n                      '送出價格冊'\n                    )}\n                  </CButton>\n                </CCol>\n              </CRow>\n            </div>\n          </>\n        ) : (\n          <div className=\"d-flex justify-content-center mt-2\">\n            <p>價格冊匯入DB中，請稍後再上傳。</p>\n          </div>\n        )}\n      </CContainer>\n      <InfoModal\n        isShow={isShowModal}\n        closeModal={() => setShowModal(false)}\n        handleRightBtn={() => {\n          setShowModal(false)\n        }}\n        rightBtnText=\"我知道了\"\n        title={modalMock.title}\n        infoContain={modalMock.infoContain}\n      />\n    </div>\n  )\n}\nImportItemData.propTypes = {\n  version: PropTypes.object,\n  callbackFunc: PropTypes.func,\n}\n\nexport default withVersion(ImportItemData)\n","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","status","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","orderId","body","post","getOrdersByStatus","statuses","approveOrder","action","getOrders","params","taxID","startDate","endDate","getOrderReports","company","createdDate","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","concat","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","adfPipelineTrigger","updateLatestVersionData","updateLatestVersionDataByStatus","apiFunction","_ref","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_callee","_len","args","_key","errorMsg","_args","_context","length","Array","name","t0","message","finish","resetError","resetData","CAGETORY_OPTIONS","id","displayName","PRICE_LEVEL_OPTIONS","props","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeModal","CModalHeader","CModalTitle","title","CModalBody","infoContain","CModalFooter","leftBtnText","CButton","color","onClick","handleLeftBtn","rightBtnText","handleRightBtn","className","CSpinner","Component","apiData","setApiData","refresh","setRefresh","_useApi","useApi","handleResponseFlow","Loader","version","callbackFunc","successModalMock","failModalMock","defaultFileInfo","faculty","fileName","load","excelData","mvlp","mpsa","server_and_cloud_enrollment","student","additional_product","enterprise","defaultUpload","withVersion","_version$currentVersi","_version$latestVersio","uploadProductFileApi","adfPipelineTriggerApi","setVersion","uploadRef","React","fileInfo","setFileInfo","isUpload","setUpload","_useState7","_useState8","isAllDone","setAllDone","_useState9","_useState10","isShowModal","setShowModal","_useState11","_useState12","setImportFiles","_useState13","_useState14","modalMock","setModelMock","_useState15","_useState16","isProgress","setProgress","arrLength","OPTIONS","current","map","item","i","resetAllInput","latestVersionData","removeFile","value","handleFile","file","refactorData","_i","_Object$entries","Object","entries","_Object$entries$_i","key","push","saveAllData","items","_","_adfPipelineTriggerAp","CheckComponent","_ref3","show","CCol","md","CIcon","icon","cilCheckCircle","size","RenderFileUploadRow","_ref4","categoryOptions","num","CRow","CFormInput","type","readOnly","disabled","CInputGroup","accept","onChange","e","files","target","handleChange","ref","style","display","backgroundColor","variant","_fileInfo$id","formData","FormData","append","getAll","then","res","allUploadDone","keys","every","catch","uploadData","CContainer","CAlert","dismissible","CAlertHeading","component","sm","currentVersionData","statusDisplay","versionNumber","borderRadius","index","cols","handleSaveVersion","InfoModal"],"sourceRoot":""}