{"version":3,"file":"static/js/509.85e9b3b8.chunk.js","mappings":"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","sources":["mocks/quotationData.js","views/Share/ErrorModal.js","utils/quotationVariables.js","views/quoteToCash/Quotation.js"],"sourcesContent":["export const quotationLists = [\n  {\n    num: '00000017',\n    client: 'CviLux Group',\n    createDate: '2023-08-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000016',\n    client: 'CviLux Group',\n    createDate: '2023-07-10',\n    statusText: '編輯中',\n    status: 'A',\n  },\n  {\n    num: '00000015',\n    client: 'CviLux Group',\n    createDate: '2023-06-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000014',\n    client: 'CviLux Group',\n    createDate: '2023-05-10',\n    statusText: '已終止',\n    status: 'E',\n  },\n  {\n    num: '00000013',\n    client: 'CviLux Group',\n    createDate: '2023-04-10',\n    statusText: '已成案',\n    status: 'D',\n  },\n]\n\nexport const quotationContent = {\n  basicInfo: {\n    orderNum: '00000017',\n    company: 'CviLux Group',\n    taxID: '23632274',\n    contactPerson: '黃伸光',\n    email: 'Mason.Huang@cvilux.com',\n    phone: '02-2620-1000',\n    address: '251新北市淡水區中正東路一段3巷9號9F',\n  },\n  quotationGroup: [\n    {\n      groupName: '第一年',\n      productLists: [\n        {\n          partNum: 'AAA-10842',\n          productDes: 'O365 E3 Sub Per User',\n          startDate: null,\n          measure: '1 Month(s)',\n          quantity: 12,\n          unitPrice: 808,\n          QTY: 0,\n          country: 'Taiwan',\n          totalAmount: 0,\n          estimatedRetailPrice: 0,\n          currentNetPrice: 878,\n          discountedNetPrice: 5265,\n          customerDiscount: 0,\n          maximumReslaePrice: 0,\n          markupMargin: 0,\n        },\n        {\n          partNum: 'AAA-10756',\n          productDes: 'M365 E3 Unified Sub Per User',\n          startDate: null,\n          measure: '1 Month(s)',\n          quantity: 12,\n          unitPrice: 1170,\n          QTY: 500,\n          country: 'Taiwan',\n          totalAmount: 7020,\n          estimatedRetailPrice: 25,\n          currentNetPrice: 878,\n          discountedNetPrice: 5265,\n          customerDiscount: 0,\n          maximumReslaePrice: 0,\n          markupMargin: 0,\n        },\n      ],\n      subTotal: null,\n    },\n  ],\n  quotationTotal: {\n    taxExcluded: null,\n    taxIncluded: null,\n    tax: null,\n  },\n}\n\nexport const reviewLists = [\n  {\n    num: '00000017',\n    client: 'CviLux Group',\n    createDate: '2023-08-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000016',\n    client: 'CviLux Group',\n    createDate: '2023-07-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000015',\n    client: 'CviLux Group',\n    createDate: '2023-06-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000014',\n    client: 'CviLux Group',\n    createDate: '2023-05-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000013',\n    client: 'CviLux Group',\n    createDate: '2023-04-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n]\n\nexport const endLists = [\n  {\n    num: '00000017',\n    client: 'CviLux Group',\n    createDate: '2023-08-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000016',\n    client: 'CviLux Group',\n    createDate: '2023-07-10',\n    statusText: '編輯中',\n    status: 'A',\n  },\n  {\n    num: '00000015',\n    client: 'CviLux Group',\n    createDate: '2023-06-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000014',\n    client: 'CviLux Group',\n    createDate: '2023-05-10',\n    statusText: '已終止',\n    status: 'E',\n  },\n  {\n    num: '00000013',\n    client: 'CviLux Group',\n    createDate: '2023-04-10',\n    statusText: '已成案',\n    status: 'D',\n  },\n]\n\nexport const completeLists = [\n  {\n    num: '00000017',\n    client: 'CviLux Group',\n    createDate: '2023-08-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000016',\n    client: 'CviLux Group',\n    createDate: '2023-07-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000015',\n    client: 'CviLux Group',\n    createDate: '2023-06-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000014',\n    client: 'CviLux Group',\n    createDate: '2023-05-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000013',\n    client: 'CviLux Group',\n    createDate: '2023-04-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst ErrorModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeErrorModal}>\n        <CModalHeader>\n          <CModalTitle>發生錯誤</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.errorContain}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={props.closeErrorModal}>\n            我知道了\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nErrorModal.propTypes = {\n  isShow: PropTypes.bool,\n  closeErrorModal: PropTypes.func,\n  errorContain: PropTypes.string,\n}\n\nexport default ErrorModal\n","export const initData = {\n  basicInfo: {\n    orderNum: '',\n    company: '',\n    taxID: '',\n    contactPerson: '',\n    email: '',\n    phone: '',\n    address: '',\n  },\n  quotationGroup: [\n    {\n      groupName: '',\n      productLists: [\n        {\n          partNum: '',\n          productDes: '',\n          startDate: null,\n          measure: '',\n          quantity: null,\n          unitPrice: null,\n          QTY: null,\n          country: '',\n          totalAmount: null,\n          estimatedRetailPrice: null,\n          currentNetPrice: null,\n          discountedNetPrice: null,\n          customerDiscount: null,\n          maximumReslaePrice: null,\n          markupMargin: null,\n        },\n      ],\n    },\n  ],\n  quotationTotal: {\n    taxExcluded: 0,\n    taxIncluded: 0,\n    tax: 0,\n  },\n}\n\nexport const headfields = [\n  { key: 'Part Number', label: 'Part Number', _style: { minWidth: '145px' } },\n  { key: 'Product Description', label: 'Product Description', _style: { minWidth: '300px' } },\n  { key: 'Usge start Date', label: 'Usge start Date' },\n  { key: 'Unit of Measure', label: 'Unit of Measure' },\n  { key: 'Unit of Quantity', label: 'Unit of Quantity' },\n  { key: 'Unit Price (TWD)', label: 'Unit Price (TWD)' },\n  { key: 'License Qty', label: 'License Qty' },\n  { key: 'Usage country', label: 'Usage country' },\n  { key: 'Total Amount (TWD)', label: 'Total Amount (TWD)' },\n  {\n    key: 'Estimated Retail Price',\n    label: 'Estimated Retail Price/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Current Net Price (TWD)',\n    label: 'Current Net Price (TWD)/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Discounted Net Price (CPS)',\n    label: 'Discounted Net Price (CPS)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Customer Discount %',\n    label: 'Customer Discount %',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Maximum Reslae Price (MRP)',\n    label: 'Maximum Reslae Price (MRP)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'mark up margin',\n    label: 'mark up margin',\n    _props: { className: 'text-warning' },\n    _style: { minWidth: '120px' },\n  },\n  {\n    key: 'active',\n    label: '',\n  },\n]\n\nexport const searchTableHead = [\n  {\n    key: 'action',\n    label: '選擇',\n    _props: { color: 'dark' },\n    _style: { width: '50px' },\n  },\n  {\n    key: 'search_pd_name',\n    label: 'Item Name',\n    _props: { color: 'dark' },\n    _style: { width: '40%' },\n  },\n  {\n    key: 'search_level',\n    label: 'Level',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_unit',\n    label: 'Purchase Unit',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_period',\n    label: 'Purchase Period',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_current_net_price',\n    label: 'Current Net Price',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_estimated_retail_price',\n    label: 'Estimated Retail Price',\n    _props: { color: 'dark' },\n  },\n]\n\nexport const rules = `1. 本報價單為含稅報價，此報價為三年期最低總價，本報價不含安裝、教育訓練費用、定製化及衍生性專業服務等。\\n2. 本報價單有效期限為報價日起五天，逾期報價失效。\\n3. 買方應於收到賣方發票後【卅】天內，將應付款項一次性支付予賣方。\\n4. 買方簽回本報價單後視同正式採購合約，買方不得以任何理由向賣方/原廠要求退換貨或退費，亦不得以簽回之買方公司員工無簽約代理權而拒絕付款。授權期間到期若有  未使用的金額、授權用量等，買方同意自動放棄相關權益，無法申請遞延，亦無法轉換其他服務等。\\n5. Enterprise合約（EA）三年期間，PAL(Partner Admin Link)的MPN ID為賣方所有。買方須依原廠之要求，完成相關線上電子簽署作業【包含CPOR(Claiming Partner of Record)及DPOR(Digital Partner of Record)客戶關聯等】。\\n6. 本軟體之使用若有需透過帳號密碼之方式者，賣方不負任何帳號密碼保管責任，買方應善盡保管之責，且經常不定時更新密碼，以避免遭受第三人之攻擊或盜用等。透過該組帳號密碼所進行之所有行為，皆視同買方行為，買方應自負所有法律責任，及因此所產生之各種可能遭受之損害。\\n7. 本軟體之最終版本由原廠按現狀提供，賣方不為任何明示或默示之擔保，亦不保證所提出之給付，並無任何抄襲或仿冒之情事，或未侵害第三人之智慧財產權或其他權利。賣方亦不承擔後續維修、更新、零配件供應等。\\n8. 買方應切實遵守原廠之授權條款、資訊安全控管規範及使用限制等規定，並簽署原廠要求之相關合約文件。如有違反，買方除應按本報價單之最低總價十倍之數額，作為懲罰性賠償金賠償於賣方外，並應自行負擔民、刑事責任。\\n9. 若買方單方面解除或終止本報價單，除不得請求賣方返還任何款項且仍須依本報價單總價付款外，買方尚須給付賣方如下之懲罰性違約金，如賣方另有其他損害，買方亦應賠償之：\\n(1) 賣方尚未向原廠採購時，以本報價單總價之50%作為懲罰性違約金。\\n(2) 賣方已向原廠採購時，以本報價單總價之100%作為懲罰性違約金。\\n10. 賣方對買方因本報價單所生之損害賠償責任，以本報價單總價之百分之十為上限。但不適用於買方依本報價單應支付賣方之價款，買方之法定代理人應與買方負連帶賠償責任。\\n11. 本報價單條款效力優於於先前、同時或嗣後就本軟體採購所為之一切口頭約定或買方之書面訂單等。\\n12. 就本報價單有關涉訟事項，以臺灣臺北地方法院為第一審管轄法院。`\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilMinus, cilPencil, cilTrash, cilPlus } from '@coreui/icons'\nimport { cloneDeep } from 'lodash'\nimport ShortUniqueId from 'short-unique-id'\nimport priceFormat from '../../utils/priceFormat'\nimport {\n  CForm,\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CFormTextarea,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CFormSelect,\n  CFormCheck,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\nimport ErrorModal from '../Share/ErrorModal'\nimport { quotationContent } from '../../mocks/quotationData'\nimport { initData, rules, headfields, searchTableHead } from '../../utils/quotationVariables'\n\nconst Quotation = () => {\n  const uid = new ShortUniqueId({ length: 5 })\n  const { childPath } = useParams()\n  const [open, setOpen] = useState(false)\n  const [openTabEdit, setOpenTabEdit] = useState(false)\n  const [currentTab, setCurrentTab] = useState(0)\n  const [currentItemIdx, setCurrentItemIdx] = useState(0)\n  const [basicInfo, setBasicInfo] = useState(initData.basicInfo)\n  const [groupData, setGroupData] = useState([])\n  const [quotationTotal, setQuotationTotal] = useState({})\n  const [isShowModal, setShowModal] = useState(false)\n  const [searchParams, setSearchParams] = useState({ keywords: '', level: 'A' })\n  const [searchItems, setSearchItems] = useState([])\n  const [note, setNote] = useState(rules)\n  const [editTab, setEditTab] = useState([])\n\n  const openModal = (index) => {\n    setOpen(true)\n    setCurrentItemIdx(index)\n  }\n\n  const openTabEditModal = () => {\n    const tabLists = []\n    groupData.forEach((group) => {\n      tabLists.push(group.groupName)\n    })\n    console.log('tabLists', tabLists)\n    setEditTab(tabLists)\n    setOpenTabEdit(true)\n  }\n\n  const addGroup = () => {\n    const newGroup = cloneDeep(groupData[groupData.length - 1])\n\n    newGroup.groupName = `群組${groupData.length + 1}`\n    newGroup.productLists = addUniKey(newGroup.productLists)\n\n    setGroupData([...groupData, newGroup])\n    setCurrentTab(groupData.length)\n  }\n\n  const deleteGroup = (groupIdx) => {\n    const newGroupData = cloneDeep(groupData)\n\n    if (newGroupData && newGroupData.length === 1) return\n    newGroupData.splice(groupIdx, 1)\n\n    setGroupData(newGroupData)\n    setCurrentTab(newGroupData.length - 1)\n  }\n\n  const addItem = () => {\n    const newGroupData = cloneDeep(groupData)\n    const tempProductLists = cloneDeep(addUniKey(initData.quotationGroup[0].productLists))\n    const newProductLists = [...newGroupData[currentTab].productLists, ...tempProductLists]\n    newGroupData[currentTab].productLists = newProductLists\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setGroupData(newGroupData)\n  }\n\n  const deleteItem = (index) => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    if (newProductLists && newProductLists.length === 1) return\n    newProductLists.splice(index, 1)\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setGroupData(newGroupData)\n  }\n\n  const onChangeItemValue = (idx, name, value) => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    newProductLists[idx][name] = value\n\n    //計算\n    const { discountedNetPrice, markupMargin, currentNetPrice, quantity, QTY } =\n      newProductLists[idx]\n\n    if (discountedNetPrice && markupMargin)\n      newProductLists[idx].unitPrice = discountedNetPrice * (1 + markupMargin / 100)\n\n    if (discountedNetPrice)\n      newProductLists[idx].customerDiscount =\n        Math.round(((currentNetPrice - discountedNetPrice) / currentNetPrice) * 10000) / 100\n\n    if (quantity && newProductLists[idx].unitPrice && QTY)\n      newProductLists[idx].totalAmount = quantity * newProductLists[idx].unitPrice * QTY\n\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n\n    setGroupData(newGroupData)\n  }\n\n  const countSubTotal = (productLists) => {\n    let subTotal = 0\n    productLists.forEach((item) => {\n      subTotal += item.totalAmount\n    })\n    return subTotal\n  }\n\n  const countQuotationTotal = (groupLists) => {\n    let taxExcluded = 0\n    groupLists.forEach((group) => {\n      taxExcluded += group.subTotal\n    })\n    return {\n      taxExcluded,\n      tax: taxExcluded * 0.05,\n      taxIncluded: taxExcluded * 1.05,\n    }\n  }\n\n  const setCurrentItemData = () => {\n    let newGroupData = cloneDeep(groupData)\n    let newProductLists = newGroupData[currentTab].productLists\n    let newCurrentItem = newProductLists[currentItemIdx]\n    newCurrentItem.productDes = 'Office Professional Plus ALng SASU Office Standard Platform'\n    newCurrentItem.partNum = '269-05623'\n    newCurrentItem.estimatedRetailPrice = 12157\n    newCurrentItem.currentNetPrice = 9528.68\n\n    newGroupData.subTotal = countSubTotal(newProductLists)\n\n    setGroupData(newGroupData)\n    setSearchParams({ keywords: '', level: 'A' })\n    setSearchItems([])\n    setOpen(false)\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    let newInfoData = cloneDeep(basicInfo)\n    newInfoData[name] = value\n    setBasicInfo(newInfoData)\n  }\n\n  const onChangeTabValue = (idx, value) => {\n    let newTabEditLists = cloneDeep(editTab)\n    newTabEditLists[idx] = value\n    setEditTab(newTabEditLists)\n  }\n\n  const saveGroupDataName = () => {\n    let newGroupData = cloneDeep(groupData)\n    editTab.forEach((tab, idx) => {\n      newGroupData[idx].groupName = tab\n    })\n    setGroupData(newGroupData)\n    setOpenTabEdit(false)\n  }\n\n  const addUniKey = (arraydata) => {\n    const newArraydata = arraydata.map((element) => {\n      return { ...element, uniKey: uid.rnd() }\n    })\n    return newArraydata\n  }\n\n  const initQuotationGroup = (groupData) => {\n    const newData = cloneDeep(groupData)\n    newData.forEach((group, idx) => {\n      if (!group.groupName) group.groupName = `群組${idx + 1}`\n      const newProductLists = group.productLists.map((element) => {\n        return { ...element, uniKey: uid.rnd() }\n      })\n      return (group.productLists = newProductLists)\n    })\n    return newData\n  }\n\n  const searchProduct = () => {\n    if (!searchParams.keywords || searchParams.keywords.length < 5 || !searchParams.level) return\n    return setSearchItems([\n      {\n        itemName: 'Office Professional Plus ALng SASU Office Standard Platform',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '2544.12',\n        estimatedRetailPrice: '3246',\n      },\n      {\n        itemName: 'Office Professional Plus ALng LSA',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '9528.68',\n        estimatedRetailPrice: '12157',\n      },\n    ])\n  }\n\n  useEffect(() => {\n    if (childPath && childPath === 'edit') {\n      setBasicInfo(quotationContent.basicInfo)\n      setGroupData(initQuotationGroup(quotationContent.quotationGroup))\n      setQuotationTotal(quotationContent.quotationTotal)\n    } else {\n      setBasicInfo(initData.basicInfo)\n      setGroupData(initQuotationGroup(initData.quotationGroup))\n      setQuotationTotal(initData.quotationTotal)\n    }\n  }, [childPath])\n\n  useEffect(() => {\n    setQuotationTotal(countQuotationTotal(groupData))\n  }, [groupData])\n\n  return (\n    <>\n      <div className=\"px-3\">\n        <CForm action=\"\" method=\"post\" className=\"container\">\n          <div className=\"form-box\">\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"訂單編號\"\n                  placeholder=\"請輸入訂單編號\"\n                  defaultValue={basicInfo.orderNum}\n                  onChange={(e) => onChangeInfoValue('orderNum', e.target.value)}\n                  required\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"客戶名稱\"\n                  placeholder=\"請輸入客戶名稱\"\n                  defaultValue={basicInfo.company}\n                  onChange={(e) => onChangeInfoValue('company', e.target.value)}\n                  required\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"統一編號\"\n                  placeholder=\"請輸入統一編號\"\n                  defaultValue={basicInfo.taxID}\n                  onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n                  required\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"聯絡人\"\n                  placeholder=\"請輸入姓名\"\n                  defaultValue={basicInfo.contactPerson}\n                  onChange={(e) => onChangeInfoValue('contactPerson', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  type=\"email\"\n                  label=\"Email\"\n                  placeholder=\"請輸入Email\"\n                  defaultValue={basicInfo.email}\n                  onChange={(e) => onChangeInfoValue('email', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput label=\"電話\" placeholder=\"請輸入電話\" defaultValue={basicInfo.phone} />\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol md={12}>\n                <CFormInput\n                  label=\"地址\"\n                  placeholder=\"請輸入地址\"\n                  defaultValue={basicInfo.address}\n                />\n              </CCol>\n            </CRow>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">服務報價</h5>\n            <div>\n              <CButton color=\"primary\" shape=\"rounded-pill\" onClick={addItem}>\n                新增項目\n              </CButton>\n            </div>\n          </div>\n          {groupData && groupData.length ? (\n            <CNav variant=\"tabs\" role=\"tablist\">\n              {groupData.map((group, idx) => {\n                return (\n                  <CNavItem role=\"presentation\" key={idx} className=\"position-relative\">\n                    <CNavLink\n                      className=\"px-4\"\n                      active={currentTab === idx}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls={group.groupName}\n                      aria-selected={currentTab === idx}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        setCurrentTab(idx)\n                      }}\n                    >\n                      {group.groupName}\n                    </CNavLink>\n\n                    <CIcon\n                      icon={cilTrash}\n                      size=\"sm\"\n                      className=\"ms-1 tab-action-icon\"\n                      onClick={() => deleteGroup(idx)}\n                    ></CIcon>\n                  </CNavItem>\n                )\n              })}\n              <div className=\"d-flex align-items-center px-2\">\n                <div className=\"d-flex align-items-center me-2\" onClick={addGroup}>\n                  <div className=\"action-icon add-icon\">\n                    <CIcon className=\"text-light\" icon={cilPlus} />\n                  </div>\n                </div>\n                <CIcon\n                  icon={cilPencil}\n                  size=\"sm\"\n                  className=\"ms-1 action-icon\"\n                  onClick={() => openTabEditModal()}\n                ></CIcon>\n              </div>\n            </CNav>\n          ) : null}\n\n          <div className=\"mb-3\">\n            <div className=\"service-quote rounded-0 px-2 overflow-scroll\">\n              <CTabContent>\n                {groupData && groupData.length\n                  ? groupData.map((group, groupIdx) => {\n                      return (\n                        <CTabPane\n                          role=\"tabpanel\"\n                          aria-labelledby={group.groupName}\n                          visible={currentTab === groupIdx}\n                          key={groupIdx}\n                        >\n                          <CTable hover className=\"table-bg-none\" columns={headfields}>\n                            <CTableBody>\n                              {group.productLists && group.productLists.length\n                                ? group.productLists.map((item, idx) => {\n                                    return (\n                                      <CTableRow key={`${groupIdx}${item.uniKey}`}>\n                                        <CTableDataCell\n                                          align=\"middle\"\n                                          className=\"d-flex align-items-center\"\n                                        >\n                                          <CFormInput\n                                            defaultValue={item.partNum || ''}\n                                            size=\"sm\"\n                                            disabled\n                                            readOnly\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'partNum', e.target.value)\n                                            }\n                                          />\n\n                                          <CIcon\n                                            icon={cilFindInPage}\n                                            size=\"xxl\"\n                                            className=\"ms-1 action-icon\"\n                                            onClick={() => openModal(idx)}\n                                          ></CIcon>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.productDes || ''}\n                                            size=\"sm\"\n                                            disabled\n                                            readOnly\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"date\"\n                                            defaultValue={item.startDate || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'startDate', e.target.value, e)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.measure || ''}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'measure', e.target.value)\n                                            }\n                                            size=\"sm\"\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            min={0}\n                                            defaultValue={item.quantity || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'quantity', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.unitPrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.QTY || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'QTY', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.country || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'country', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.totalAmount) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.estimatedRetailPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.currentNetPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.discountedNetPrice || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(\n                                                idx,\n                                                'discountedNetPrice',\n                                                e.target.value,\n                                              )\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.customerDiscount || '-'}%\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.maximumReslaePrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CInputGroup size=\"sm\">\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.markupMargin || ''}\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'markupMargin',\n                                                  e.target.value,\n                                                )\n                                              }\n                                            />\n                                            <CInputGroupText>%</CInputGroupText>\n                                          </CInputGroup>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <div\n                                            className=\"d-flex align-items-center\"\n                                            onClick={() => deleteItem(idx)}\n                                          >\n                                            <div className=\"action-icon deleted-icon\">\n                                              <CIcon className=\"text-light\" icon={cilMinus} />\n                                            </div>\n                                          </div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    )\n                                  })\n                                : null}\n                              <CTableRow>\n                                <CTableDataCell colSpan={16}>\n                                  小計：NT${priceFormat(group.subTotal) || '-'}\n                                </CTableDataCell>\n                              </CTableRow>\n                            </CTableBody>\n                          </CTable>\n                        </CTabPane>\n                      )\n                    })\n                  : null}\n              </CTabContent>\n            </div>\n            <div className=\"calculate-fields\">\n              <div className=\"field-title\">\n                <div className=\"field\">total(未稅)：</div>\n                <div className=\"field\">營業稅(5%)：</div>\n                <div className=\"field\">total(含稅)：</div>\n              </div>\n              <div className=\"field-content\">\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.taxExcluded) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.tax) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal.taxIncluded) || '-'}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">備註</h5>\n          </div>\n          <div className=\"form-box px-2\">\n            <CFormTextarea\n              rows={15}\n              defaultValue={note}\n              onChange={(e) => setNote(e.target.value)}\n            ></CFormTextarea>\n          </div>\n          <CModal className=\"product-select-modal\" visible={open} onClose={() => setOpen(false)}>\n            <CModalHeader>\n              <CModalTitle>搜尋產品項目</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                <CRow>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>類別</CInputGroupText>\n                      <CFormSelect\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, level: e.target.value })\n                        }\n                      >\n                        <option value=\"Additional Product\">Additional Product</option>\n                        <option value=\"Enterprise\">Enterprise</option>\n                        <option value=\"Faculty\">Faculty</option>\n                        <option value=\"MVLP\">MVLP</option>\n                        <option value=\"Server and Cloud Enrollment\">\n                          Server and Cloud Enrollment\n                        </option>\n                        <option value=\"Student\">Student</option>\n                        <option value=\"MPSA\">MPSA</option>\n                      </CFormSelect>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>PN</CInputGroupText>\n                      <CFormInput\n                        placeholder=\"product number\"\n                        minLength={5}\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, keywords: e.target.value })\n                        }\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-4\">\n                    <CInputGroup>\n                      <CInputGroupText>關鍵字</CInputGroupText>\n                      <CFormInput\n                        placeholder=\"請輸入關鍵字(至少為5字)\"\n                        minLength={5}\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, keywords: e.target.value })\n                        }\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CInputGroup>\n                      <CInputGroupText>Level</CInputGroupText>\n                      <CFormSelect\n                        onChange={(e) =>\n                          setSearchParams({ ...searchParams, level: e.target.value })\n                        }\n                      >\n                        <option value=\"A\">A</option>\n                        <option value=\"B\">B</option>\n                        <option value=\"C\">C</option>\n                        <option value=\"D\">D</option>\n                        <option value=\"Non-Specific\">Non-Specific</option>\n                      </CFormSelect>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol className=\"col-2\">\n                    <CButton\n                      className=\"w-100\"\n                      color=\"primary\"\n                      variant=\"outline\"\n                      onClick={searchProduct}\n                    >\n                      搜尋相關品項\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </div>\n              <div className=\"px-2 py-4\">\n                <h5>篩選結果</h5>\n                <div>\n                  <CTable hover columns={searchTableHead}>\n                    <CTableBody>\n                      {searchItems && searchItems.length\n                        ? searchItems.map((item, idx) => {\n                            return (\n                              <CTableRow key={`${item.itemName}_${item.purchasePeriod}`}>\n                                <CTableDataCell>\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    name=\"exampleRadios\"\n                                    id={item.itemName}\n                                    value={idx}\n                                  />\n                                </CTableDataCell>\n                                <CTableDataCell>{item.itemName}</CTableDataCell>\n                                <CTableDataCell>{item.level}</CTableDataCell>\n                                <CTableDataCell>{item.purchaseUnit}</CTableDataCell>\n                                <CTableDataCell>{item.purchasePeriod}</CTableDataCell>\n                                <CTableDataCell>{item.currentNetPrice}</CTableDataCell>\n                                <CTableDataCell>{item.estimatedRetailPrice}</CTableDataCell>\n                              </CTableRow>\n                            )\n                          })\n                        : null}\n                    </CTableBody>\n                  </CTable>\n                </div>\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpen(false)}>\n                Close\n              </CButton>\n              <CButton color=\"primary\" onClick={setCurrentItemData}>\n                選擇\n              </CButton>\n            </CModalFooter>\n          </CModal>\n          <CModal visible={openTabEdit} onClose={() => setOpenTabEdit(false)}>\n            <CModalHeader>\n              <CModalTitle>編輯群組名稱</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                {editTab && editTab.length\n                  ? editTab.map((groupName, idx) => {\n                      return (\n                        <div key={idx} className=\"mb-2\">\n                          <CInputGroup>\n                            <CFormInput\n                              defaultValue={groupName}\n                              onChange={(e) => {\n                                onChangeTabValue(idx, e.target.value)\n                              }}\n                            />\n                          </CInputGroup>\n                        </div>\n                      )\n                    })\n                  : null}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpenTabEdit(false)}>\n                取消\n              </CButton>\n              <CButton color=\"primary\" onClick={saveGroupDataName}>\n                確定\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      </div>\n      <div className=\"form-action-wrap px-4 py-2\">\n        <CButton color=\"warning\" onClick={() => setShowModal(!isShowModal)}>\n          儲存\n        </CButton>\n      </div>\n\n      <ErrorModal\n        isShow={isShowModal}\n        closeErrorModal={() => setShowModal(false)}\n        errorContain=\"無法建立「報價單號： XXXXX」(單號已存在)\"\n      />\n    </>\n  )\n}\n\nexport default Quotation\n"],"names":["quotationLists","num","client","createDate","statusText","status","quotationContent","basicInfo","orderNum","company","taxID","contactPerson","email","phone","address","quotationGroup","groupName","productLists","partNum","productDes","startDate","measure","quantity","unitPrice","QTY","country","totalAmount","estimatedRetailPrice","currentNetPrice","discountedNetPrice","customerDiscount","maximumReslaePrice","markupMargin","subTotal","quotationTotal","taxExcluded","taxIncluded","tax","reviewLists","endLists","completeLists","props","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeErrorModal","CModalHeader","CModalTitle","CModalBody","errorContain","CModalFooter","CButton","color","onClick","initData","headfields","key","label","_style","minWidth","_props","className","searchTableHead","width","uid","ShortUniqueId","length","childPath","useParams","open","setOpen","_useState3","_useState4","openTabEdit","setOpenTabEdit","_useState5","_useState6","currentTab","setCurrentTab","_useState7","_useState8","currentItemIdx","setCurrentItemIdx","_useState9","_useState10","setBasicInfo","_useState11","_useState12","groupData","setGroupData","_useState13","_useState14","setQuotationTotal","_useState15","_useState16","isShowModal","setShowModal","_useState17","keywords","level","_useState18","searchParams","setSearchParams","_useState19","_useState20","searchItems","setSearchItems","_useState21","_useState22","note","setNote","_useState23","_useState24","editTab","setEditTab","onChangeItemValue","idx","name","value","newGroupData","cloneDeep","newProductLists","_newProductLists$idx","Math","round","countSubTotal","forEach","item","onChangeInfoValue","newInfoData","addUniKey","arraydata","map","element","_objectSpread","uniKey","rnd","initQuotationGroup","newData","group","concat","groupLists","countQuotationTotal","CForm","action","method","CRow","CCol","md","CFormInput","placeholder","defaultValue","onChange","e","target","required","type","shape","tempProductLists","_toConsumableArray","CNav","variant","role","CNavItem","CNavLink","active","component","preventDefault","CIcon","icon","cilTrash","size","groupIdx","splice","deleteGroup","newGroup","cilPlus","cilPencil","tabLists","push","console","log","openTabEditModal","CTabContent","CTabPane","CTable","hover","columns","CTableBody","CTableRow","CTableDataCell","align","disabled","readOnly","cilFindInPage","index","min","priceFormat","CInputGroup","CInputGroupText","deleteItem","cilMinus","colSpan","CFormTextarea","rows","CFormSelect","minLength","itemName","purchaseUnit","purchasePeriod","CFormCheck","id","newCurrentItem","newTabEditLists","onChangeTabValue","tab","ErrorModal"],"sourceRoot":""}