{"version":3,"file":"static/js/516.496c1ffd.chunk.js","mappings":"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","sources":["service/apiHelper.js","service/api.js","utils/setting.js","views/Share/InfoModal.js","views/Share/Loader.js","utils/quotationVariables.js","components/SearchProductModal.js","views/quoteToCash/Quotation.js"],"sourcesContent":["import axios from 'axios'\n\nconst $http = axios.create({\n  baseURL: 'https://ebu-lsp-api-dev.azurewebsites.net',\n  timeout: 60000,\n})\n\n$http.interceptors.request.use((request) => {\n  console.log('Starting Request', JSON.stringify(request, null, 2))\n  return request\n})\n\n$http.interceptors.response.use(\n  (response) => {\n    switch (response.status) {\n      case 200:\n        return response.data\n      default:\n        return Promise.reject(response)\n    }\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default $http\n","import $http from './apiHelper'\nimport qs from 'qs'\nimport axios from 'axios'\nimport { decodeArrayBuffer } from '@/utils/uitilFuntions'\n\nconst createUrl = (url) => {\n  let code = 'G0JQzK7qoEKnPD8v1esiGhpVUigfOVqUggRfd6wCDXYrAzFu41ZG-w=='\n  let parameters = qs.stringify({\n    code: code,\n  })\n  return url + '?' + parameters\n}\n\n/**\n * getOrderById\n * 取得報價單ById\n * @param {*} orderId\n * @returns\n */\n\nconst getOrderById = (orderId) => {\n  let request = {\n    body: {\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/getOrderById')\n\n  return $http.post(url, request.body)\n}\n/**\n * getOrdersByStatus\n * 取得報價單\n * @param {*} status: string; //A //B //C //D //E\n * @returns\n */\n\nconst getOrdersByStatus = (status) => {\n  let request = {\n    body: {\n      status: status,\n    },\n  }\n  let url = createUrl('api/getOrdersByStatus')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * approveOrder\n * 變更報價單狀態\n * @param {*} action: string; //submit 送審 //approve 核准 //complete 成案//terminate 終止\n * @param {*} orderId: string;\n * @returns\n */\n\nconst approveOrder = (action, orderId) => {\n  let request = {\n    body: {\n      action: action,\n      orderId: orderId,\n    },\n  }\n  let url = createUrl('api/approveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrders\n * 搜尋報價單\n * @param {*} taxID: string;\n * @param {*} orderId: string;\n * @param {*} startDate: string;\n * @param {*} endDate: string;\n * @returns\n */\n\nconst getOrders = (params) => {\n  let request = {\n    body: {\n      taxID: params.taxID,\n      orderId: params.orderId,\n      startDate: params.startDate,\n      endDate: params.endDate,\n    },\n  }\n  let url = createUrl('api/getOrders')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getOrderReports\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst getOrderReports = (params) => {\n  let request = {\n    body: {\n      company: params.company,\n      createdDate: params.createdDate,\n    },\n  }\n  let url = createUrl('api/getOrderReports')\n\n  return $http.post(url, request.body)\n}\n\nconst getProductJson = async () => {\n  const arrayBuffer = await $http.get(\n    'https://ebudatadev.blob.core.windows.net/lspoutput/Faculty-21.json.gz',\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n\nconst getCategoryByVersion = async (category, veriosn) => {\n  const arrayBuffer = await $http.get(\n    `https://ebudatadev.blob.core.windows.net/lspoutput/${category}-${veriosn}.json.gz`,\n    {\n      responseType: 'arraybuffer',\n    },\n  )\n\n  return decodeArrayBuffer(arrayBuffer)\n}\n/**\n * uploadProductFile\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst uploadProductFile = (params) => {\n  let request = {\n    body: params,\n    headers: {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    },\n  }\n  let url = createUrl('api/uploadProductFile')\n\n  return $http.post(url, request.body, request.headers)\n}\n/**\n * saveProductVersion\n * 搜尋報價單\n * @param {*} company: string;\n * @param {*} createdDate: string;\n * @returns\n */\n\nconst saveProductVersion = (params) => {\n  let request = {\n    body: {\n      userName: params.userName,\n      description: params.description,\n      importFiles: params.importFiles,\n    },\n  }\n  let url = createUrl('api/saveProductVersion')\n\n  return $http.post(url, request.body, request.headers)\n}\n\n/**\n * saveOrder\n * 儲存報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst saveOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/saveOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * updateOrder\n * 更新報價單\n * @param {*} basicInfo: object;\n * @param {*} quotationGroup: array;\n * @param {*} quotationTotal: object;\n * @param {*} note: string;\n * @returns\n */\n\nconst updateOrder = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/updateOrder')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProducts\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProducts = (params) => {\n  let request = {\n    body: {\n      ...params,\n    },\n  }\n  let url = createUrl('api/getProducts')\n\n  return $http.post(url, request.body)\n}\n\n/**\n * getProductVersions\n * 搜尋品項\n * @param {*} category: string;\n * @param {*} level: string;\n * @param {*} partNumber?: string;\n * @param {*} itemName?: string;\n * @returns\n */\n\nconst getProductVersions = () => {\n  let url = createUrl('api/getProductVersions')\n\n  return $http.post(url)\n}\n\nexport {\n  getOrderById,\n  getOrdersByStatus,\n  approveOrder,\n  getOrders,\n  getOrderReports,\n  getProductJson,\n  getCategoryByVersion,\n  saveProductVersion,\n  uploadProductFile,\n  saveOrder,\n  getProducts,\n  updateOrder,\n  getProductVersions,\n}\n","const CAGETORY_OPTIONS = [\n  {\n    id: 'additional_product',\n    displayName: 'Additional Product',\n  },\n  {\n    id: 'enterprise',\n    displayName: 'Enterprise',\n  },\n  {\n    id: 'faculty',\n    displayName: 'Faculty',\n  },\n  {\n    id: 'mvlp',\n    displayName: 'MVLP',\n  },\n  {\n    id: 'server_and_cloud_enrollment',\n    displayName: 'Server and Cloud Enrollment',\n  },\n  {\n    id: 'student',\n    displayName: 'Student',\n  },\n  {\n    id: 'mpsa',\n    displayName: 'MPSA',\n  },\n]\n\nconst PRICE_LEVEL_OPTIONS = [\n  {\n    id: 'A',\n    displayName: 'A',\n  },\n  {\n    id: 'B',\n    displayName: 'B',\n  },\n  {\n    id: 'C',\n    displayName: 'C',\n  },\n  {\n    id: 'D',\n    displayName: 'D',\n  },\n  {\n    id: 'NON SPECIFIC',\n    displayName: 'NON SPECIFIC',\n  },\n]\nexport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS }\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst InfoModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeModal}>\n        <CModalHeader>\n          <CModalTitle>{props.title || ''}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.infoContain}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={props.closeModal}>\n            我知道了\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nInfoModal.propTypes = {\n  title: PropTypes.string,\n  isShow: PropTypes.bool,\n  closeModal: PropTypes.func,\n  infoContain: PropTypes.string,\n}\n\nexport default InfoModal\n","import React, { useState, useEffect } from 'react'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Loader = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return visible ? (\n    <div className=\"text-center\">\n      <CSpinner className=\"m-5\" />\n    </div>\n  ) : null\n}\n\nLoader.propTypes = {\n  isShow: PropTypes.bool,\n}\n\nexport default Loader\n","export const initData = {\n  basicInfo: {\n    orderNum: '',\n    company: '',\n    taxID: '',\n    contactPerson: '',\n    email: '',\n    phone: '',\n    address: '',\n  },\n  quotationGroup: [\n    {\n      groupName: '',\n      productLists: [\n        {\n          partNum: '',\n          productDes: '',\n          startDate: null,\n          measure: '',\n          quantity: null,\n          unitPrice: null,\n          QTY: null,\n          country: '',\n          totalAmount: null,\n          estimatedRetailPrice: null,\n          currentNetPrice: null,\n          discountedNetPrice: null,\n          customerDiscount: null,\n          maximumReslaePrice: null,\n          markupMargin: null,\n        },\n      ],\n    },\n  ],\n  quotationTotal: {\n    taxExcluded: 0,\n    taxIncluded: 0,\n    tax: 0,\n  },\n}\n\nexport const headfields = [\n  { key: 'Part Number', label: 'Part Number', _style: { minWidth: '145px' } },\n  { key: 'Product Description', label: 'Product Description', _style: { minWidth: '300px' } },\n  { key: 'Usge start Date', label: 'Usge start Date' },\n  { key: 'Unit of Measure', label: 'Unit of Measure' },\n  { key: 'Unit of Quantity', label: 'Unit of Quantity' },\n  { key: 'Unit Price (TWD)', label: 'Unit Price (TWD)' },\n  { key: 'License Qty', label: 'License Qty' },\n  { key: 'Usage country', label: 'Usage country' },\n  { key: 'Total Amount (TWD)', label: 'Total Amount (TWD)' },\n  {\n    key: 'Estimated Retail Price',\n    label: 'Estimated Retail Price/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Current Net Price (TWD)',\n    label: 'Current Net Price (TWD)/價格冊',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Discounted Net Price (CPS)',\n    label: 'Discounted Net Price (CPS)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Customer Discount %',\n    label: 'Customer Discount %',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'Maximum Reslae Price (MRP)',\n    label: 'Maximum Reslae Price (MRP)',\n    _props: { className: 'text-success' },\n  },\n  {\n    key: 'mark up margin',\n    label: 'mark up margin',\n    _props: { className: 'text-warning' },\n    _style: { minWidth: '120px' },\n  },\n  {\n    key: 'active',\n    label: '',\n  },\n]\n\nexport const searchTableHead = [\n  {\n    key: 'action',\n    label: '選擇',\n    _props: { color: 'dark' },\n    _style: { width: '50px' },\n  },\n  {\n    key: 'search_pd_name',\n    label: 'Item Name',\n    _props: { color: 'dark' },\n    _style: { width: '40%' },\n  },\n  {\n    key: 'search_level',\n    label: 'Level',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_unit',\n    label: 'Purchase Unit',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_purchase_period',\n    label: 'Purchase Period',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_current_net_price',\n    label: 'Current Net Price',\n    _props: { color: 'dark' },\n  },\n  {\n    key: 'search_estimated_retail_price',\n    label: 'Estimated Retail Price',\n    _props: { color: 'dark' },\n  },\n]\n\nexport const rules = `1. 本報價單為含稅報價，此報價為三年期最低總價，本報價不含安裝、教育訓練費用、定製化及衍生性專業服務等。\\n2. 本報價單有效期限為報價日起五天，逾期報價失效。\\n3. 買方應於收到賣方發票後【卅】天內，將應付款項一次性支付予賣方。\\n4. 買方簽回本報價單後視同正式採購合約，買方不得以任何理由向賣方/原廠要求退換貨或退費，亦不得以簽回之買方公司員工無簽約代理權而拒絕付款。授權期間到期若有  未使用的金額、授權用量等，買方同意自動放棄相關權益，無法申請遞延，亦無法轉換其他服務等。\\n5. Enterprise合約（EA）三年期間，PAL(Partner Admin Link)的MPN ID為賣方所有。買方須依原廠之要求，完成相關線上電子簽署作業【包含CPOR(Claiming Partner of Record)及DPOR(Digital Partner of Record)客戶關聯等】。\\n6. 本軟體之使用若有需透過帳號密碼之方式者，賣方不負任何帳號密碼保管責任，買方應善盡保管之責，且經常不定時更新密碼，以避免遭受第三人之攻擊或盜用等。透過該組帳號密碼所進行之所有行為，皆視同買方行為，買方應自負所有法律責任，及因此所產生之各種可能遭受之損害。\\n7. 本軟體之最終版本由原廠按現狀提供，賣方不為任何明示或默示之擔保，亦不保證所提出之給付，並無任何抄襲或仿冒之情事，或未侵害第三人之智慧財產權或其他權利。賣方亦不承擔後續維修、更新、零配件供應等。\\n8. 買方應切實遵守原廠之授權條款、資訊安全控管規範及使用限制等規定，並簽署原廠要求之相關合約文件。如有違反，買方除應按本報價單之最低總價十倍之數額，作為懲罰性賠償金賠償於賣方外，並應自行負擔民、刑事責任。\\n9. 若買方單方面解除或終止本報價單，除不得請求賣方返還任何款項且仍須依本報價單總價付款外，買方尚須給付賣方如下之懲罰性違約金，如賣方另有其他損害，買方亦應賠償之：\\n(1) 賣方尚未向原廠採購時，以本報價單總價之50%作為懲罰性違約金。\\n(2) 賣方已向原廠採購時，以本報價單總價之100%作為懲罰性違約金。\\n10. 賣方對買方因本報價單所生之損害賠償責任，以本報價單總價之百分之十為上限。但不適用於買方依本報價單應支付賣方之價款，買方之法定代理人應與買方負連帶賠償責任。\\n11. 本報價單條款效力優於於先前、同時或嗣後就本軟體採購所為之一切口頭約定或買方之書面訂單等。\\n12. 就本報價單有關涉訟事項，以臺灣臺北地方法院為第一審管轄法院。`\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CFormSelect,\n  CFormCheck,\n} from '@coreui/react'\nimport { searchTableHead } from '@utils/quotationVariables'\nimport { CAGETORY_OPTIONS, PRICE_LEVEL_OPTIONS } from '@utils/setting'\nimport { getProducts } from '@service/api'\n\nconst SearchProductModal = ({ open, setCurrentItemData, onClose }) => {\n  const [searchParams, setSearchParams] = useState({\n    category: CAGETORY_OPTIONS[0].id,\n    partNum: '',\n    keywords: '',\n    level: PRICE_LEVEL_OPTIONS[0].id,\n  })\n  const [searchItems, setSearchItems] = useState([])\n  const [currentSearchItem, setCurrentSearchItem] = useState(null)\n\n  const searchProduct = async () => {\n    const { keywords, level, partNum, category } = searchParams\n    if (!category || !(!partNum && !(keywords && keywords < 5)) || !level) return\n    const { data } = await getProducts({ category, partNumber: partNum, itemName: keywords, level })\n    if (data?.products?.length) {\n      setSearchItems(data.products)\n    }\n  }\n\n  const setCurrentData = () => {\n    if (!currentSearchItem) return\n    return setCurrentItemData ? setCurrentItemData(currentSearchItem) : null\n  }\n\n  return (\n    <CModal className=\"product-select-modal\" visible={open} onClose={onClose}>\n      <CModalHeader>\n        <CModalTitle>搜尋產品項目</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <div className=\"px-2\">\n          <CRow>\n            <CCol className=\"col-2\">\n              <CInputGroup>\n                <CInputGroupText>類別</CInputGroupText>\n                <CFormSelect\n                  onChange={(e) => setSearchParams({ ...searchParams, category: e.target.value })}\n                >\n                  {CAGETORY_OPTIONS.map((item) => {\n                    return (\n                      <option key={item.id} value={item.id}>\n                        {item.displayName}\n                      </option>\n                    )\n                  })}\n                </CFormSelect>\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-2\">\n              <CInputGroup>\n                <CInputGroupText>PN</CInputGroupText>\n                <CFormInput\n                  placeholder=\"part number\"\n                  minLength={5}\n                  onChange={(e) => setSearchParams({ ...searchParams, partNum: e.target.value })}\n                />\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-4\">\n              <CInputGroup>\n                <CInputGroupText>關鍵字</CInputGroupText>\n                <CFormInput\n                  placeholder=\"請輸入關鍵字(至少為5字)\"\n                  minLength={5}\n                  onChange={(e) => setSearchParams({ ...searchParams, keywords: e.target.value })}\n                />\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-2\">\n              <CInputGroup>\n                <CInputGroupText>Level</CInputGroupText>\n                <CFormSelect\n                  onChange={(e) => setSearchParams({ ...searchParams, level: e.target.value })}\n                >\n                  {PRICE_LEVEL_OPTIONS.map((item) => {\n                    return (\n                      <option key={item.id} value={item.id}>\n                        {item.displayName}\n                      </option>\n                    )\n                  })}\n                </CFormSelect>\n              </CInputGroup>\n            </CCol>\n            <CCol className=\"col-2\">\n              <CButton className=\"w-100\" color=\"primary\" variant=\"outline\" onClick={searchProduct}>\n                搜尋相關品項\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"px-2 py-4\">\n          <h5>篩選結果</h5>\n          <div>\n            <CTable hover columns={searchTableHead}>\n              <CTableBody>\n                {searchItems && searchItems.length ? (\n                  searchItems.map((item) => {\n                    return (\n                      <CTableRow key={`${item.partNumber}`}>\n                        <CTableDataCell>\n                          <CFormCheck\n                            type=\"radio\"\n                            name={`searchProduct`}\n                            id={item.partNumber}\n                            value={item.partNumber}\n                            onChange={() => {\n                              setCurrentSearchItem(item)\n                            }}\n                            defaultChecked={\n                              currentSearchItem?.partNumber\n                                ? item.partNumber === currentSearchItem.partNumber\n                                : false\n                            }\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell>{item.itemName}</CTableDataCell>\n                        <CTableDataCell>{item.level}</CTableDataCell>\n                        <CTableDataCell>{item.purchaseUnit}</CTableDataCell>\n                        <CTableDataCell>{item.purchasePeriod}</CTableDataCell>\n                        <CTableDataCell>{item.currentNetPrice}</CTableDataCell>\n                        <CTableDataCell>{item.estimatedRetailPrice}</CTableDataCell>\n                      </CTableRow>\n                    )\n                  })\n                ) : (\n                  <CTableRow>\n                    <CTableDataCell colSpan={7}>尚無資料</CTableDataCell>\n                  </CTableRow>\n                )}\n              </CTableBody>\n            </CTable>\n          </div>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={onClose}>\n          Close\n        </CButton>\n        <CButton color=\"primary\" onClick={setCurrentData}>\n          選擇\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nSearchProductModal.propTypes = {\n  setCurrentItemData: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n}\n\nexport default SearchProductModal\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilMinus, cilPencil, cilTrash, cilPlus } from '@coreui/icons'\nimport { cloneDeep } from 'lodash'\nimport ShortUniqueId from 'short-unique-id'\nimport { priceFormat } from '@utils/uitilFuntions'\nimport {\n  CForm,\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CFormTextarea,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from '@coreui/react'\nimport { getOrderById, saveOrder, updateOrder, approveOrder } from '@service/api'\nimport InfoModal from '../Share/InfoModal'\nimport SearchProductModal from '@components/SearchProductModal'\nimport { initData, rules, headfields } from '../../utils/quotationVariables'\nimport Loader from '@views/Share/Loader'\n\nconst Quotation = () => {\n  const uid = useMemo(() => new ShortUniqueId({ length: 5 }), [])\n  const { childPath } = useParams()\n  const navigate = useNavigate()\n  const [openSearchModal, setOpenSearchModal] = useState(false)\n  const [openTabEdit, setOpenTabEdit] = useState(false)\n  const [currentTab, setCurrentTab] = useState(0)\n  const [currentItemIdx, setCurrentItemIdx] = useState(0)\n  const [orderData, setOrderData] = useState(null)\n  const [isShowModal, setShowModal] = useState({ open: false, title: '', infoContain: '' })\n\n  const [editTab, setEditTab] = useState([])\n\n  const openModal = (index) => {\n    setOpenSearchModal(true)\n    setCurrentItemIdx(index)\n  }\n\n  const openTabEditModal = () => {\n    const tabLists = []\n    orderData.quotationGroup.forEach((group) => {\n      tabLists.push(group.groupName)\n    })\n    setEditTab(tabLists)\n    setOpenTabEdit(true)\n  }\n\n  const addGroup = () => {\n    const newGroup = cloneDeep(orderData.quotationGroup[orderData.quotationGroup.length - 1])\n\n    newGroup.groupName = `群組${orderData.quotationGroup.length + 1}`\n    newGroup.productLists = addUniKey(newGroup.productLists)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: [...prevOrderData.quotationGroup, newGroup],\n      quotationTotal: countQuotationTotal([...prevOrderData.quotationGroup, newGroup]),\n    }))\n    setCurrentTab(orderData.quotationGroup.length)\n  }\n\n  const deleteGroup = (groupIdx) => {\n    const newGroupData = cloneDeep(orderData.quotationGroup)\n\n    if (newGroupData && newGroupData.length === 1) return\n    newGroupData.splice(groupIdx, 1)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n    setCurrentTab(newGroupData.length - 1)\n  }\n\n  const addItem = (type) => {\n    const newGroupData = cloneDeep(orderData.quotationGroup)\n    const tempProductLists = cloneDeep(addUniKey(initData.quotationGroup[0].productLists))\n    if (type === 'PS') tempProductLists[0].partNum = 'PS'\n\n    const newProductLists = [...newGroupData[currentTab].productLists, ...tempProductLists]\n    newGroupData[currentTab].productLists = newProductLists\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n  }\n\n  const deleteItem = (index) => {\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroupData[currentTab].productLists\n    if (newProductLists && newProductLists.length === 1) return\n    newProductLists.splice(index, 1)\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n  }\n\n  const onChangeItemValue = (idx, name, value) => {\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroupData[currentTab].productLists\n    newProductLists[idx][name] = value\n\n    //計算\n    const {\n      discountedNetPrice,\n      markupMargin,\n      currentNetPrice,\n      quantity,\n      QTY,\n      estimatedRetailPrice,\n    } = newProductLists[idx]\n\n    if (discountedNetPrice && markupMargin)\n      newProductLists[idx].unitPrice = discountedNetPrice * (1 + markupMargin / 100)\n\n    if (discountedNetPrice)\n      newProductLists[idx].customerDiscount =\n        Math.round(((currentNetPrice - discountedNetPrice) / currentNetPrice) * 10000) / 100\n\n    if (quantity && newProductLists[idx].unitPrice && QTY)\n      newProductLists[idx].totalAmount = Math.round(quantity * newProductLists[idx].unitPrice * QTY)\n\n    if (estimatedRetailPrice)\n      newProductLists[idx].maximumReslaePrice = Math.round(\n        estimatedRetailPrice * (1 - newProductLists[idx].customerDiscount / 100),\n      )\n\n    newGroupData[currentTab].subTotal = countSubTotal(newProductLists)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(newGroupData),\n    }))\n  }\n\n  const countSubTotal = (productLists) => {\n    let subTotal = 0\n    productLists.forEach((item) => {\n      subTotal += item.totalAmount\n    })\n    return subTotal\n  }\n\n  const countQuotationTotal = (groupLists) => {\n    if (!groupLists?.length) return\n    let taxExcluded = 0\n    groupLists.forEach((group) => {\n      taxExcluded += group.subTotal\n    })\n    taxExcluded = Math.round(taxExcluded)\n    return {\n      taxExcluded,\n      tax: Math.round(taxExcluded * 0.05),\n      taxIncluded: Math.round(taxExcluded * 1.05),\n    }\n  }\n\n  const setCurrentItemData = (currentSearchItem) => {\n    if (!currentSearchItem) return\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    let newProductLists = newGroupData[currentTab].productLists\n    let newCurrentItem = newProductLists[currentItemIdx]\n\n    newCurrentItem.partNum = currentSearchItem.partNumber\n    newCurrentItem.productDes = currentSearchItem.itemName\n    newCurrentItem.estimatedRetailPrice = currentSearchItem.estimatedRetailPrice\n    newCurrentItem.currentNetPrice = currentSearchItem.currentNetPrice\n\n    newGroupData.subTotal = countSubTotal(newProductLists)\n\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n      quotationTotal: countQuotationTotal(orderData.quotationGroup),\n    }))\n    setOpenSearchModal(false)\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    let newInfoData = cloneDeep(basicInfo)\n    newInfoData[name] = value\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      basicInfo: newInfoData,\n    }))\n  }\n\n  const onChangeTabValue = (idx, value) => {\n    let newTabEditLists = cloneDeep(editTab)\n    newTabEditLists[idx] = value\n    setEditTab(newTabEditLists)\n  }\n\n  const saveGroupDataName = () => {\n    let newGroupData = cloneDeep(orderData.quotationGroup)\n    editTab.forEach((tab, idx) => {\n      newGroupData[idx].groupName = tab\n    })\n    setOrderData((prevOrderData) => ({\n      ...prevOrderData,\n      quotationGroup: newGroupData,\n    }))\n    setOpenTabEdit(false)\n  }\n\n  const addUniKey = (arraydata) => {\n    const newArraydata = arraydata.map((element) => {\n      return { ...element, uniKey: uid.rnd() }\n    })\n    return newArraydata\n  }\n\n  const initQuotationGroup = useCallback(\n    (groupData) => {\n      const newData = cloneDeep(groupData)\n      newData.forEach((group, idx) => {\n        if (!group.groupName) group.groupName = `群組${idx + 1}`\n        const newProductLists = group.productLists.map((element) => {\n          return { ...element, uniKey: uid.rnd() }\n        })\n        return (group.productLists = newProductLists)\n      })\n      return newData\n    },\n    [uid],\n  )\n\n  const saveQuotation = async (action) => {\n    const { company, taxID } = orderData.basicInfo\n    if (!company || !taxID)\n      return setShowModal({\n        open: true,\n        title: '驗證錯誤',\n        infoContain: '必填資料不能為空(公司名稱、統編)',\n      })\n\n    if (action === 'save') {\n      const { data, status } = await saveOrder(orderData)\n      if (status === 200 && data?.orderId) {\n        setOrderData(null)\n        navigate(`/quotation/edit?orderId=${data.orderId}`)\n      } else {\n        setShowModal({\n          open: true,\n          title: '報價單儲存錯誤',\n          infoContain: '請稍後再試',\n        })\n      }\n    }\n\n    if (action === 'update') {\n      const { status } = await updateOrder(orderData)\n      if (status !== 200) {\n        setShowModal({\n          open: true,\n          title: '報價單儲存錯誤',\n          infoContain: '請稍後再試',\n        })\n      }\n    }\n\n    if (action === 'submit') {\n      await approveOrder('submit', orderData.orderId)\n        .then((res) => {\n          if (res?.status === 200) navigate(`/quotation/index`)\n        })\n        .catch(() => {\n          setShowModal({\n            open: true,\n            title: '報價單儲存錯誤',\n            infoContain: '請稍後再試',\n          })\n        })\n    }\n  }\n\n  const init = useCallback(async () => {\n    const orderId = new URLSearchParams(window.location.search).get('orderId')\n    if (childPath && childPath === 'edit' && orderId) {\n      const { data } = await getOrderById(orderId).catch((err) => {\n        return console.log(err)\n      })\n      if (data?.order) {\n        let { order } = data\n        order.quotationGroup = initQuotationGroup(order.quotationGroup)\n        return setOrderData(order)\n      }\n      return setOrderData({})\n    } else {\n      setOrderData({\n        basicInfo: initData.basicInfo,\n        quotationGroup: initQuotationGroup(initData.quotationGroup),\n        quotationTotal: initData.quotationTotal,\n        note: rules,\n      })\n    }\n  }, [childPath, initQuotationGroup])\n\n  useEffect(() => {\n    setOrderData(null)\n  }, [childPath])\n\n  useEffect(() => {\n    if (!orderData) init()\n  }, [init, orderData])\n\n  if (!orderData) return <Loader isShow />\n  const { basicInfo, quotationGroup, quotationTotal, note, orderId, status } = orderData\n\n  if (status && status !== 'A')\n    return <div className=\"d-flex justify-content-center p-5\">此張單已不可編輯</div>\n\n  return (\n    <>\n      <div className=\"px-3\">\n        <CForm action=\"\" method=\"post\" className=\"container\">\n          <div className=\"form-box\">\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"訂單編號\"\n                  placeholder=\"儲存表單後，系統會帶出\"\n                  defaultValue={orderId}\n                  readOnly\n                  disabled\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"客戶名稱\"\n                  placeholder=\"請輸入客戶名稱\"\n                  defaultValue={basicInfo?.company || ''}\n                  onChange={(e) => onChangeInfoValue('company', e.target.value)}\n                  required\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"統一編號\"\n                  placeholder=\"請輸入統一編號\"\n                  defaultValue={basicInfo?.taxID || ''}\n                  onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n                  required\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol md={4}>\n                <CFormInput\n                  label=\"聯絡人\"\n                  placeholder=\"請輸入姓名\"\n                  defaultValue={basicInfo?.contactPerson || ''}\n                  onChange={(e) => onChangeInfoValue('contactPerson', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  type=\"email\"\n                  label=\"Email\"\n                  placeholder=\"請輸入Email\"\n                  defaultValue={basicInfo?.email || ''}\n                  onChange={(e) => onChangeInfoValue('email', e.target.value)}\n                />\n              </CCol>\n              <CCol md={4}>\n                <CFormInput\n                  label=\"電話\"\n                  placeholder=\"請輸入電話\"\n                  defaultValue={basicInfo?.phone || ''}\n                  onChange={(e) => onChangeInfoValue('phone', e.target.value)}\n                />\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol md={12}>\n                <CFormInput\n                  label=\"地址\"\n                  placeholder=\"請輸入地址\"\n                  defaultValue={basicInfo?.address || ''}\n                  onChange={(e) => onChangeInfoValue('address', e.target.value)}\n                />\n              </CCol>\n            </CRow>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">服務報價</h5>\n            <div>\n              <CButton\n                color=\"primary\"\n                shape=\"rounded-pill\"\n                className=\"me-2\"\n                onClick={() => addItem('PS')}\n              >\n                新增PS項目\n              </CButton>\n              <CButton color=\"primary\" shape=\"rounded-pill\" onClick={addItem}>\n                新增項目\n              </CButton>\n            </div>\n          </div>\n          {quotationGroup && quotationGroup.length ? (\n            <CNav variant=\"tabs\" role=\"tablist\">\n              {quotationGroup.map((group, idx) => {\n                return (\n                  <CNavItem role=\"presentation\" key={idx} className=\"position-relative\">\n                    <CNavLink\n                      className=\"px-4\"\n                      active={currentTab === idx}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls={group.groupName}\n                      aria-selected={currentTab === idx}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        setCurrentTab(idx)\n                      }}\n                    >\n                      {group.groupName}\n                    </CNavLink>\n\n                    <CIcon\n                      icon={cilTrash}\n                      size=\"sm\"\n                      className=\"ms-1 tab-action-icon\"\n                      onClick={() => deleteGroup(idx)}\n                    ></CIcon>\n                  </CNavItem>\n                )\n              })}\n              <div className=\"d-flex align-items-center px-2\">\n                <div className=\"d-flex align-items-center me-2\" onClick={addGroup}>\n                  <div className=\"action-icon add-icon\">\n                    <CIcon className=\"text-light\" icon={cilPlus} />\n                  </div>\n                </div>\n                <CIcon\n                  icon={cilPencil}\n                  size=\"sm\"\n                  className=\"ms-1 action-icon\"\n                  onClick={() => openTabEditModal()}\n                ></CIcon>\n              </div>\n            </CNav>\n          ) : null}\n\n          <div className=\"mb-3\">\n            <div className=\"service-quote rounded-0 px-2 overflow-scroll\">\n              <CTabContent>\n                {quotationGroup && quotationGroup.length\n                  ? quotationGroup.map((group, groupIdx) => {\n                      return (\n                        <CTabPane\n                          role=\"tabpanel\"\n                          aria-labelledby={group.groupName}\n                          visible={currentTab === groupIdx}\n                          key={`${groupIdx}_${group.groupName}`}\n                        >\n                          <CTable hover className=\"table-bg-none\" columns={headfields}>\n                            <CTableBody>\n                              {group.productLists && group.productLists.length\n                                ? group.productLists.map((item, idx) => {\n                                    return (\n                                      <CTableRow key={`${groupIdx}${item.uniKey}`}>\n                                        <CTableDataCell\n                                          align=\"middle\"\n                                          className=\"d-flex align-items-center\"\n                                        >\n                                          <CFormInput\n                                            defaultValue={item.partNum || ''}\n                                            size=\"sm\"\n                                            disabled\n                                            readOnly\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'partNum', e.target.value)\n                                            }\n                                          />\n\n                                          <CIcon\n                                            icon={cilFindInPage}\n                                            size=\"xxl\"\n                                            className=\"ms-1 action-icon\"\n                                            onClick={() => openModal(idx)}\n                                          ></CIcon>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.productDes || ''}\n                                            size=\"sm\"\n                                            disabled={item.partNum !== 'PS'}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'productDes', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"date\"\n                                            defaultValue={item.startDate || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'startDate', e.target.value, e)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.measure || ''}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'measure', e.target.value)\n                                            }\n                                            size=\"sm\"\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            min={0}\n                                            defaultValue={item.quantity || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'quantity', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.unitPrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.QTY || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'QTY', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            defaultValue={item.country || ''}\n                                            size=\"sm\"\n                                            onChange={(e) =>\n                                              onChangeItemValue(idx, 'country', e.target.value)\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.partNum !== 'PS' ? (\n                                            priceFormat(item.totalAmount) || '-'\n                                          ) : (\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.totalAmount || ''}\n                                              size=\"sm\"\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'totalAmount',\n                                                  parseInt(e.target.value),\n                                                )\n                                              }\n                                            />\n                                          )}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.estimatedRetailPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {priceFormat(item.currentNetPrice) || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CFormInput\n                                            type=\"number\"\n                                            defaultValue={item.discountedNetPrice || ''}\n                                            size=\"sm\"\n                                            min={0}\n                                            onChange={(e) =>\n                                              onChangeItemValue(\n                                                idx,\n                                                'discountedNetPrice',\n                                                e.target.value,\n                                              )\n                                            }\n                                          />\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.customerDiscount || '-'}%\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          {item.maximumReslaePrice || '-'}\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <CInputGroup size=\"sm\">\n                                            <CFormInput\n                                              type=\"number\"\n                                              defaultValue={item.markupMargin || ''}\n                                              min={0}\n                                              onChange={(e) =>\n                                                onChangeItemValue(\n                                                  idx,\n                                                  'markupMargin',\n                                                  e.target.value,\n                                                )\n                                              }\n                                            />\n                                            <CInputGroupText>%</CInputGroupText>\n                                          </CInputGroup>\n                                        </CTableDataCell>\n                                        <CTableDataCell align=\"middle\">\n                                          <div\n                                            className=\"d-flex align-items-center\"\n                                            onClick={() => deleteItem(idx)}\n                                          >\n                                            <div className=\"action-icon deleted-icon\">\n                                              <CIcon className=\"text-light\" icon={cilMinus} />\n                                            </div>\n                                          </div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    )\n                                  })\n                                : null}\n                              <CTableRow>\n                                <CTableDataCell colSpan={16}>\n                                  小計：NT${priceFormat(group.subTotal) || '-'}\n                                </CTableDataCell>\n                              </CTableRow>\n                            </CTableBody>\n                          </CTable>\n                        </CTabPane>\n                      )\n                    })\n                  : null}\n              </CTabContent>\n            </div>\n            <div className=\"calculate-fields\">\n              <div className=\"field-title\">\n                <div className=\"field\">total(未稅)：</div>\n                <div className=\"field\">營業稅(5%)：</div>\n                <div className=\"field\">total(含稅)：</div>\n              </div>\n              <div className=\"field-content\">\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.taxExcluded) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.tax) || '-'}</div>\n                <div className=\"field\">NT$ {priceFormat(quotationTotal?.taxIncluded) || '-'}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"px-0 mb-2 d-flex justify-content-between align-items-center\">\n            <h5 className=\"mb-0\">備註</h5>\n          </div>\n          <div className=\"form-box px-2\">\n            <CFormTextarea\n              rows={15}\n              defaultValue={note || ''}\n              onChange={(e) =>\n                setOrderData((prevOrderData) => ({\n                  ...prevOrderData,\n                  note: e.target.value,\n                }))\n              }\n            ></CFormTextarea>\n          </div>\n          <SearchProductModal\n            open={openSearchModal}\n            onClose={() => setOpenSearchModal(false)}\n            setCurrentItemData={(itemData) => setCurrentItemData(itemData)}\n          />\n          <CModal visible={openTabEdit} onClose={() => setOpenTabEdit(false)}>\n            <CModalHeader>\n              <CModalTitle>編輯群組名稱</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"px-2\">\n                {editTab && editTab.length\n                  ? editTab.map((groupName, idx) => {\n                      return (\n                        <div key={`${groupName}_${idx}`} className=\"mb-2\">\n                          <CInputGroup>\n                            <CFormInput\n                              defaultValue={groupName}\n                              onChange={(e) => {\n                                onChangeTabValue(idx, e.target.value)\n                              }}\n                            />\n                          </CInputGroup>\n                        </div>\n                      )\n                    })\n                  : null}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => setOpenTabEdit(false)}>\n                取消\n              </CButton>\n              <CButton color=\"primary\" onClick={saveGroupDataName}>\n                確定\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      </div>\n      <div className=\"form-action-wrap px-4 py-2\">\n        {orderId ? (\n          <>\n            <CButton color=\"primary\" className=\"me-2\" onClick={() => saveQuotation('update')}>\n              儲存\n            </CButton>\n            <CButton color=\"warning\" onClick={() => saveQuotation('submit')}>\n              送審\n            </CButton>\n          </>\n        ) : (\n          <CButton color=\"primary\" onClick={() => saveQuotation('save')}>\n            建立報價單\n          </CButton>\n        )}\n      </div>\n\n      <InfoModal\n        title={isShowModal.title}\n        isShow={isShowModal.open}\n        closeModal={() => setShowModal((prevState) => ({ ...prevState, open: false }))}\n        infoContain={isShowModal.infoContain}\n      />\n    </>\n  )\n}\n\nexport default Quotation\n"],"names":["$http","axios","create","baseURL","timeout","interceptors","request","use","console","log","JSON","stringify","response","status","data","Promise","reject","error","createUrl","url","qs","code","getOrderById","orderId","body","post","getOrdersByStatus","approveOrder","action","getOrders","params","taxID","startDate","endDate","getOrderReports","company","createdDate","getCategoryByVersion","_x","_x2","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","veriosn","arrayBuffer","wrap","_context2","prev","next","get","concat","responseType","sent","abrupt","decodeArrayBuffer","stop","apply","arguments","uploadProductFile","headers","saveProductVersion","userName","description","importFiles","saveOrder","_objectSpread","updateOrder","getProducts","getProductVersions","CAGETORY_OPTIONS","id","displayName","PRICE_LEVEL_OPTIONS","props","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeModal","CModalHeader","CModalTitle","title","CModalBody","infoContain","CModalFooter","CButton","color","onClick","className","CSpinner","initData","basicInfo","orderNum","contactPerson","email","phone","address","quotationGroup","groupName","productLists","partNum","productDes","measure","quantity","unitPrice","QTY","country","totalAmount","estimatedRetailPrice","currentNetPrice","discountedNetPrice","customerDiscount","maximumReslaePrice","markupMargin","quotationTotal","taxExcluded","taxIncluded","tax","headfields","key","label","_style","minWidth","_props","searchTableHead","width","_ref","open","setCurrentItemData","keywords","level","searchParams","setSearchParams","_useState3","_useState4","searchItems","setSearchItems","_useState5","_useState6","currentSearchItem","setCurrentSearchItem","CRow","CCol","CInputGroup","CInputGroupText","CFormSelect","onChange","e","target","value","map","item","CFormInput","placeholder","minLength","variant","_callee","_data$products","_yield$getProducts","_context","partNumber","itemName","products","length","CTable","hover","columns","CTableBody","CTableRow","CTableDataCell","CFormCheck","type","name","defaultChecked","purchaseUnit","purchasePeriod","colSpan","uid","useMemo","ShortUniqueId","childPath","useParams","navigate","useNavigate","openSearchModal","setOpenSearchModal","openTabEdit","setOpenTabEdit","currentTab","setCurrentTab","_useState7","_useState8","currentItemIdx","setCurrentItemIdx","_useState9","_useState10","orderData","setOrderData","_useState11","_useState12","isShowModal","setShowModal","_useState13","_useState14","editTab","setEditTab","addItem","newGroupData","cloneDeep","tempProductLists","addUniKey","newProductLists","_toConsumableArray","subTotal","countSubTotal","prevOrderData","countQuotationTotal","onChangeItemValue","idx","_newProductLists$idx","Math","round","forEach","groupLists","group","onChangeInfoValue","newInfoData","arraydata","element","uniKey","rnd","initQuotationGroup","useCallback","groupData","newData","saveQuotation","_orderData$basicInfo","_yield$saveOrder","_yield$updateOrder","then","res","catch","init","_yield$getOrderById$c","order","URLSearchParams","window","location","search","err","note","Loader","CForm","method","md","defaultValue","readOnly","disabled","required","shape","CNav","role","CNavItem","CNavLink","active","component","preventDefault","CIcon","icon","cilTrash","size","groupIdx","splice","deleteGroup","newGroup","cilPlus","cilPencil","tabLists","push","openTabEditModal","CTabContent","CTabPane","align","cilFindInPage","index","min","priceFormat","parseInt","deleteItem","cilMinus","CFormTextarea","rows","SearchProductModal","itemData","newCurrentItem","newTabEditLists","onChangeTabValue","tab","InfoModal","prevState"],"sourceRoot":""}