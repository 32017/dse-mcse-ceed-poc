{"version":3,"file":"static/js/294.879e9b5b.chunk.js","mappings":"qNAsBA,IAlBiB,SAAHA,GAAuD,IAAjDC,EAAUD,EAAVC,WAAYC,EAAWF,EAAXE,YAAaC,EAAgBH,EAAhBG,iBAC3C,OACEC,EAAAA,EAAAA,KAACC,IAAa,CACZC,cAAe,kBACfC,UAAW,cACXC,UAAWP,EACXQ,UAAWP,EACXQ,aAAcP,EACdQ,qBAAsB,EACtBC,mBAAoB,EACpBC,mBAAoB,aACpBC,sBAAuB,mBACvBC,kBAAmB,mBACnBC,kBAAmB,6BACnBC,gBAAiB,4BAGvB,C,qICoFA,UAjG0B,WACxB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CtB,EAAWuB,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAoCR,EAAAA,EAAAA,UAAS,GAAES,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAxC1B,EAAU2B,EAAA,GAAEC,EAAaD,EAAA,IAGhCE,EAAAA,EAAAA,YAAU,WAERP,EAAQQ,EAAAA,IACRF,EAAcG,KAAKC,KAAKF,EAAAA,GAAcG,OALnB,IAOrB,GAAG,IAEH,IAAMC,EATe,GASFjC,EACbkC,EAAWD,EAVI,GAWfE,EAASf,EAAKgB,MAAMH,EAAYC,GAOtC,OACEhC,EAAAA,EAAAA,KAAA,OAAKmC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAAAF,SAAA,EACTpC,EAAAA,EAAAA,KAAA,OAAKmC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAAAH,SAAA,EACHpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,oCAG3CpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,8BAG3CpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,8BAG3CpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,kBAG3CpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,kBAG3CpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SAAC,oCAK/CpC,EAAAA,EAAAA,KAAA,OAAKmC,UAAU,YAAWC,SACvBH,GACCA,EAAOH,QACPG,EAAOS,KAAI,SAACC,EAAMC,GAChB,OACE5C,EAAAA,EAAAA,KAAA,OAAKmC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAACJ,UAAU,4CAA2CC,SAAA,EACzDpC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SACvCO,EAAKE,OAER7C,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SACvCO,EAAKG,UAER9C,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SACvCO,EAAKI,cAER/C,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,SACvCO,EAAKK,cAERhD,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,UACxCpC,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CACNC,MAAM,UACNC,SAA0B,MAAhBR,EAAKS,OACfC,QAAS,WAAoB,EAACjB,SAEb,MAAhBO,EAAKS,OAAiB,eAAO,0BAGlCpD,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACL,UAAU,oBAAoBM,GAAI,EAAEL,UACxCpC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,GAAG,gBAAgBpB,UAAU,cAAaC,UAC9CpC,EAAAA,EAAAA,KAACwD,EAAAA,EAAK,CAACC,KAAMC,EAAAA,YAzBWf,EAAKE,IAAMD,EA+B/C,MAEH1B,EAAKY,OAjFS,KAkFb9B,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CACP9D,WAAYA,EACZC,YAAaA,EACbC,iBAxEe,SAAC6D,GACxBtC,EAAesC,EAAaC,SAC9B,QA4EF,C,wDCvGO,IAAMH,EAAsB,CAAC,UAAU,sU","sources":["views/Share/Pagenate.js","views/quoteToCash/QuotationComplete.js","../node_modules/@coreui/icons/js/free/cil-data-transfer-down.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilDataTransferDown } from '@coreui/icons'\nimport { CContainer, CRow, CCol, CButton, CFormInput } from '@coreui/react'\nimport { completeLists } from '../../mocks/quotationData'\nimport Pagenate from '../Share/Pagenate'\n\nconst QuotationComplete = () => {\n  const [data, setData] = useState([])\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(0)\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    // axios.get('https://jsonplaceholder.typicode.com/posts/').then((response) => {\n    setData(completeLists)\n    setTotalPages(Math.ceil(completeLists.length / itemsPerPage))\n    // })\n  }, [])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = data.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n  const handleClick = (i) => {}\n\n  return (\n    <div className=\"lists-container\">\n      <CContainer>\n        <div className=\"list-head\">\n          <CRow>\n            <CCol className=\"text-align-center\" sm={2}>\n              報價單編號\n            </CCol>\n            <CCol className=\"text-align-center\" sm={3}>\n              客戶統編\n            </CCol>\n            <CCol className=\"text-align-center\" sm={2}>\n              建立時間\n            </CCol>\n            <CCol className=\"text-align-center\" sm={2}>\n              狀態\n            </CCol>\n            <CCol className=\"text-align-center\" sm={2}>\n              操作\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              預覽/下載\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"list-body\">\n          {subset &&\n            subset.length &&\n            subset.map((item, i) => {\n              return (\n                <div className=\"list-item\" key={item.num + i}>\n                  <CRow className=\"align-items-center justify-content-center\">\n                    <CCol className=\"text-align-center\" sm={2}>\n                      {item.num}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={3}>\n                      {item.client}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={2}>\n                      {item.createDate}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={2}>\n                      {item.statusText}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={2}>\n                      <CButton\n                        color=\"warning\"\n                        disabled={item.status !== 'C'}\n                        onClick={() => handleClick(i)}\n                      >\n                        {item.status === 'C' ? '成案' : '已成案'}\n                      </CButton>\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      <Link to=\"/pdfContainer\" className=\"action-icon\">\n                        <CIcon icon={cilDataTransferDown} />\n                      </Link>\n                    </CCol>\n                  </CRow>\n                </div>\n              )\n            })}\n        </div>\n        {data.length > itemsPerPage && (\n          <Pagenate\n            totalPages={totalPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </CContainer>\n    </div>\n  )\n}\n\nexport default QuotationComplete\n","export const cilDataTransferDown = [\"512 512\",\"<rect width='480' height='32' x='16' y='464' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='395.313 299.313 372.687 276.687 280 369.373 280 16 248 16 248 369.373 155.313 276.687 132.687 299.313 264 430.627 395.313 299.313' class='ci-primary'/>\"]"],"names":["_ref","totalPages","currentPage","handlePageChange","_jsx","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","setCurrentPage","_useState5","_useState6","setTotalPages","useEffect","completeLists","Math","ceil","length","startIndex","endIndex","subset","slice","className","children","_jsxs","CContainer","CRow","CCol","sm","map","item","i","num","client","createDate","statusText","CButton","color","disabled","status","onClick","Link","to","CIcon","icon","cilDataTransferDown","Pagenate","selectedPage","selected"],"sourceRoot":""}