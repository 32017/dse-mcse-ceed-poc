{"version":3,"file":"static/js/738.0e7bfed9.chunk.js","mappings":"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","sources":["mocks/quotationData.js","views/Share/ErrorModal.js","views/quoteToCash/Quotation.js"],"sourcesContent":["export const quotationLists = [\n  {\n    num: '00000017',\n    client: 'CviLux Group',\n    createDate: '2023-08-10',\n    statusText: '審核中',\n    status: 'B',\n  },\n  {\n    num: '00000016',\n    client: 'CviLux Group',\n    createDate: '2023-07-10',\n    statusText: '編輯中',\n    status: 'A',\n  },\n  {\n    num: '00000015',\n    client: 'CviLux Group',\n    createDate: '2023-06-10',\n    statusText: '已核准',\n    status: 'C',\n  },\n  {\n    num: '00000014',\n    client: 'CviLux Group',\n    createDate: '2023-05-10',\n    statusText: '已終止',\n    status: 'E',\n  },\n  {\n    num: '00000013',\n    client: 'CviLux Group',\n    createDate: '2023-04-10',\n    statusText: '已成案',\n    status: 'D',\n  },\n]\n\nexport const quotationContent = {\n  basicInfo: {\n    orderNum: '00000017',\n    company: 'CviLux Group',\n    taxID: '23632274',\n    contactPerson: '黃伸光',\n    email: 'Mason.Huang@cvilux.com',\n    phone: '02-2620-1000',\n    address: '251新北市淡水區中正東路一段3巷9號9F',\n  },\n  quotationLists: [\n    {\n      partNum: 'AAA-10842',\n      productDes: 'O365 E3 Sub Per User',\n      startDate: null,\n      measure: '1 Month(s)',\n      quantity: 12,\n      unitPrice: 808,\n      QTY: 0,\n      country: 'Taiwan',\n      totalAmount: 0,\n      estimatedRetailPrice: 0,\n      currentNetPrice: 878,\n      discountedNetPrice: 5265,\n      customerDiscount: 0,\n      maximumReslaePrice: 0,\n      markupMargin: 0,\n    },\n    {\n      partNum: 'AAA-10756',\n      productDes: 'M365 E3 Unified Sub Per User',\n      startDate: null,\n      measure: '1 Month(s)',\n      quantity: 12,\n      unitPrice: 1170,\n      QTY: 500,\n      country: 'Taiwan',\n      totalAmount: 7020,\n      estimatedRetailPrice: 25,\n      currentNetPrice: 878,\n      discountedNetPrice: 5265,\n      customerDiscount: 0,\n      maximumReslaePrice: 0,\n      markupMargin: 0,\n    },\n  ],\n}\n","import React, { useState, useEffect } from 'react'\nimport { CButton, CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst ErrorModal = (props) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(props.isShow)\n  }, [props.isShow])\n\n  return (\n    <>\n      <CModal alignment=\"center\" visible={visible} onClose={props.closeErrorModal}>\n        <CModalHeader>\n          <CModalTitle>發生錯誤</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.errorContain}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={props.closeErrorModal}>\n            我知道了\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nErrorModal.propTypes = {\n  isShow: PropTypes.bool,\n  closeErrorModal: PropTypes.func,\n  errorContain: PropTypes.string,\n}\n\nexport default ErrorModal\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport CIcon from '@coreui/icons-react'\nimport { cilFindInPage, cilMinus } from '@coreui/icons'\nimport { cloneDeep } from 'lodash'\nimport ShortUniqueId from 'short-unique-id'\nimport priceFormat from '../../utils/priceFormat'\nimport {\n  CForm,\n  CInputGroup,\n  CFormInput,\n  CInputGroupText,\n  CFormTextarea,\n  CRow,\n  CCol,\n  CButton,\n  CTable,\n  CTableRow,\n  CTableBody,\n  CTableDataCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CFormSelect,\n  CFormCheck,\n} from '@coreui/react'\nimport ErrorModal from '../Share/ErrorModal'\nimport { quotationContent } from '../../mocks/quotationData'\n\nconst initData = {\n  basicInfo: {\n    orderNum: '',\n    company: '',\n    taxID: '',\n    contactPerson: '',\n    email: '',\n    phone: '',\n    address: '',\n  },\n  itemDataLists: [\n    {\n      partNum: '',\n      productDes: '',\n      startDate: null,\n      measure: '',\n      quantity: null,\n      unitPrice: null,\n      QTY: null,\n      country: '',\n      totalAmount: null,\n      estimatedRetailPrice: null,\n      currentNetPrice: null,\n      discountedNetPrice: null,\n      customerDiscount: null,\n      maximumReslaePrice: null,\n      markupMargin: null,\n    },\n  ],\n}\n\nconst QuotationList = () => {\n  const uid = new ShortUniqueId({ length: 5 })\n  const { childPath } = useParams()\n  const [open, setOpen] = useState(false)\n  const [currentItemIdx, setCurrentItemIdx] = useState(0)\n  const [basicInfo, setBasicInfo] = useState(initData.basicInfo)\n  const [itemDataLists, setItemDataLists] = useState(initData.itemDataLists)\n  const [isShowModal, setShowModal] = useState(false)\n  const [searchParams, setSearchParams] = useState({ keywords: '', level: 'A' })\n  const [searchItems, setSearchItems] = useState([])\n  const [subTotal, setSubTotal] = useState(null)\n\n  const headfields = [\n    { key: 'Part Number', label: 'Part Number', _style: { minWidth: '145px' } },\n    { key: 'Product Description', label: 'Product Description', _style: { minWidth: '300px' } },\n    { key: 'Usge start Date', label: 'Usge start Date' },\n    { key: 'Unit of Measure', label: 'Unit of Measure' },\n    { key: 'Unit of Quantity', label: 'Unit of Quantity' },\n    { key: 'Unit Price (TWD)', label: 'Unit Price (TWD)' },\n    { key: 'License Qty', label: 'License Qty' },\n    { key: 'Usage country', label: 'Usage country' },\n    { key: 'Total Amount (TWD)', label: 'Total Amount (TWD)' },\n    {\n      key: 'Estimated Retail Price',\n      label: 'Estimated Retail Price/價格冊',\n      _props: { className: 'text-success' },\n    },\n    {\n      key: 'Current Net Price (TWD)',\n      label: 'Current Net Price (TWD)/價格冊',\n      _props: { className: 'text-success' },\n    },\n    {\n      key: 'Discounted Net Price (CPS)',\n      label: 'Discounted Net Price (CPS)',\n      _props: { className: 'text-success' },\n    },\n    {\n      key: 'Customer Discount %',\n      label: 'Customer Discount %',\n      _props: { className: 'text-success' },\n    },\n    {\n      key: 'Maximum Reslae Price (MRP)',\n      label: 'Maximum Reslae Price (MRP)',\n      _props: { className: 'text-success' },\n    },\n    {\n      key: 'mark up margin',\n      label: 'mark up margin',\n      _props: { className: 'text-warning' },\n      _style: { minWidth: '120px' },\n    },\n    {\n      key: 'active',\n      label: '',\n    },\n  ]\n\n  const searchTableHead = [\n    {\n      key: 'action',\n      label: '選擇',\n      _props: { color: 'dark' },\n      _style: { width: '50px' },\n    },\n    {\n      key: 'search_pd_name',\n      label: 'Item Name',\n      _props: { color: 'dark' },\n      _style: { width: '40%' },\n    },\n    {\n      key: 'search_level',\n      label: 'Level',\n      _props: { color: 'dark' },\n    },\n    {\n      key: 'search_purchase_unit',\n      label: 'Purchase Unit',\n      _props: { color: 'dark' },\n    },\n    {\n      key: 'search_purchase_period',\n      label: 'Purchase Period',\n      _props: { color: 'dark' },\n    },\n    {\n      key: 'search_current_net_price',\n      label: 'Current Net Price',\n      _props: { color: 'dark' },\n    },\n    {\n      key: 'search_estimated_retail_price',\n      label: 'Estimated Retail Price',\n      _props: { color: 'dark' },\n    },\n  ]\n\n  const openModal = (index) => {\n    setOpen(true)\n    setCurrentItemIdx(index)\n  }\n\n  const addItem = () => {\n    const newDataLists = [...itemDataLists, cloneDeep(addUniKey(initData.itemDataLists)[0])]\n    console.log('newDataLists', newDataLists)\n    setItemDataLists(newDataLists)\n  }\n\n  const deleteItem = (index) => {\n    if (itemDataLists && itemDataLists.length === 1) return\n    const newItemDataLists = cloneDeep(itemDataLists)\n    newItemDataLists.splice(index, 1)\n    setItemDataLists(newItemDataLists)\n    setSubTotal(countSubTotal(newItemDataLists))\n  }\n\n  const onChangeItemValue = (idx, name, value) => {\n    let newCurrentItem = cloneDeep(itemDataLists[idx])\n    let newItemDataLists = cloneDeep(itemDataLists)\n    newCurrentItem[name] = value\n\n    //計算\n    const { discountedNetPrice, markupMargin, currentNetPrice, quantity, QTY } = newCurrentItem\n\n    if (discountedNetPrice && markupMargin)\n      newCurrentItem.unitPrice = discountedNetPrice * (1 + markupMargin / 100)\n\n    if (discountedNetPrice)\n      newCurrentItem.customerDiscount =\n        Math.round(((currentNetPrice - discountedNetPrice) / currentNetPrice) * 10000) / 100\n\n    if (quantity && newCurrentItem.unitPrice && QTY)\n      newCurrentItem.totalAmount = quantity * newCurrentItem.unitPrice * QTY\n\n    newItemDataLists[idx] = newCurrentItem\n    setItemDataLists(newItemDataLists)\n    setSubTotal(countSubTotal(newItemDataLists))\n  }\n\n  const countSubTotal = (itemLists) => {\n    let subTotal = 0\n    itemLists.forEach((item) => {\n      subTotal += item.totalAmount\n    })\n    return subTotal\n  }\n\n  const setCurrentItemData = () => {\n    let newCurrentItem = cloneDeep(itemDataLists[currentItemIdx])\n    newCurrentItem.productDes = 'Office Professional Plus ALng SASU Office Standard Platform'\n    newCurrentItem.partNum = '269-05623'\n    newCurrentItem.estimatedRetailPrice = 12157\n    newCurrentItem.currentNetPrice = 9528.68\n\n    let newItemDataLists = itemDataLists\n    newItemDataLists[currentItemIdx] = newCurrentItem\n\n    setItemDataLists(newItemDataLists)\n    setSearchParams({ keywords: '', level: 'A' })\n    setSearchItems([])\n    setOpen(false)\n  }\n\n  const onChangeInfoValue = (name, value) => {\n    let newInfoData = cloneDeep(basicInfo)\n    newInfoData[name] = value\n    setBasicInfo(newInfoData)\n  }\n\n  const addUniKey = (arraydata) => {\n    const newArraydata = arraydata.map((element) => {\n      return { ...element, uniKey: uid.rnd() }\n    })\n    return newArraydata\n  }\n\n  const searchProduct = () => {\n    if (!searchParams.keywords || !searchParams.keywords.length < 5 || !searchParams.level) return\n    return setSearchItems([\n      {\n        itemName: 'Office Professional Plus ALng SASU Office Standard Platform',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '2544.12',\n        estimatedRetailPrice: '3246',\n      },\n      {\n        itemName: 'Office Professional Plus ALng LSA',\n        level: 'A',\n        purchaseUnit: '1 Year(s)',\n        purchasePeriod: 'Added at Signing',\n        currentNetPrice: '9528.68',\n        estimatedRetailPrice: '12157',\n      },\n    ])\n  }\n\n  useEffect(() => {\n    if (childPath && childPath === 'edit') {\n      setBasicInfo(quotationContent.basicInfo)\n      setItemDataLists(addUniKey(quotationContent.quotationLists))\n    } else {\n      setBasicInfo(initData.basicInfo)\n      setItemDataLists(addUniKey(initData.itemDataLists))\n    }\n  }, [childPath])\n\n  return (\n    <CForm action=\"\" method=\"post\">\n      <CRow className=\"form-box\">\n        <CRow className=\"mb-3\">\n          <CCol md={4}>\n            <CFormInput\n              label=\"訂單編號\"\n              placeholder=\"請輸入訂單編號\"\n              defaultValue={basicInfo.orderNum}\n              onChange={(e) => onChangeInfoValue('orderNum', e.target.value)}\n              required\n            />\n          </CCol>\n          <CCol md={4}>\n            <CFormInput\n              label=\"客戶名稱\"\n              placeholder=\"請輸入客戶名稱\"\n              defaultValue={basicInfo.company}\n              onChange={(e) => onChangeInfoValue('company', e.target.value)}\n              required\n            />\n          </CCol>\n          <CCol md={4}>\n            <CFormInput\n              label=\"統一編號\"\n              placeholder=\"請輸入統一編號\"\n              defaultValue={basicInfo.taxID}\n              onChange={(e) => onChangeInfoValue('taxID', e.target.value)}\n              required\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol md={4}>\n            <CFormInput\n              label=\"聯絡人\"\n              placeholder=\"請輸入姓名\"\n              defaultValue={basicInfo.contactPerson}\n              onChange={(e) => onChangeInfoValue('contactPerson', e.target.value)}\n            />\n          </CCol>\n          <CCol md={4}>\n            <CFormInput\n              type=\"email\"\n              label=\"Email\"\n              placeholder=\"請輸入Email\"\n              defaultValue={basicInfo.email}\n              onChange={(e) => onChangeInfoValue('email', e.target.value)}\n            />\n          </CCol>\n          <CCol md={4}>\n            <CFormInput label=\"電話\" placeholder=\"請輸入電話\" defaultValue={basicInfo.phone} />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol md={12}>\n            <CFormInput label=\"地址\" placeholder=\"請輸入地址\" defaultValue={basicInfo.address} />\n          </CCol>\n        </CRow>\n      </CRow>\n      <CButton onClick={() => setShowModal(!isShowModal)}>錯誤跳窗</CButton>\n      <ErrorModal\n        isShow={isShowModal}\n        closeErrorModal={() => setShowModal(false)}\n        errorContain=\"無法建立「報價單號： XXXXX」(單號已存在)\"\n      />\n      <CRow className=\"mb-2\">\n        <div className=\"px-0 d-flex justify-content-between align-items-center\">\n          <h5 className=\"mb-0\">服務報價</h5>\n          <CButton color=\"primary\" shape=\"rounded-pill\" onClick={addItem}>\n            新增項目\n          </CButton>\n        </div>\n      </CRow>\n      <CRow className=\"form-box px-2 overflow-scroll\">\n        <CTable hover className=\"table-bg-none\" columns={headfields}>\n          <CTableBody>\n            {itemDataLists && itemDataLists.length\n              ? itemDataLists.map((item, idx) => {\n                  return (\n                    <CTableRow key={`${item.partNum}_${item.uniKey} `}>\n                      <CTableDataCell align=\"middle\" className=\"d-flex align-items-center\">\n                        <CFormInput\n                          defaultValue={item.partNum || ''}\n                          size=\"sm\"\n                          disabled\n                          readOnly\n                          onChange={(e) => onChangeItemValue(idx, 'partNum', e.target.value)}\n                        />\n\n                        <CIcon\n                          icon={cilFindInPage}\n                          size=\"xxl\"\n                          className=\"ms-1 action-icon\"\n                          onClick={() => openModal(idx)}\n                        ></CIcon>\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          defaultValue={item.productDes || ''}\n                          size=\"sm\"\n                          disabled\n                          readOnly\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          type=\"date\"\n                          defaultValue={item.startDate || ''}\n                          size=\"sm\"\n                          onChange={(e) => onChangeItemValue(idx, 'startDate', e.target.value, e)}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          defaultValue={item.measure || ''}\n                          onChange={(e) => onChangeItemValue(idx, 'measure', e.target.value)}\n                          size=\"sm\"\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          type=\"number\"\n                          min={0}\n                          defaultValue={item.quantity || ''}\n                          size=\"sm\"\n                          onChange={(e) => onChangeItemValue(idx, 'quantity', e.target.value)}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">{item.unitPrice || '-'}</CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          type=\"number\"\n                          defaultValue={item.QTY || ''}\n                          size=\"sm\"\n                          min={0}\n                          onChange={(e) => onChangeItemValue(idx, 'QTY', e.target.value)}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          defaultValue={item.country || ''}\n                          size=\"sm\"\n                          onChange={(e) => onChangeItemValue(idx, 'country', e.target.value)}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        {priceFormat(item.totalAmount) || '-'}\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        {priceFormat(item.estimatedRetailPrice) || '-'}\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        {priceFormat(item.currentNetPrice) || '-'}\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CFormInput\n                          type=\"number\"\n                          defaultValue={item.discountedNetPrice || ''}\n                          size=\"sm\"\n                          min={0}\n                          onChange={(e) =>\n                            onChangeItemValue(idx, 'discountedNetPrice', e.target.value)\n                          }\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        {item.customerDiscount || '-'}%\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        {item.maximumReslaePrice || '-'}\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <CInputGroup size=\"sm\">\n                          <CFormInput\n                            type=\"number\"\n                            defaultValue={item.markupMargin || ''}\n                            min={0}\n                            onChange={(e) => onChangeItemValue(idx, 'markupMargin', e.target.value)}\n                          />\n                          <CInputGroupText>%</CInputGroupText>\n                        </CInputGroup>\n                      </CTableDataCell>\n                      <CTableDataCell align=\"middle\">\n                        <div className=\"d-flex align-items-center\" onClick={() => deleteItem(idx)}>\n                          <div className=\"action-icon deleted-icon\">\n                            <CIcon className=\"text-light\" icon={cilMinus} />\n                          </div>\n                        </div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )\n                })\n              : null}\n            <CTableRow>\n              <CTableDataCell colSpan={16}>小計：NT${priceFormat(subTotal) || '-'}</CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      </CRow>\n      <CRow className=\"mb-2\">\n        <div className=\"px-0 d-flex justify-content-between align-items-center\">\n          <h5 className=\"mb-0\">備註</h5>\n        </div>\n      </CRow>\n      <CRow className=\"form-box px-2\">\n        <CCol md={12}>\n          <CFormTextarea rows={3}></CFormTextarea>\n        </CCol>\n      </CRow>\n      <CModal className=\"product-select-modal\" visible={open} onClose={() => setOpen(false)}>\n        <CModalHeader>\n          <CModalTitle>搜尋產品項目</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"px-2\">\n            <CRow>\n              <CCol className=\"col-8\">\n                <CInputGroup>\n                  <CInputGroupText>關鍵字</CInputGroupText>\n                  <CFormInput\n                    placeholder=\"請輸入品項關鍵字(至少為5字)\"\n                    minLength={5}\n                    onChange={(e) => setSearchParams({ ...searchParams, keywords: e.target.value })}\n                  />\n                </CInputGroup>\n              </CCol>\n              <CCol className=\"col-2\">\n                <CInputGroup>\n                  <CInputGroupText>Level</CInputGroupText>\n                  <CFormSelect\n                    onChange={(e) => setSearchParams({ ...searchParams, level: e.target.value })}\n                  >\n                    <option value=\"A\">A</option>\n                    <option value=\"B\">B</option>\n                    <option value=\"C\">C</option>\n                    <option value=\"D\">D</option>\n                  </CFormSelect>\n                </CInputGroup>\n              </CCol>\n              <CCol className=\"col-2\">\n                <CButton\n                  className=\"w-100\"\n                  color=\"primary\"\n                  variant=\"outline\"\n                  onClick={searchProduct}\n                >\n                  搜尋相關品項\n                </CButton>\n              </CCol>\n            </CRow>\n          </div>\n          <div className=\"px-2 py-4\">\n            <h5>篩選結果</h5>\n            <div>\n              <CTable hover columns={searchTableHead}>\n                <CTableBody>\n                  {searchItems && searchItems.length\n                    ? searchItems.map((item, idx) => {\n                        return (\n                          <CTableRow key={`${item.itemName}_${item.purchasePeriod}`}>\n                            <CTableDataCell>\n                              <CFormCheck\n                                type=\"radio\"\n                                name=\"exampleRadios\"\n                                id={item.itemName}\n                                value={idx}\n                              />\n                            </CTableDataCell>\n                            <CTableDataCell>{item.itemName}</CTableDataCell>\n                            <CTableDataCell>{item.level}</CTableDataCell>\n                            <CTableDataCell>{item.purchaseUnit}</CTableDataCell>\n                            <CTableDataCell>{item.purchasePeriod}</CTableDataCell>\n                            <CTableDataCell>{item.currentNetPrice}</CTableDataCell>\n                            <CTableDataCell>{item.estimatedRetailPrice}</CTableDataCell>\n                          </CTableRow>\n                        )\n                      })\n                    : null}\n                </CTableBody>\n              </CTable>\n            </div>\n          </div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setOpen(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={setCurrentItemData}>\n            選擇\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </CForm>\n  )\n}\n\nexport default QuotationList\n"],"names":["quotationLists","num","client","createDate","statusText","status","quotationContent","basicInfo","orderNum","company","taxID","contactPerson","email","phone","address","partNum","productDes","startDate","measure","quantity","unitPrice","QTY","country","totalAmount","estimatedRetailPrice","currentNetPrice","discountedNetPrice","customerDiscount","maximumReslaePrice","markupMargin","props","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","isShow","_jsx","_Fragment","children","_jsxs","CModal","alignment","onClose","closeErrorModal","CModalHeader","CModalTitle","CModalBody","errorContain","CModalFooter","CButton","color","onClick","initData","uid","ShortUniqueId","length","childPath","useParams","open","setOpen","_useState3","_useState4","currentItemIdx","setCurrentItemIdx","_useState5","_useState6","setBasicInfo","_useState7","_useState8","itemDataLists","setItemDataLists","_useState9","_useState10","isShowModal","setShowModal","_useState11","keywords","level","_useState12","searchParams","setSearchParams","_useState13","_useState14","searchItems","setSearchItems","_useState15","_useState16","subTotal","setSubTotal","onChangeItemValue","idx","name","value","newCurrentItem","cloneDeep","newItemDataLists","Math","round","countSubTotal","itemLists","forEach","item","onChangeInfoValue","newInfoData","addUniKey","arraydata","map","element","_objectSpread","uniKey","rnd","CForm","action","method","CRow","className","CCol","md","CFormInput","label","placeholder","defaultValue","onChange","e","target","required","type","ErrorModal","shape","newDataLists","concat","_toConsumableArray","console","log","CTable","hover","columns","key","_style","minWidth","_props","CTableBody","CTableRow","CTableDataCell","align","size","disabled","readOnly","CIcon","icon","cilFindInPage","index","min","priceFormat","CInputGroup","CInputGroupText","splice","deleteItem","cilMinus","colSpan","CFormTextarea","rows","minLength","CFormSelect","variant","itemName","purchaseUnit","purchasePeriod","width","CFormCheck","id"],"sourceRoot":""}