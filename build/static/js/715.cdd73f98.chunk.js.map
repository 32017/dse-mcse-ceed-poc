{"version":3,"file":"static/js/715.cdd73f98.chunk.js","mappings":"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","sources":["views/Share/Pagenate.js","views/quoteToCash/QuotationReport.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from 'react-paginate'\nimport PropTypes from 'prop-types'\n\nconst Pagenate = ({ totalPages, currentPage, handlePageChange }) => {\n  return (\n    <ReactPaginate\n      previousLabel={'← Previous'}\n      nextLabel={'Next →'}\n      pageCount={totalPages}\n      forcePage={currentPage}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      containerClassName={'pagination'}\n      previousLinkClassName={'pagination__link'}\n      nextLinkClassName={'pagination__link'}\n      disabledClassName={'pagination__link--disabled'}\n      activeClassName={'pagination__link--active'}\n    />\n  )\n}\nexport default Pagenate\nPagenate.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n}\n","import React, { useState, useEffect } from 'react'\nimport { CContainer, CRow, CCol, CButton, CFormInput } from '@coreui/react'\nimport { quotationReportList } from '../../mocks/quotationData'\nimport priceFormat from '../../utils/priceFormat'\nimport Pagenate from '../Share/Pagenate'\n\nconst QuotationReport = () => {\n  const [data, setData] = useState([])\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages] = useState(0)\n  const itemsPerPage = 10\n\n  useEffect(() => {\n    // axios.get('https://jsonplaceholder.typicode.com/posts/').then((response) => {\n    setData(quotationReportList)\n    setTotalPages(Math.ceil(quotationReportList.length / itemsPerPage))\n    // })\n  }, [])\n\n  const startIndex = currentPage * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const subset = data.slice(startIndex, endIndex)\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected)\n  }\n  return (\n    <div className=\"lists-container\">\n      <CContainer>\n        <div className=\"form-box\">\n          <CRow>\n            <CCol sm={3}>\n              <CFormInput label=\"客戶名稱\" placeholder=\"請輸入客戶名稱\" />\n            </CCol>\n            <CCol md={3}>\n              <CFormInput type=\"date\" label=\"起始日期\" placeholder=\"請輸入日期\" />\n            </CCol>\n            <CCol sm={2} className=\"d-flex align-items-end\">\n              <CButton color=\"primary\">搜尋</CButton>\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"list-head\">\n          <CRow>\n            <CCol className=\"text-align-center\" sm={1}>\n              客戶名稱\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              訂單編號\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              Part Number\n            </CCol>\n            <CCol className=\"text-align-center\" sm={2}>\n              Product Description\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              Usage start Date\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              Unit of Measure\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              Unit of Price\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              License Qty\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              Total Amount\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              MS CPS Price\n            </CCol>\n            <CCol className=\"text-align-center\" sm={1}>\n              MS Cost Total\n            </CCol>\n          </CRow>\n        </div>\n        <div className=\"list-body\">\n          {subset &&\n            subset.length > 0 &&\n            subset.map((item) => {\n              return (\n                <div className=\"list-item\" key={item.num}>\n                  <CRow>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.client}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.num}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.partNum}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={2}>\n                      {item.productDes}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.startDate}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.measure}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.unitPrice}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {item.QTY}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {priceFormat(item.totalAmount)}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {priceFormat(item.CPSprice)}\n                    </CCol>\n                    <CCol className=\"text-align-center\" sm={1}>\n                      {priceFormat(item.costTotal)}\n                    </CCol>\n                  </CRow>\n                </div>\n              )\n            })}\n        </div>\n        {data.length > itemsPerPage && (\n          <Pagenate\n            totalPages={totalPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </CContainer>\n    </div>\n  )\n}\n\nexport default QuotationReport\n"],"names":["_ref","totalPages","currentPage","handlePageChange","_jsx","ReactPaginate","previousLabel","nextLabel","pageCount","forcePage","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","setCurrentPage","_useState5","_useState6","setTotalPages","useEffect","quotationReportList","Math","ceil","length","startIndex","endIndex","subset","slice","className","children","_jsxs","CContainer","CRow","CCol","sm","CFormInput","label","placeholder","md","type","CButton","color","map","item","client","num","partNum","productDes","startDate","measure","unitPrice","QTY","priceFormat","totalAmount","CPSprice","costTotal","Pagenate","selectedPage","selected"],"sourceRoot":""}